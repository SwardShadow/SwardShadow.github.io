<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>归墟</title>
  <subtitle>Catch the Timer</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-10-28T02:42:30.299Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>赵文元</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Node-express</title>
    <link href="http://yoursite.com/2017/09/15/express/"/>
    <id>http://yoursite.com/2017/09/15/express/</id>
    <published>2017-09-15T15:21:31.000Z</published>
    <updated>2017-10-28T02:42:30.299Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Node-js-express"><a href="#Node-js-express" class="headerlink" title="Node.js - express"></a>Node.js - express</h1><h2 id="什么是Express-js"><a href="#什么是Express-js" class="headerlink" title="什么是Express.js"></a>什么是Express.js</h2><ol>
<li>Express 是一个基于 Node.js 平台的极简、灵活的 web 应用开发框架；</li>
<li>Express 不对 Node.js 已有的特性进行二次抽象，只是在Node.js之上扩展了构建 Web 应用所需的基本功能。</li>
</ol>
<blockquote>
<p>总结什么是Express.js：是一个基于Node.js的Web开发框架。Express框架并没有覆盖或删除原生的API，而是基于原生的API，做了进一步的封装，提供了更好用的一些API，方便快速进行Web开发！<br>res.render、res.json、res.redirect、req.query<br>Node.js是Javascript的服务器端运行环境！express只是基于Node，提供了开发Web应用的框架和API。</p>
</blockquote>
<h2 id="如何创建基本的HTTP服务（新旧方式对比）"><a href="#如何创建基本的HTTP服务（新旧方式对比）" class="headerlink" title="如何创建基本的HTTP服务（新旧方式对比）"></a>如何创建基本的HTTP服务（新旧方式对比）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">var express = require(&apos;express&apos;);</div><div class="line"></div><div class="line">// 创建一个 app 出来</div><div class="line">var app = express();</div><div class="line"></div><div class="line">// 捕获 get 类型的 / 请求</div><div class="line">app.get(&apos;/&apos;, function (req, res) &#123;</div><div class="line">  // 支持原生的 end 方法</div><div class="line">  res.end(&apos;OK&apos;);</div><div class="line">&#125;);</div><div class="line">// 捕获 get 类型的 /a 请求</div><div class="line">app.get(&apos;/a&apos;, function (req, res) &#123;</div><div class="line">  // 通过 express 封装的 send 方法，返回内容，会自动添加响应头，更加方便便捷</div><div class="line">  res.send(&apos;&lt;h1&gt;你好啊&lt;/h1&gt;&apos;);</div><div class="line">&#125;);</div><div class="line"></div><div class="line">// 启动 app 监听程序</div><div class="line">app.listen(3000, function () &#123;</div><div class="line">  console.log(&apos;App running at http://127.0.0.1:3000&apos;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h2 id="http模块原生end方法和-express中send方法的对比"><a href="#http模块原生end方法和-express中send方法的对比" class="headerlink" title="http模块原生end方法和 express中send方法的对比"></a>http模块原生<code>end</code>方法和 express中<code>send</code>方法的对比</h2><ol>
<li>send方法中默认处理了中文乱码问题</li>
<li>send方法默认返回的格式就是HTML类型的文本内容</li>
</ol>
<h2 id="根据不同的路由method和url响应不同的文本消息"><a href="#根据不同的路由method和url响应不同的文本消息" class="headerlink" title="根据不同的路由method和url响应不同的文本消息"></a>根据不同的路由<code>method</code>和<code>url</code>响应不同的文本消息</h2><h2 id="根据不同的路由method和url响应不同的html页面"><a href="#根据不同的路由method和url响应不同的html页面" class="headerlink" title="根据不同的路由method和url响应不同的html页面"></a>根据不同的路由<code>method</code>和<code>url</code>响应不同的html页面</h2><ol>
<li>res.sendFile</li>
</ol>
<h2 id="分别从原生和express的app-js中抽离router路由模块"><a href="#分别从原生和express的app-js中抽离router路由模块" class="headerlink" title="分别从原生和express的app.js中抽离router路由模块"></a>分别从原生和express的<code>app.js</code>中抽离<code>router</code>路由模块</h2><h2 id="Express中的路由"><a href="#Express中的路由" class="headerlink" title="Express中的路由"></a>Express中的路由</h2><h2 id="杂乱的问题"><a href="#杂乱的问题" class="headerlink" title="杂乱的问题"></a>杂乱的问题</h2><p><strong>ES6中属性和属性值一样的话可以直接省略</strong><br>forEach只要开始的话就没法停止了，所以使用数组的some方法，返回return true;即可停止循环。  </p>
<h2 id="创建最基本的web前端服务器"><a href="#创建最基本的web前端服务器" class="headerlink" title="创建最基本的web前端服务器"></a>创建最基本的web前端服务器</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 导入express模块</span></div><div class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">"require"</span>);</div><div class="line"><span class="comment">// 创建一个服务器</span></div><div class="line"><span class="keyword">const</span> app = express();</div><div class="line"><span class="comment">// 使用app.use方法，接收客户端的任何method类型的任何URL地址请求</span></div><div class="line">app.use(<span class="string">"/index"</span>, (req, res) =&gt; &#123;</div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * res.end("express ok");</span></div><div class="line"><span class="comment">	 * res.end("你好啊，皮还是你皮");</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	res.send(<span class="string">"&lt;h2&gt;皮还是你皮&lt;/h2&gt;"</span>);</div><div class="line">&#125;)</div><div class="line"><span class="comment">// 启动express服务器</span></div><div class="line">app.listen(<span class="number">3001</span>, () =&gt; &#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">"express server running at http://127.0.0.1:3001"</span>);</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h2 id="根据不同的URL和method返回不同的内容"><a href="#根据不同的URL和method返回不同的内容" class="headerlink" title="根据不同的URL和method返回不同的内容"></a>根据不同的URL和method返回不同的内容</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 导入express模块</span></div><div class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">"express"</span>);</div><div class="line"><span class="comment">// 创建express的服务器实例</span></div><div class="line"><span class="keyword">const</span> app = express();</div><div class="line"><span class="comment">// 使用app.use可以接受所有请求</span></div><div class="line"><span class="comment">// app.use(function(req,res)&#123;&#125;);</span></div><div class="line">app.get(<span class="string">"/"</span>, (req, res) =&gt; &#123;</div><div class="line">	res.send(<span class="string">"&lt;h1&gt;express-首页&lt;/h2&gt;"</span>);</div><div class="line">&#125;)</div><div class="line">app.get(<span class="string">"/movie"</span>, (req, res) =&gt; &#123;</div><div class="line">	res.send(<span class="string">"&lt;h1&gt;express-电影&lt;/h2&gt;"</span>);</div><div class="line">&#125;)</div><div class="line">app.post(<span class="string">"/about"</span>, (req, res) =&gt; &#123;</div><div class="line">	res.send(<span class="string">"&lt;h1&gt;express-电影&lt;/h1&gt;"</span>);</div><div class="line">&#125;)</div><div class="line">app.use(<span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</div><div class="line">	res.send(<span class="string">"404"</span>);</div><div class="line">&#125;)</div><div class="line"><span class="comment">// 调用app.listen方法，指定端口号并启动web服务器</span></div><div class="line">app.listen(<span class="number">3001</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">"Express server running at http://127.0.0.1:3001"</span>);</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h2 id="返回不同的页面"><a href="#返回不同的页面" class="headerlink" title="返回不同的页面"></a>返回不同的页面</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">"express"</span>);</div><div class="line"><span class="keyword">const</span> app = express();</div><div class="line">app.get(<span class="string">"/"</span>, (req, res) =&gt; &#123;</div><div class="line">	<span class="comment">// res.render("index",&#123;&#125;);</span></div><div class="line">	res.sendFile(__dirname + <span class="string">"/views/index.html"</span>);</div><div class="line">&#125;)</div><div class="line">app.get(<span class="string">"/movie"</span>, (req, res) =&gt; &#123;</div><div class="line">	<span class="comment">// res.render("movie",&#123;&#125;);</span></div><div class="line">	res.sendFile(__dirname + <span class="string">"/views/movie.html"</span>);</div><div class="line">&#125;)</div><div class="line">app.post(<span class="string">"/about"</span>, (req, res) =&gt; &#123;</div><div class="line">	<span class="comment">// res.render("about",&#123;&#125;);</span></div><div class="line">	res.sendFile(__dirname + <span class="string">"/views/about.html"</span>);</div><div class="line">&#125;)</div><div class="line">app.listen(<span class="number">3001</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">"App listening on port 3001!"</span>);</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h2 id="express处理静态资源"><a href="#express处理静态资源" class="headerlink" title="express处理静态资源"></a>express处理静态资源</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 导入express模块</span></div><div class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">"express"</span>);</div><div class="line"><span class="comment">// 创建express的服务器实例</span></div><div class="line"><span class="keyword">const</span> app = express();</div><div class="line"><span class="comment">// 问题：如果我访问图片的时候，很任性，就想在路径前面带上images</span></div><div class="line">app.use(<span class="string">"/myVirtualPath"</span>, express.static(<span class="string">"images"</span>));</div><div class="line"><span class="comment">// 1.jpg</span></div><div class="line"><span class="comment">// 注意：在使用app.use(express.static("托管的资源目录"))的时候，可以在前面挂载虚拟路径</span></div><div class="line">app.get(<span class="string">"/"</span>, (req, res) =&gt; &#123;</div><div class="line">	res.sendFile(__dirname + <span class="string">"/index.html"</span>);</div><div class="line">&#125;)</div><div class="line"><span class="comment">// 调用app.listen方法，指定端口号并启动web服务器</span></div><div class="line">app.listen(<span class="number">3001</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="number">3001</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">		<span class="built_in">console</span>.log(<span class="string">"Express server running at http://127.0.0.1:3001"</span>);</div><div class="line">	&#125;)</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h2 id="中间件的处理过程"><a href="#中间件的处理过程" class="headerlink" title="中间件的处理过程"></a>中间件的处理过程</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 引入模块</span></div><div class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">"express"</span>);</div><div class="line"><span class="keyword">const</span> app = express();</div><div class="line">app.use(<span class="function"><span class="keyword">function</span> (<span class="params">req, res, next</span>) </span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">"要开始处理了"</span>);</div><div class="line">	req.name1 = <span class="string">"zd"</span>;</div><div class="line">	next();</div><div class="line">&#125;)</div><div class="line">app.use(<span class="string">"/"</span>, (req, res, next) =&gt; &#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">"1"</span>);</div><div class="line">	<span class="built_in">console</span>.log(req.name1);</div><div class="line">	res.end(<span class="string">"ok"</span>);</div><div class="line">	next();</div><div class="line">&#125;)</div><div class="line">app.use(<span class="string">"/"</span>, (req, res) =&gt; &#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">"2"</span>);</div><div class="line">	res.end(<span class="string">"No"</span>);</div><div class="line">&#125;)</div><div class="line"><span class="comment">// 注意，当前面中间件表示调用了res.end相关的方法，那么后续的中间件的res.end就没有效果了</span></div><div class="line"><span class="comment">// 在中间件中，任何对req和res的修改，都要放在next()调用之前</span></div><div class="line">app.listen(<span class="number">3000</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">"App listening on http://127.0.0.1:3000"</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h2 id="中间件的概念"><a href="#中间件的概念" class="headerlink" title="中间件的概念"></a>中间件的概念</h2><p>在自来水的处理过程中，中间的每一个处理环节，可以叫做中间件！<br>中间件就是用来处理原材料的，那么，在自来水处理过程中，处理的原料是水；在express中，中间件处理的原料是 request 对象 和 response 对象；<br><img src="images/自来水处理过程.jpg" alt="自来水处理过程"></p>
<p><strong>概念：</strong>中间件（Middleware） <strong>是一个函数</strong>，它可以访问<strong>请求对象</strong>（request object (req)）, <strong>响应对象</strong>（response object (res)）, 和 web 应用中处于请求-响应循环流程中的中间件，一般被命名为 next 的变量。</p>
<p>经过中间件的处理之后，express就向 req 和 res ,对象身上，挂在了一些好用的方法和属性<br>req.query<br>res.send()<br>res.json()</p>
<ul>
<li>中间件的功能包括：<ul>
<li>执行任何代码。</li>
<li>修改请求和响应对象。</li>
<li>终结请求-响应循环。</li>
<li>调用堆栈中的下一个中间件。</li>
</ul>
</li>
</ul>
<h2 id="body-parser-中间件的使用步骤"><a href="#body-parser-中间件的使用步骤" class="headerlink" title="body-parser 中间件的使用步骤"></a>body-parser 中间件的使用步骤</h2><p>在 express 中，可以使用 body-parser 第三方中间件，去帮我们出去 post 提交过来的数据</p>
<ol>
<li>使用 npm 安装</li>
<li>导入 这个第三方中间件 模块</li>
<li>使用 app.use()注册刚才导入的中间件，到 app身上</li>
</ol>
<h2 id="Express-里中间件的分类（形式上的分类）"><a href="#Express-里中间件的分类（形式上的分类）" class="headerlink" title="Express 里中间件的分类（形式上的分类）"></a>Express 里中间件的分类（形式上的分类）</h2><ol>
<li>应用级别的中间件： 所有挂载到 app 身上的方法，都叫做 “应用级别的中间件”  app.get  app.post  app.use</li>
<li>路由级别的中间件： 挂载到了 router 对象上，这个 router 对象 是经过调用 <code>express.Router()</code> 得到了；    router.get    router.post   router.use</li>
<li>错误处理中间件: 有四个参数   err, req, res, next</li>
<li>express唯一的一个内置中间件： express.static(root, [options]) 用于托管静态资源</li>
<li>第三方中间件： 非Express官方提供的中间件，叫做第三方中间件</li>
</ol>
<h2 id="在Express中使用路由"><a href="#在Express中使用路由" class="headerlink" title="在Express中使用路由"></a>在Express中使用路由</h2><ol>
<li><p>定义路由的 <code>router</code> 文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">var express = require(&apos;express&apos;);</div><div class="line">// 使用 express 的 Router() 方法，得到一个路由实例</div><div class="line">var router = express.Router();</div><div class="line"></div><div class="line">// 通过 Method 和 请求路径，分发不同的请求到不同的处理函数中</div><div class="line">router.get(&apos;/&apos;, function (req, res) &#123;</div><div class="line">  res.send(&apos;&lt;h1&gt;首页&lt;/h1&gt;&apos;);</div><div class="line">&#125;).get(&apos;/movie&apos;, function (req, res) &#123;</div><div class="line">  res.send(&apos;&lt;h1&gt;电影&lt;/h1&gt;&apos;);</div><div class="line">&#125;);</div><div class="line"></div><div class="line">module.exports = router;</div></pre></td></tr></table></figure>
</li>
<li><p>导入路由并注册使用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">var express = require(&apos;express&apos;);</div><div class="line">// 导入路由</div><div class="line">var router = require(&apos;./router&apos;);</div><div class="line"></div><div class="line">// 创建一个 app 出来</div><div class="line">var app = express();</div><div class="line">// 注册路由</div><div class="line">app.use(router);</div><div class="line"></div><div class="line">// 启动 app 监听程序</div><div class="line">app.listen(3000, function () &#123;</div><div class="line">  console.log(&apos;App running at http://127.0.0.1:3000&apos;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
</li>
<li><p>express在挂载路由的时候，撤了能够分开写，也为我们提供了链式编程 </p>
</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">router.get(<span class="string">"/"</span>,(req,res)=&gt;&#123;</div><div class="line">    &lt;!--渲染一个静态(只有单纯的html结构，样式，基本的js，没有动态的数据交互)的首页页面--&gt;</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<ol>
<li>方案总结<ul>
<li>方案1：使用fs模块读取首页文件中的字符串，然后调用res.end返回</li>
<li>方案2：使用art-template之类的模版引擎，然后使用res.end返回</li>
<li>方案3：使用res.sendFile渲染页面</li>
</ul>
</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">res.sendFile(path.join(__dirname,<span class="string">"/views/index.html"</span>));</div><div class="line">&lt;!--全局暴露--&gt;</div><div class="line"><span class="built_in">module</span>.exports=router;</div></pre></td></tr></table></figure>
<ol>
<li>总结：针对于纯静态页面的渲染，我们不必每次监听路由请求，可以使用唯一的内置中间件express.static()来快速托管静态页面。</li>
<li>使用express.static()防范，除了可以托管css，js，images，还可以托管不需要使用【服务器端渲染】的静态页面。而<strong>客户端倪渲染的页面也可以使用它托管</strong></li>
<li>能使用的原因是：客户端的渲染分为两步，第一步是请求页面拿到页面的html结构，第二部在页面中会有一个模版字符串的区域，接下来引用art-template.js的脚本，然后自己再写一段js代码来实现页面的渲染。所以完全可以使用express.static来渲染。</li>
</ol>
<h2 id="在express中使用模板引擎"><a href="#在express中使用模板引擎" class="headerlink" title="在express中使用模板引擎"></a>在express中使用模板引擎</h2><p><code>ejs</code>默认的模板文件后缀名是<code>.ejs</code>，如果你想让<code>ejs</code>模板引擎的默认后缀名是<code>.html</code>，需要进行相关的设置</p>
<h3 id="使用ejs"><a href="#使用ejs" class="headerlink" title="使用ejs"></a>使用ejs</h3><ol>
<li><p>运行npm安装<code>ejs</code>：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cnpm i ejs -S</div></pre></td></tr></table></figure>
</li>
<li><p>注册模板引擎：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">app.set(&apos;view engine&apos;, &apos;ejs&apos;);</div></pre></td></tr></table></figure>
</li>
<li><p>同时，也可以修改默认的模板文件存放路径：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">app.set(&apos;views&apos;, __dirname + &apos;/views&apos;);</div></pre></td></tr></table></figure>
</li>
<li><p>使用ejs将模板渲染出来，同时将渲染的结果发送给客户端：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">res.render(&apos;模板名称&apos;, &#123;&#125;); // 第一个参数是模板的名称，第二个参数是模板要渲染的数据</div></pre></td></tr></table></figure>
</li>
</ol>
<p>例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">// node.js调用render函数</div><div class="line">res.render(&apos;hero_index&apos;, &#123;</div><div class="line">        username: &apos;尼古拉斯·赵四&apos;,</div><div class="line">        hobby: [&apos;吃饭&apos;, &apos;唱歌&apos;, &apos;打电话&apos;],</div><div class="line">        isShow: false</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>html模板字符串：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;body&gt;</div><div class="line">    &lt;h1 style=&quot;color:&lt;%= !isShow?&apos;red&apos;:&apos;&apos; %&gt;;&quot;&gt;这是EJS的模板页面 - &lt;%= username %&gt;&lt;/h1&gt;</div><div class="line">    &lt;% if(!isShow)&#123; %&gt;</div><div class="line">    &lt;h3&gt;这是一个漂亮的h3标题&lt;/h3&gt;</div><div class="line">    &lt;% &#125; %&gt;</div><div class="line">    &lt;ul&gt;</div><div class="line">        &lt;% hobby.forEach(function(item, i)&#123; %&gt;</div><div class="line">        &lt;li&gt;&lt;%= item %&gt;&lt;/li&gt;</div><div class="line">        &lt;% &#125;) %&gt;</div><div class="line">    &lt;/ul&gt;</div><div class="line">&lt;/body&gt;</div></pre></td></tr></table></figure></p>
<ol>
<li><p>如何修改ejs的定界符:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">// 导入 EJS 并修改定界符</div><div class="line">var ejs = require(&apos;ejs&apos;);</div><div class="line">ejs.delimiter = &apos;?&apos;;</div><div class="line"></div><div class="line">app.engine(&apos;ejs&apos;, ejs.renderFile);</div><div class="line">// 设置完毕之后，在调用res.render()函数的时候，模板文件必须带后缀名</div></pre></td></tr></table></figure>
</li>
<li><p>如何使用公共模板：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;!--导入公共的头部--&gt;</div><div class="line">&lt;?- include(&apos;header&apos;) ?&gt;</div><div class="line"></div><div class="line">&lt;h1&gt;ejs&lt;/h1&gt;</div><div class="line">&lt;ul&gt;</div><div class="line">  &lt;? names.forEach(function(item)&#123; ?&gt;</div><div class="line">    &lt;li&gt;&lt;?= item ?&gt;&lt;/li&gt;</div><div class="line">  &lt;? &#125;) ?&gt;</div><div class="line">&lt;/ul&gt;</div><div class="line"></div><div class="line">&lt;!--导入公共的底部--&gt;</div><div class="line">&lt;?- include(&apos;footer&apos;) ?&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>如何自定义ejs的模版文件后缀名</p>
<ul>
<li>导入ejs模块</li>
<li>使用app.engine方法，自定义一个模版引擎，其中，参数1是一个字符串类型的，表示自定义的模版引擎的名称，同时这个名称，也是模版页面的后缀名</li>
<li>参数2是一个方法的使用，表示调用该方法区域渲染模版页面</li>
<li><strong>IDE(集成开发环境)</strong></li>
<li>注意：==设置默认模版引擎，如果不设置调用res.render会报错==</li>
</ul>
</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 设置默认模版页面的存放路径</span></div><div class="line">app.set(<span class="string">"views"</span>, <span class="string">"./views"</span>);</div><div class="line">app.get(<span class="string">"/"</span>, (req, res) =&gt; &#123;</div><div class="line">	res.render(<span class="string">"index.html"</span>, &#123;</div><div class="line">		title: <span class="string">"QQQ"</span></div><div class="line">	&#125;);</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h2><ul>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify" target="_blank" rel="external">MDN - JSON.stringify()</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/FileReader" target="_blank" rel="external">MDN - FileReader</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/FormData" target="_blank" rel="external">MDN - FormData</a></li>
<li><a href="http://www.expressjs.com.cn/" target="_blank" rel="external">Express - 中文网</a></li>
<li><a href="http://expressjs.com/" target="_blank" rel="external">Express - 英文官网</a></li>
<li><a href="http://www.runoob.com/nodejs/nodejs-tutorial.html" target="_blank" rel="external">Node.js 教程</a></li>
<li><a href="https://www.runoob.com/w3cnote/express-4-x-api.html" target="_blank" rel="external">菜鸟教程 - Express 4.x API 中文文档</a></li>
<li><a href="https://blog.gtwang.org/programming/learn-to-use-the-new-router-in-expressjs-4/" target="_blank" rel="external">Express.js 4.0 的路由（Router）功能用法教學</a></li>
<li><a href="https://github.com/aui/art-template" target="_blank" rel="external">github - art-template</a></li>
<li><a href="https://github.com/aui/express-art-template" target="_blank" rel="external">github - express-art-template</a></li>
<li><a href="https://github.com/mde/ejs" target="_blank" rel="external">github - ejs</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Node-js-express&quot;&gt;&lt;a href=&quot;#Node-js-express&quot; class=&quot;headerlink&quot; title=&quot;Node.js - express&quot;&gt;&lt;/a&gt;Node.js - express&lt;/h1&gt;&lt;h2 id=&quot;什么是Expres
    
    </summary>
    
      <category term="Node" scheme="http://yoursite.com/categories/Node/"/>
    
    
      <category term="Node" scheme="http://yoursite.com/tags/Node/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式</title>
    <link href="http://yoursite.com/2017/09/11/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://yoursite.com/2017/09/11/正则表达式/</id>
    <published>2017-09-11T13:21:51.000Z</published>
    <updated>2017-10-28T02:41:57.820Z</updated>
    
    <content type="html"><![CDATA[<h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><p>正则表达式(regular expression)描述了一种字符串匹配的模式（pattern)，可以用来检查一个串是否含有某种字串，将匹配的字串替换或者从某个串中取出符合某个条件的字符串等。<br>构造正则表达式的方法和创建数学表达式的方法一样。也就是用多种==元字符==与运算符可以将小的表达式结合在一起来创建更大的表达式。正则表达式的组件可以是单个的字符，字符的集合，字符范围，字符间的选择或者所有这些组件的任意组合。<br>正则表达式是由普通字符（例如数字0-9）以及特殊字符（称为“元字符”）组成的文字模式。模式描述在搜索文本时要匹配的一个或多个字符串。正则表达式作为一个末班，将某个字符模式与所搜索的字符串进行匹配。</p>
<h3 id="普通字符"><a href="#普通字符" class="headerlink" title="普通字符"></a>普通字符</h3><p>普通字符包括没有显示指定为元字符的所有可打印和不可打印字符。这包括所有大写和小写字母，所有数字，所有标点符号和一些其他符号。  </p>
<h3 id="非打印字符"><a href="#非打印字符" class="headerlink" title="非打印字符"></a>非打印字符</h3><p>非打印字符也可以是正则表达式的组成部分。下标列出了表示非字符的转意序列：</p>
<table>
<thead>
<tr>
<th>字符</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>\cx</td>
<td>匹配由x指明的控制字符。例如，\cM匹配一个Control-M或回车符。x的值必须为A-Z或a-z之一。否则，将c视为一个原意的’c’字符。</td>
</tr>
<tr>
<td>\f</td>
<td>匹配一个换页符。等价于\x0c和\cL。</td>
</tr>
<tr>
<td>\n</td>
<td>匹配一个换行符。等价于\x0c和\cJ。</td>
</tr>
<tr>
<td>\r</td>
<td>匹配一个回车符。等价于\x0d和\cM。</td>
</tr>
<tr>
<td>\s</td>
<td>匹配任何空白字符，包括空格，制表符，换页符等等。等价于[\f\n\r\t\v]。</td>
</tr>
<tr>
<td>\S</td>
<td>匹配任何非空白字符。等价于[^\f\n\r\t\v]。</td>
</tr>
<tr>
<td>\t</td>
<td>匹配一个制表符。等价于\x09和\cI。</td>
</tr>
<tr>
<td>\v</td>
<td>匹配一个垂直制表符。等价于\x0b和\cK。</td>
</tr>
</tbody>
</table>
<h3 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h3><p>所谓特殊字符，就是一些有特殊含义的字符。<br>许多元字符要求在试图匹配他们时特别对待，若要匹配这些特殊字符，必须首先使字符“转义”，即将反斜杠字符\放在他们前面。下标列出了正则表达式中的特殊字符：</p>
<table>
<thead>
<tr>
<th>特殊字符</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>$</td>
<td>匹配输入字符串的结尾位置。如果设置了RegExp对象的Muliline属性，则$也匹配’\n’或’\r’。要匹配$字符本身，请使用\$。</td>
</tr>
<tr>
<td>()</td>
<td>标记一个子表达式的开始和结束位置。子表达式可以获取提供以后使用。要匹配这些字符，请使用\（和\）。</td>
</tr>
<tr>
<td>*</td>
<td>匹配前看的子表达式零次或多次。要匹配本字符请使用*。</td>
</tr>
<tr>
<td>+</td>
<td>匹配前面的子表达式一次或多次。要匹配+字符，请使用+。</td>
</tr>
<tr>
<td>.</td>
<td>匹配除换行符\n之外的任何单字符。要匹配.,请使用.。</td>
</tr>
<tr>
<td>[</td>
<td>标记一个中括号表达式的开始。要匹配[，请使用[。</td>
</tr>
<tr>
<td>?</td>
<td>匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。要匹配？字符，请使用\?。</td>
</tr>
<tr>
<td>\</td>
<td>将下一个字符标记为或特殊字符,或原义字符,或向后引用，或八进制转义符。例如，’n’匹配字符’n’。’\n’匹配换行符。序列’\‘匹配’\’,而’(‘则匹配’(‘。</td>
</tr>
<tr>
<td>^</td>
<td>匹配输入字符串的开始位置，除非在方括号表达式中使用，此时它表示不接受该字符和。要匹配^字符本身，请使用\^。</td>
</tr>
<tr>
<td>{</td>
<td>标记限定符表达式的开始。要匹配{,请使用{。</td>
</tr>
<tr>
<td></td>
<td>（这是竖线）</td>
<td>指明两项之间的一个选择。要匹配（竖线），请使用\</td>
<td>。</td>
</tr>
</tbody>
</table>
<h3 id="限定符"><a href="#限定符" class="headerlink" title="限定符"></a>限定符</h3><p>限定符用来指定正则表达式的一个给定组件必须要出现多少次才能满足匹配。有*或+或?或{n}或{n,}或{n,m}共6种。</p>
<table>
<thead>
<tr>
<th>字符</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>*</td>
<td>匹配前面的子表达式零次或多次。例如，zo<em>能匹配”z”以及”zoo”。</em>等价于{0}。</td>
</tr>
<tr>
<td>+</td>
<td>匹配前面的子表达式一次或多次。例如，’zo+’能匹配’zo’以及’zoo’，但是不能匹配”z”。+等价于{1,}。</td>
</tr>
<tr>
<td>?</td>
<td>匹配前面的子表达式零次或者一次。例如，”do(es)?”可以匹配”do”或”does”中的”do”.?等价于{0,1}。</td>
</tr>
<tr>
<td>{n}</td>
<td>n是一个非负整数。匹配确定的n次。例如’o{2,}’不能匹配”Bob”中的’o’,但是可以匹配”food”中的两个o。</td>
</tr>
<tr>
<td>{n,}</td>
<td>n是一个非负整数。至少匹配n次。例如，’o{2,}’不能匹配”Bob”中的’o’,但是能匹配到”foooooood”中的所有的’o’。’o{1,}’等价于’o+。’o{0,}’则等等价于’o*’。</td>
</tr>
<tr>
<td>{n,m}</td>
<td>m和n均为非负整数，其中n&lt;=m。最少匹配n次且最多匹配m次。例如，”o{1,3}”将匹配”fooooof”中的前三个o。’o{0,1}’等价于’o?’。请注意在逗号和两个数之间不能有 空格</td>
</tr>
</tbody>
</table>
<h4 id="、-和-限定符都是贪婪的，因为它们会尽可能多的匹配文字，只有在它们的后面加上一个-就可以实现非贪婪或最小匹配。"><a href="#、-和-限定符都是贪婪的，因为它们会尽可能多的匹配文字，只有在它们的后面加上一个-就可以实现非贪婪或最小匹配。" class="headerlink" title="*、+和?限定符都是贪婪的，因为它们会尽可能多的匹配文字，只有在它们的后面加上一个?就可以实现非贪婪或最小匹配。"></a>*、+和?限定符都是贪婪的，因为它们会尽可能多的匹配文字，只有在它们的后面加上一个?就可以实现非贪婪或最小匹配。</h4><h3 id="定位符"><a href="#定位符" class="headerlink" title="定位符"></a>定位符</h3><p>定位符使你能够将正则表达式固定到行首或行尾。它们爱使你能后闯将这样的正则表达式，这些正则表达式出现在一个单词内、在一个单词的开头或者一个单词的结尾。<br>定位符用哪个来描述字符串或单词的边界，^和$分别指字符串的开始和结束，span class=”marked”&gt;\b描述单词的前或后边界，span class=”marked”&gt;\B表示非单词边界。<br>正则表达式的限定符有：</p>
<table>
<thead>
<tr>
<th>字符</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>^</td>
<td>匹配输入字符串开始的位置。如果设置了RegExp对象的Multiline属性，^还会与\n或\r之后的位置匹配。</td>
</tr>
<tr>
<td>$</td>
<td>匹配输入字符串结尾的位置。如果设置了RegExp对象的Multiline属性，$还会与\n或\r之前的位置匹配</td>
</tr>
<tr>
<td>\b</td>
<td>匹配一个字边界，即字与空格间的位置。</td>
</tr>
<tr>
<td>\B</td>
<td>非字边界匹配。</td>
</tr>
</tbody>
</table>
<p>注意：不能将限定符与定位点一起使用。由于在紧靠转行或者字边界的前面或后面不能有一个以上位置，因此不予许诸如^$之类的表达式。<br>若要匹配一行文本开始处的文本，请在正则表达式的开头使用^字符，不要将^的这种用法与中括号表达式中的用法混淆。<br>若要匹配一行文本的结束处的文本，请在正则表达的结束处使用$字符。<br>字边界是单词和空格之间的位置。非字边界是任意其他位置。<br>对于\B非字边界运算符，位置并不重要，因为匹配不关心究竟是单词的开头还是结尾。</p>
<h3 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h3><p>用圆括号将所有选择项括起来，相邻的选择项之间用|分隔。但用圆括号会有一个副作用，是相关的匹配会被缓存，此时可用?:方法第一个选项前来消除这种副作用。<br>其中?:是非捕获元之一，还有两个非捕获元是?=和?!，这两个还有更多的含义，前者为正向预查，在任何开始匹配圆括号内的正则表达式模式的位置来匹配搜索字符串，后者为负向预查，在任何开始不匹配该正则表达式模式的位置来匹配搜素字符串。</p>
<h3 id="反向引用"><a href="#反向引用" class="headerlink" title="反向引用"></a>反向引用</h3><p>对一个正则表达式模式或部分模式两边添加圆括号将导致相关匹配存储到一个临时缓冲区中，所捕获的每个子匹配都按照在正则表达式模式中从左到右出现的顺序存储。缓冲区编号从1开始，最多可存储99个不活的子表达式。每个缓冲区都可以使用\n访问，其中n为一个标识特定缓冲区的一位或两位的十进制数。<br>可以使用非捕获元字符?:、?=或?!来重写捕获，忽略对相关匹配的保存。<br>反向引用的最简单的、最有用额应用之一，是提供查找文本中两个相同的相邻单词的匹配项的能力。<br>字边界元字符确保只检测整个单词。词组是不识别的。<br>正则表达式后面的全局标记g指定将该表达式应用到输入字符串中能够查找到的尽可能多的匹配。<br>表达式的结尾处的不区分大小写i标记指定不区分大小写。<br>多行标记指定换行符的两边可能出现潜在的匹配。<br>反向引用还可以将通过资源指示符（URL）分解为其组件。假定你想分解为协议（ftp，http等等)、域地址和页/路径。</p>
<h2 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h2><table>
<thead>
<tr>
<th>字符</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>\</td>
<td>将写一个字符标记为一个特殊字符，或一个原义字符，或一个向后引用，或一个八进制转义符。例如，’n’匹配字符”n”。’\n’匹配一个换行符。序列’\‘匹配”\”而”(“则匹配”(“。</td>
</tr>
<tr>
<td>^</td>
<td>匹配输入字符串开始的位置。如果设置了RegExp对象的Multiline属性，^还会与\n或\r之后的位置匹配。 </td>
</tr>
<tr>
<td>$</td>
<td>匹配输入字符串结尾的位置。如果设置了RegExp对象的Multiline属性，$还会与\n或\r之前的位置匹配 </td>
</tr>
<tr>
<td>*</td>
<td>匹配前面的子表达式零次或多次。例如，zo<em>能匹配”z”以及”zoo”。</em>等价于{0}。</td>
</tr>
<tr>
<td>+</td>
<td>匹配前面的子表达式一次或多次。例如，’zo+’能匹配’zo’以及’zoo’，但是不能匹配”z”。+等价于{1,}。 </td>
</tr>
<tr>
<td>?</td>
<td>匹配前面的子表达式零次或者一次。例如，”do(es)?”可以匹配”do”或”does”中的”do”.?等价于{0,1}。</td>
</tr>
<tr>
<td>{n}</td>
<td>n是一个非负整数。匹配确定的n次。例如’o{2,}’不能匹配”Bob”中的’o’,但是可以匹配”food”中的两个o。</td>
</tr>
<tr>
<td>{n,}</td>
<td>n是一个非负整数。至少匹配n次。例如，’o{2,}’不能匹配”Bob”中的’o’,但是能匹配到”foooooood”中的所有的’o’。’o{1,}’等价于’o+。’o{0,}’则等等价于’o*’。</td>
</tr>
<tr>
<td>{n,m}</td>
<td>m和n均为非负整数，其中n&lt;=m。最少匹配n次且最多匹配m次。例如，”o{1,3}”将匹配”fooooof”中的前三个o。’o{0,1}’等价于’o?’。请注意在逗号和两个数之间不能有 空格</td>
</tr>
<tr>
<td>?</td>
<td>当该字符紧跟在任何一个其他限制符(*,+,?,{n},{n,}{n,m})后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所有搜索的字符串。例如，对于字符串”oooo”,’o+?’将匹配单个”o”,而”o+”将匹配所有的’o’。</td>
</tr>
<tr>
<td>.</td>
<td>匹配除换行符\n之外的任何单字符。要匹配’\n’在内的任何字符，请使用像”(.</td>
<td>\n)”的模式。</td>
</tr>
<tr>
<td>(pattern)</td>
<td>匹配pattern并获取这一匹配。所获取的匹配可以从产生的Matches集合得到，在VBScript中使用SubMatches集合，在JScript中则使用$0…$9属性。要匹配圆括号字符，请使用’(‘或’)‘。</td>
</tr>
<tr>
<td>(?:pattern)</td>
<td>匹配pattern但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储以后使用。这在使用”或”字符（</td>
<td>）来组合一个模式的各个部分是很有用。例如，’industr(?:y</td>
<td>ies)’就是一个比’industry</td>
<td>industries’更简略的表达式。</td>
</tr>
<tr>
<td>(?=pattern)</td>
<td>正向预查，在任何匹配pattern的自付一串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，’windows(?=95</td>
<td>98</td>
<td>NT</td>
<td>2000)’能匹配”windows 2000”中的”windows”，但不能匹配”windoes 3.1”中的”windows”。预查不消耗字符。也就是说，在一个匹配发生之后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td>
</tr>
<tr>
<td>(?!pattern)</td>
<td>负向预查，在任何不匹配pattern的字符串开始处匹配查找字符串。这是一个费获取匹配，也就是说，该匹配不需要获取供以后使用。例如，’windows(?!95</td>
<td>98</td>
<td>NT</td>
<td>2000)’能匹配”windows 3.1”中的”windows”，但不能匹配”windoes 2000”中的”windows”。预查不消耗字符。也就是说，在一个匹配发生之后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始</td>
</tr>
<tr>
<td>x竖线y</td>
<td>匹配x或y。例如，’z竖线food’能匹配”z”或”food”。’(z竖线f)ood’则匹配”zood”或”food”。</td>
</tr>
<tr>
<td>[xyz]</td>
<td>字符集合。匹配所包含的任意一个字符。例如，”[abc]”可以匹配”plain”中的”a”.</td>
</tr>
<tr>
<td>[^xyz]</td>
<td>负值字符集合。匹配未包含的任意字符。例如，’[^abc]’可以匹配”plain”中的”p”,”l”,”i”,”n”。</td>
</tr>
<tr>
<td>[a-z]</td>
<td>字符范围。匹配指定范围的任意字符。例如，’[a-z]’可以匹配a到z的范围内的任意小写字母字符。</td>
</tr>
<tr>
<td>[^a-z]</td>
<td>负值字符范围。匹配任何不在指定范围内的任意字符。例如，’[^a-z]’可以匹配任何不在a到z范围内的任意字符。</td>
</tr>
<tr>
<td>\b</td>
<td>匹配一个单词边界，也就是指单词和空格间的位置。例如，’er\b’可以匹配”never”中的’er’，但是不能匹配”verb”中的’er’。</td>
</tr>
<tr>
<td>\B</td>
<td>匹配非单词边界。’er\B’能匹配”verb”中的’er’，但是不能匹配”never”中的’er’。</td>
</tr>
<tr>
<td>\cx</td>
<td>匹配由x指明的控制字符。例如，\cM匹配一个Control-M或回车符。x的值必须为A-Z或a-z之一。否则，将c视为一个原意的’c’字符。</td>
</tr>
<tr>
<td>\d</td>
<td>匹配一个数字字符。等价于[0-9]。</td>
</tr>
<tr>
<td>\D</td>
<td>匹配一个非数字字符。等价于[^0-9]。</td>
</tr>
<tr>
<td>\f</td>
<td>匹配一个换页符，等价于\x0c和\cL。</td>
</tr>
<tr>
<td>\n</td>
<td>匹配一个换行符。等价于\x0c和\cJ。</td>
</tr>
<tr>
<td>\r</td>
<td>匹配一个回车符。等价于\x0d和\cM。</td>
</tr>
<tr>
<td>\s</td>
<td>匹配任何空白字符，包括空格，制表符，换页符等等。等价于[\f\n\r\t\v]。</td>
</tr>
<tr>
<td>\S</td>
<td>匹配任何非空白字符。等价于[^\f\n\r\t\v]。</td>
</tr>
<tr>
<td>\t</td>
<td>匹配一个制表符。等价于\x09和\cI。</td>
</tr>
<tr>
<td>\v</td>
<td>匹配一个垂直制表符。等价于\x0b和\cK。</td>
</tr>
<tr>
<td>\w</td>
<td>匹配包括下滑线的任何单词字符。等价于’[A-Za-z0-9]’。</td>
</tr>
<tr>
<td>\W</td>
<td>匹配任何非单词字符。等价于’[^A-Za-z0-9]’。</td>
</tr>
<tr>
<td>\xn</td>
<td>匹配n，期指那个n为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，’\x41’匹配”A”。’\x041’则等价于’\x04’&amp;”1”。正则表达式中可以使用ASCII编码。</td>
</tr>
<tr>
<td>\num</td>
<td>匹配num，其中num是一个正整数。对所获取的匹配的引用。例如，’(.)\1’匹配两个连续的相同字符。</td>
</tr>
<tr>
<td>\n</td>
<td>标识一个八进制转义值或一个向后引用。如果\n之前至少n个获取的子表达式，则n为向后引用。否则，如果n为八进制数字(0-7),则n为一个八进制转义值。</td>
</tr>
<tr>
<td>\nm</td>
<td>标识一个八进制转义值或一个向后引用。如果\nm之前至少有nm个获得子表达式，则nm为向后引用。如果\nm之前至少有n个获取，则n为一个后跟文字m的向后引用。如果前面的条件都不满足，若n和m均为八进制数字(0-7)，则\nm将匹配八进制转义值nm。</td>
</tr>
<tr>
<td>\nml</td>
<td>如果n为八进制数字(0-3)，且m和l均位八进制数字(0-7)，则匹配八进制转义值nml。</td>
</tr>
<tr>
<td>\un</td>
<td>匹配n，其中n是一个用四个十六进制数字表示的Unicode字符。例如，\u00A9匹配版权符号©。</td>
</tr>
</tbody>
</table>
<h3 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h3><p>正则表达式从左到右进行运算，并遵循优先级顺序，类似于算数表达式。<br>相同优先级的从左到右进行运算，不同优先级的运算先高后低。下标从最高到最低说明了各种正则表达式运算符的优先级顺序：</p>
<table>
<thead>
<tr>
<th>运算符</th>
<th>header 2</th>
</tr>
</thead>
<tbody>
<tr>
<td>\</td>
<td>转义符</td>
</tr>
<tr>
<td>(),(?:),(?=),[]</td>
<td>圆括号和方括号</td>
</tr>
<tr>
<td>*,+,?,{n},{n,},{n,m}</td>
<td>限定符</td>
</tr>
<tr>
<td>^,$,\任何元字符、任何字符</td>
<td>定位点和系列（即：位置和顺序）</td>
</tr>
<tr>
<td></td>
<td>（此处为竖线）</td>
<td>替换，”或”操作。字符具有高于替换运算符的优先级，使得”m</td>
<td>food”匹配”m”或者”food”。若要匹配”mood”或”food”，请使用括号创建子表达式，从而产生”(m</td>
<td>f)ood”。</td>
</tr>
</tbody>
</table>
<h3 id="匹配规则"><a href="#匹配规则" class="headerlink" title="匹配规则"></a>匹配规则</h3><h4 id="基本模式匹配"><a href="#基本模式匹配" class="headerlink" title="基本模式匹配"></a>基本模式匹配</h4><p>模式，是正则表达式最基本的元素。</p>
<h4 id="字符簇"><a href="#字符簇" class="headerlink" title="字符簇"></a>字符簇</h4><p>在internet的程序中，正则表达式通常用来验证用户的输入。更自由的描述我们要的模式的办法就是字符簇。<br>==PHP的正则表达式有一些内置的通用字符簇==</p>
<table>
<thead>
<tr>
<th>字符簇</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>[[:alpha:]]</td>
<td>任何字母</td>
</tr>
<tr>
<td>[[:digit:]]</td>
<td>任何数字</td>
</tr>
<tr>
<td>[[:alnum:]]</td>
<td>任何字母和数字</td>
</tr>
<tr>
<td>[[:space:]]</td>
<td>任何空白字符</td>
</tr>
<tr>
<td>[[:upper:]]</td>
<td>任何大写字母</td>
</tr>
<tr>
<td>[[:lower:]]</td>
<td>任何小写字母</td>
</tr>
<tr>
<td>[[:punct:]]</td>
<td>任何标点符号</td>
</tr>
<tr>
<td>[[:xdigit:]]</td>
<td>任何16进制的数字，相当于[0-9a-fA-F]</td>
</tr>
</tbody>
</table>
<h4 id="确定重复出现"><a href="#确定重复出现" class="headerlink" title="确定重复出现"></a>确定重复出现</h4><p>一个单词有若干个字母组成，一组数字有若干个单数组成。跟在字符或字符簇后面的花括号（{}）用来确定前面的内容的重复出现的次数。</p>
<table>
<thead>
<tr>
<th>字符簇</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>此处都有上箭头[a-zA-Z_]$</td>
<td>所有的字母和下划线</td>
</tr>
<tr>
<td>此处都有上箭头[[:alpha:]]{3}$</td>
<td>所有的3个字母的单词</td>
</tr>
<tr>
<td>^a$</td>
<td>字母a</td>
</tr>
<tr>
<td>^a{4}$</td>
<td>aaaa</td>
</tr>
<tr>
<td>^a{2,4}$</td>
<td>aa,aaa或aaaa</td>
</tr>
<tr>
<td>^a{1,3}$</td>
<td>a,aa或aaa</td>
</tr>
<tr>
<td>^a{2,}$</td>
<td>包含多余两个a的字符串</td>
</tr>
<tr>
<td>^a{2},</td>
<td>如：aardvark和aaab,但是apple不行</td>
</tr>
<tr>
<td>a{2,}</td>
<td>如：baad和aaa，但Nantucket不行</td>
</tr>
<tr>
<td>\t{2}</td>
<td>两个制表符</td>
</tr>
<tr>
<td>.{2}</td>
<td>所有的两个字符</td>
</tr>
</tbody>
</table>
<p>总结：花括号的三种用法：一个数字{x}的意思是前面的字符或字符簇只出现x次；一个数字加逗号{x,}的意思是前面的内容出现x或更多的次数；两个数字用逗号分隔的数字{x，y}表示前面的内容至少出现x次，但不超过y次。</p>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>正则表达式最简单的形式是在搜索字符串中匹配其本身的单个普通字符。<br>注意没有串联运算符。只需在一个字符后面键入另一个字符。<br>句点(.)匹配字符串中的各种打印或非打印字符，只有一个字符例外，这个例外就是换行符(\n)。<br>若要匹配包含文件名的字符串，而据点(.)是输入字符串的组成部分，请在正则表达式中的句点前面加反斜杠()字符。<br>若要创建匹配字符组的一个列表，情字啊方括号([和])内放置一个或更多单个字符。当字符括在中括号内时，该列表称为“中括号表达式”。与在任何别的位置一样，普通字符在中括号内表示其本省，即，它在输入文本中匹配一次其本省。大多数特殊字符在中括号表达式中出现时失去他们的意义。不过也有一些例外：  </p>
<ul>
<li>如果]字符不是第一项，它结束一个列表。若要匹配列表中的]字符，请将它放在第一位，紧跟在开始[后面。</li>
<li>\字符继续作为转义符，若要匹配\字符，请使用\。<br>若要在中括号表达式中包括连字符，方法有：</li>
</ul>
<ol>
<li>用反斜杠将它转义</li>
<li>将连字符放在中括号列表的开始或结尾。</li>
<li>创建一个范围，在该范围中，开始字符值小于连字符，而结束字符值大于或等于连字符。<br>若要查找不在列表或范围内的所有字符，请将插入符号(^)放在列表的开头。如果插入字符出现在列表中的其他任何位置，则它匹配其本身。<br>中括号表达式的典型用途是指定任何大写或小写字母与或任何数字的匹配。  <h4 id="替换和分组"><a href="#替换和分组" class="headerlink" title="替换和分组"></a>替换和分组</h4>替换使用字符来允许在两个或多个替换选项之间进行选择。<h4 id="创建正则表达式的方法："><a href="#创建正则表达式的方法：" class="headerlink" title="创建正则表达式的方法："></a>创建正则表达式的方法：</h4></li>
<li><p>调用系统得让构造函数创建</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">    <span class="keyword">var</span> reg1=<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="regexp">/[0-9]/</span>);</div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>字面量的方式创建正则函数  </p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">    <span class="keyword">var</span> reg2=<span class="regexp">/[0-9]/</span>;</div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure>
</li>
</ol>
<p>正则表达式后面加g表示全局模式下的寻找。字符串中有的方法是可以使用正则表达式作为参数使用的。<br>使用方法：test();   </p>
<h4 id="正则的分类"><a href="#正则的分类" class="headerlink" title="正则的分类"></a>正则的分类</h4><p>简单类<br>1.直接书写：必须是完整的，只能多不能少（顺序，和完整包含）。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">    <span class="built_in">console</span>.log(<span class="regexp">/chaoge/</span>.test(<span class="string">"ge"</span>));<span class="comment">//false</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="regexp">/chaoge/</span>.test(<span class="string">"gechao"</span>));<span class="comment">//false</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="regexp">/chaoge/</span>.test(<span class="string">"chao1ge"</span>));<span class="comment">//false</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="regexp">/chaoge/</span>.test(<span class="string">"chaoge"</span>));<span class="comment">//true</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="regexp">/chaoge/</span>.test(<span class="string">"chaoge123"</span>));<span class="comment">//true</span></div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure></p>
<p>2.写[]里面：只要包含里面的任何一个就可以。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">    <span class="built_in">console</span>.log(<span class="regexp">/[panpan]/</span>.test(<span class="string">"p"</span>));<span class="comment">//true</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="regexp">/[panpan]/</span>.test(<span class="string">"a"</span>));<span class="comment">//true</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="regexp">/[panpan]/</span>.test(<span class="string">"n"</span>));<span class="comment">//true</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="regexp">/[panpan]/</span>.test(<span class="string">"eee"</span>));<span class="comment">//false</span></div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure></p>
<p>负向类<br>用法：必须写在[]里面，外面是别的意思。（可以不够，但是不能多）（不够和正好，返回false；多了或者没有返回true；）<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">    <span class="built_in">console</span>.log(<span class="regexp">/[^abc]/</span>.test(<span class="string">"a"</span>));<span class="comment">//false</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="regexp">/[^abc]/</span>.test(<span class="string">"ab"</span>));<span class="comment">//false</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="regexp">/[^abc]/</span>.test(<span class="string">"ac"</span>));<span class="comment">//false</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="regexp">/[^abc]/</span>.test(<span class="string">"bc"</span>));<span class="comment">//false</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="regexp">/[^abc]/</span>.test(<span class="string">"abc"</span>));<span class="comment">//false</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="regexp">/[^abc]/</span>.test(<span class="string">"abcccc"</span>));<span class="comment">//false</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="regexp">/[^abc]/</span>.test(<span class="string">"abcd"</span>));<span class="comment">//true</span></div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure></p>
<p>范围类<br>用法:-,用在[]里面，从哪个位置到哪里。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">    <span class="built_in">console</span>.log(<span class="regexp">/[a-d]/</span>.test(<span class="string">"b"</span>));<span class="comment">//true</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="regexp">/[a-d]/</span>.test(<span class="string">"e"</span>));<span class="comment">//false</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="regexp">/[a-d]/</span>.test(<span class="string">"1"</span>));<span class="comment">//false</span></div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure></p>
<p>组合类<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">    <span class="built_in">console</span>.log(<span class="regexp">/[a-d1-5A-D]/</span>.test(<span class="string">"C"</span>));<span class="comment">//true</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="regexp">/[a-d1-5A-D]/</span>.test(<span class="string">"g"</span>));<span class="comment">//false</span></div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure></p>
<h5 id="正则边界：就是以什么为开头，以什么为结尾。"><a href="#正则边界：就是以什么为开头，以什么为结尾。" class="headerlink" title="正则边界：就是以什么为开头，以什么为结尾。"></a>正则边界：就是以什么为开头，以什么为结尾。</h5><p>^:如果在[]外面，放在最前面是以此为开头的意思。<br>$:放在最后，意思此为结尾的意思。<br>如果两个一起用，就是这个约定好的这个字符串，不能多也不能少。  </p>
<h5 id="量词：重复的次数。"><a href="#量词：重复的次数。" class="headerlink" title="量词：重复的次数。"></a>量词：重复的次数。</h5><p>*（星号） 重复零次或者更多（&gt;=0）。<br>+（加号） 重复一次或更多次（&gt;=1)。<br>？(问号)  重复零次或一次（0||1）（要么有 要么没有）  </p>
<h5 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h5><p>1.() 2.^$ 3.| 4.从左到右  </p>
<h5 id="正则表达式的三个函数"><a href="#正则表达式的三个函数" class="headerlink" title="正则表达式的三个函数"></a>正则表达式的三个函数</h5><ol>
<li><p>replace();替换 （i:忽略大小写；   g:全局替换；）  </p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">    <span class="keyword">var</span> str = <span class="string">"Today is fine,today is fine;"</span>;</div><div class="line">    <span class="built_in">console</span>.log(str);</div><div class="line">    <span class="built_in">console</span>.log(str.replace(<span class="regexp">/today/ig</span>,<span class="string">"tomorrow"</span>));</div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>trim();去除字符串左右两侧的空格；ie678不支持；需要兼容；</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">   <span class="keyword">var</span> str = <span class="string">"   aaa   bbb   ccc   "</span>;</div><div class="line">   <span class="built_in">console</span>.log(str);</div><div class="line">   <span class="built_in">console</span>.log(str.trim());</div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure>
</li>
</ol>
<p>兼容代码<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">trim</span>(<span class="params">string</span>)</span>&#123;</div><div class="line">        <span class="keyword">return</span> string.replace(<span class="regexp">/^\s+|\s+$/g</span>,<span class="string">""</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure></p>
<ol>
<li>search(); 给正则查索引值；<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">    <span class="keyword">var</span> str = <span class="string">"abcdfeg"</span>;</div><div class="line">    <span class="comment">//有就获取第一个对应的索引值；没有就返回-1；</span></div><div class="line">    <span class="built_in">console</span>.log(str.search(<span class="regexp">/cxxxd/</span>));</div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;正则表达式&quot;&gt;&lt;a href=&quot;#正则表达式&quot; class=&quot;headerlink&quot; title=&quot;正则表达式&quot;&gt;&lt;/a&gt;正则表达式&lt;/h2&gt;&lt;p&gt;正则表达式(regular expression)描述了一种字符串匹配的模式（pattern)，可以用来检查一个串是
    
    </summary>
    
      <category term="正则" scheme="http://yoursite.com/categories/%E6%AD%A3%E5%88%99/"/>
    
    
      <category term="正则" scheme="http://yoursite.com/tags/%E6%AD%A3%E5%88%99/"/>
    
  </entry>
  
  <entry>
    <title>面向对象的三大特征</title>
    <link href="http://yoursite.com/2017/08/31/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9A%84%E4%B8%89%E5%A4%A7%E7%89%B9%E5%BE%81/"/>
    <id>http://yoursite.com/2017/08/31/面向对象的三大特征/</id>
    <published>2017-08-31T06:11:31.000Z</published>
    <updated>2017-09-18T01:31:47.305Z</updated>
    
    <content type="html"><![CDATA[<h1 id="面向对象的三大特征"><a href="#面向对象的三大特征" class="headerlink" title="面向对象的三大特征"></a>面向对象的三大特征</h1><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><ul>
<li>编程世界的继承：两层含义<ul>
<li>含义1:拥有父类的属性方法(特性)</li>
<li>含义2:拥有自己的属性和方法</li>
</ul>
</li>
<li>继承的简单理解<ul>
<li>继承可以减少代码重复 </li>
<li>我们一般将相同的属性放在父类中</li>
<li>然后子类定义自己独特的属性</li>
</ul>
</li>
<li>继承术语<ul>
<li>子类</li>
<li>父类</li>
<li>派生类</li>
<li>基类</li>
</ul>
</li>
</ul>
<h3 id="面向对象三大特性九重境界"><a href="#面向对象三大特性九重境界" class="headerlink" title="面向对象三大特性九重境界"></a>面向对象三大特性九重境界</h3><ol>
<li>Object中的继承-最简单的继承</li>
<li>内置对象的继承</li>
<li>自定义对象的继承</li>
<li>多种继承实现方式</li>
<li>第三方框架实现继承</li>
<li>面向对象三大特性和继承</li>
<li>面向未来变化编程和继承</li>
<li>面向接口编程和继承</li>
<li>设计模式 忘记模式 无招胜有招</li>
</ol>
<h4 id="第一层（从继承的角度理解原型创建对象）"><a href="#第一层（从继承的角度理解原型创建对象）" class="headerlink" title="第一层（从继承的角度理解原型创建对象）"></a>第一层（从继承的角度理解原型创建对象）</h4><ul>
<li>继承就是定义一个新的对象，继承另一个对象的属性和方法。</li>
<li>千年通过原型方式创建一个对象A，其可以使用Object中的所有属性和方法，这里我们就说A对象继承了Object对象。</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//创建一个对象，继承Object</span></div><div class="line"><span class="keyword">var</span> <span class="number">0</span>=<span class="keyword">new</span> objecct();</div><div class="line"><span class="comment">//这里其实就是继承，我们新创建的一个对象，然后继承Object所有属性和方法</span></div><div class="line">alert(<span class="number">0.</span>toString);</div></pre></td></tr></table></figure>
<ul>
<li>内部实现机制<ul>
<li>继承的本质就是通过<strong>proto</strong>指针指向某个对象，系统能够自动 链式访问所指向的对象的属性方法。</li>
<li><strong>proto</strong>是函数的属性之一，对象都是函数。说白了其实就是地址。</li>
</ul>
</li>
<li>继承中的定义：基类和子类<ul>
<li>我们称0对象为儿子，又称子类，派生类Object为付清，又称分类，基类。</li>
</ul>
</li>
<li>祖先<ul>
<li>整个js世界都继承自Object，都可以访问Object中的属性和方法。</li>
<li>所以，Object是所有对象的祖先，是生命诞生的鼻祖</li>
</ul>
</li>
<li>继承第一层的特性<ul>
<li>在不破坏原有代码结构情况下重写基类</li>
<li>在不破坏原有代码结构情况下扩展基类</li>
</ul>
</li>
</ul>
<h4 id="第二层（内置对象的继承关系）"><a href="#第二层（内置对象的继承关系）" class="headerlink" title="第二层（内置对象的继承关系）"></a>第二层（内置对象的继承关系）</h4><ul>
<li>所有的内置对象都继承在Object，除了拥有自身的方法和属性之外，还拥有Object的所有属性和方法。</li>
<li>万物皆继承自Object</li>
<li>更准确的说：万物皆继承自Object.prototype</li>
</ul>
<h4 id="第三层（自定义对象的继承）"><a href="#第三层（自定义对象的继承）" class="headerlink" title="第三层（自定义对象的继承）"></a>第三层（自定义对象的继承）</h4><ul>
<li>继承的本质就是通过<strong>proto</strong>指针指向某个对象，系统能够自动链式访问所指向的对象的属性方法。</li>
<li>那么对于自定义对象的继承，只需要让第二个对象的<strong>proto</strong>指向另一个对象即可。</li>
</ul>
<p>用js实现上述继承<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//父类</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">SuperParent</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.name=<span class="string">"jack"</span>;</div><div class="line">&#125;</div><div class="line"><span class="comment">//子类继承父亲</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Parent</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.age=<span class="number">12</span>;</div><div class="line">&#125;</div><div class="line">Parent.prototype=<span class="keyword">new</span> SuperParent();</div><div class="line"><span class="comment">//付清继承爷爷，通过原型，形成链条</span></div><div class="line"><span class="keyword">var</span> test=<span class="keyword">new</span> Parent();</div><div class="line">alert(test.age);</div><div class="line"><span class="comment">//得到被继承的属性</span></div><div class="line">alert(test.name);</div><div class="line"><span class="comment">//单词击沉继续原型链继承</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Child</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.weight=<span class="number">60</span>;</div><div class="line">&#125;</div><div class="line">Child.prototype=<span class="keyword">new</span> Parent();</div><div class="line"><span class="comment">//继续原型链继承</span></div><div class="line"><span class="keyword">var</span> child=<span class="keyword">new</span> Child();</div><div class="line">alert(child.name);</div><div class="line"><span class="comment">//继承了Parent和Child，弹出jack</span></div><div class="line">alert(child.age);<span class="comment">//弹出12</span></div></pre></td></tr></table></figure></p>
<ul>
<li><strong>爷爷使用所有人祖先Object中属性方法</strong></li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> test=<span class="keyword">new</span> SuperParent();</div><div class="line">alert(test.name);</div><div class="line">alert(test.toString());</div></pre></td></tr></table></figure>
<ul>
<li>访问链：——&gt;SuperParent构造对象——&gt;SuperParent原型对象——&gt;Object对象——&gt;Object原型对象(找到toString)——&gt;null</li>
<li><strong>儿子使用爷爷中的属性</strong></li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> child=<span class="keyword">new</span> Child();</div><div class="line">alert(child.name);</div></pre></td></tr></table></figure>
<ul>
<li>var child=new Child();</li>
<li>alert(child.name);</li>
</ul>
<h3 id="继承中的原型链-核心知识点-链式搜索机制"><a href="#继承中的原型链-核心知识点-链式搜索机制" class="headerlink" title="==继承中的原型链==核心知识点-链式搜索机制"></a>==继承中的原型链==核心知识点-链式搜索机制</h3><ul>
<li>首先访问child构造函数，返现没有name属性</li>
<li>寻找<strong>proto</strong>，判断其指针是否为空</li>
<li>指向Child原型函数，寻找有没有name属性</li>
<li>没有找到，则判断其<strong>proto</strong>属性是否为null，如果不是null，继续搜索。</li>
<li>找到parent实例对象，检查是否有name属性，没有的话继续找。</li>
<li>继承和面向对象编程<ul>
<li>将重复的代码放在基类 </li>
</ul>
</li>
</ul>
<h4 id="第四层-多种继承方式"><a href="#第四层-多种继承方式" class="headerlink" title="第四层(多种继承方式)"></a>第四层(多种继承方式)</h4><ul>
<li><strong>原型继承</strong><ul>
<li>存在的问题：无法传参，==无法通过参数定义对象==，在Student的构造方法中，无法使用new Student(“00001”,”张三”,12);</li>
<li>创建对象，并初始化name和age属性，必须stu.name,stu.age进行赋值</li>
</ul>
</li>
<li><strong>构造函数继承</strong><ul>
<li>使用call方法，第一个参数为上下文</li>
<li>存在的问题：无法继承原型中的方法</li>
<li>如何解决问题：二者合二为一</li>
</ul>
</li>
<li><strong>组合继承(实现了继承属性和方法)</strong><ul>
<li>组合继承-最佳组合 （混合模式）</li>
<li>这种方式的缺点：无论什么情况，都会调用两次超类构造函数。一次是在创建子类原型时，另一次是在子类构造函数内部。</li>
<li>解决方法就是下面的方法</li>
</ul>
</li>
<li><strong>继承组合继承(了解)</strong><ul>
<li>继承的固定函数</li>
</ul>
</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//继承的固定函数</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">inheritPrototype</span>(<span class="params">subType,superType</span>)</span>&#123;...&#125;;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name</span>)</span>&#123;...&#125;;</div><div class="line">Person.prototype.say=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Student</span>(<span class="params">name,age</span>)</span>&#123;...&#125;;</div><div class="line">inheritPrototype(student,Person);</div><div class="line"><span class="keyword">var</span> xiaozhang=<span class="keyword">new</span> Student(<span class="string">"小张"</span>,<span class="number">20</span>);</div><div class="line"><span class="built_in">console</span>.log(xiaozhang,name);</div></pre></td></tr></table></figure>
<ul>
<li><strong>拷贝继承</strong> </li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> Chinese=&#123;</div><div class="line">    nation:<span class="string">"中国"</span>;</div><div class="line">&#125;;</div><div class="line"><span class="keyword">var</span> Doctor=&#123;</div><div class="line">    career:<span class="string">"医生"</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>请问怎样才能让“医生”去继承“中国人”，也就是说，我怎样才能成为一个“中国医生”的对象？<br>这里要注意，这两个对象都是普通对象，不是构造函数，无法使用构造函数方法实现“继承”。<br><strong>除了使用“prototype链”以外，还有另一种思路：把父对象的属性，全部拷贝给子对象，也能实现继承</strong>  </p>
<h4 id="第五层（第三方框架实现继承）"><a href="#第五层（第三方框架实现继承）" class="headerlink" title="第五层（第三方框架实现继承）"></a>第五层（第三方框架实现继承）</h4><ul>
<li>Class.js</li>
<li>Canvas 第三方框架</li>
<li>Extend()</li>
<li>我们真正开发的时候用的就是第三方框架</li>
<li><strong>多继承</strong></li>
<li>一种以下还可以再分，比如动物可以分为鱼和马，鱼可以分为咸水鱼和淡水鱼，马可以分为公马和母马。  </li>
</ul>
<h4 id="第六层（封装性，多态性和继承的关系）"><a href="#第六层（封装性，多态性和继承的关系）" class="headerlink" title="第六层（封装性，多态性和继承的关系）"></a>第六层（封装性，多态性和继承的关系）</h4><ul>
<li>生活中一切事物皆对象，面向对象就是模拟现实</li>
<li>和现实一样，面向对象有三大特征：封装性，继承性和多态性</li>
<li>现实生活中人，山河湖海等都可以理解为一个对象，我们可以把和人相关的而一些属性，动作封装在人这个对象里面，比如人的属性：年龄，性别。人的动作：吃饭，睡觉，打豆豆。</li>
<li>机器：为我所用。</li>
<li>继承：祖先，父亲，儿子</li>
<li>多态：动物的多态性和植物的多态性</li>
</ul>
<h5 id="封装性"><a href="#封装性" class="headerlink" title="封装性"></a>封装性</h5><ul>
<li>先形成对象</li>
<li>思维转变：函数思维到面向对象思维<ul>
<li>第一种方式：函数，将所有的功能放在一个函数里面</li>
<li>第二种方式，面向对象思维</li>
</ul>
</li>
<li>封装性的好处<ul>
<li>将属性方法归类，调理清晰</li>
<li>当出现错误，容易发现问题，先找到其属于哪个对象隔离作用，当代码出现错误，不会影响其他对象</li>
<li>封装变化，对于一个需求经常变动的地方，封装起来，这样当代码需要经常修改，只需要修改单一方法。</li>
<li>封装复杂：将一些复杂的功能封装起来，方便使用</li>
</ul>
</li>
<li>面向对象和搭积木<ul>
<li>就类似盖房子，先把盖房子需要的各种对象实现出来或者制造出来，然后再用这些对象组装房子 </li>
<li>函数式编程：将所有功能放在一个函数里面—浆糊编程</li>
<li>面向对象编程：优雅编程</li>
</ul>
</li>
<li><strong>狭义封装性</strong><ul>
<li>定义：封装就是保护内容，保证类的某些属性或者是方法不背外部看见。</li>
<li>封装的实现<ul>
<li>为属性封装：peivate 属性类型 属性名称</li>
<li>为方法封装：private 方法返回值 方法名称(参数列表){};</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><strong>如何实现共有私有</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name,age</span>)</span>&#123;</div><div class="line">    <span class="comment">//定义一个共有变量</span></div><div class="line">    <span class="keyword">this</span>.name=name;</div><div class="line">    <span class="comment">//定义一个共有函数</span></div><div class="line">    <span class="keyword">this</span>.show=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">       alert(<span class="string">"name:"</span>+name+<span class="string">";age:"</span>+age); </div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> bill=<span class="keyword">new</span> Person(<span class="string">"Bill"</span>,<span class="number">20</span>);</div><div class="line"><span class="comment">//通过bill.name可以访问证明其公有性</span></div><div class="line">alert(bill.name);</div><div class="line">bill.show();</div></pre></td></tr></table></figure></p>
<ul>
<li><strong>广义封装性</strong><ul>
<li>封装某些功能成一个函数，对象。</li>
<li>将一个系统拆分成不同的模块，然后组成系统，比如计算机分成cpu和硬盘</li>
<li>==原则==<ul>
<li>封装变化点</li>
<li>封装单个功能-单一职责功能</li>
<li>封装复杂点</li>
<li>封装功能成多个模块——模块化编程<ul>
<li>框架设计中命名空间，闭包，对象和函数等都可以实现模块</li>
</ul>
</li>
<li>封装成组件-框架<ul>
<li>幻灯片组件，tab组件，瀑布流组件——基于框架</li>
</ul>
</li>
<li>封装业务逻辑：基于框架，组件，比如幻灯片和ajax结合</li>
</ul>
</li>
</ul>
</li>
</ul>
<h5 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h5><ul>
<li>多态是一种思想：多态不是一种技术，是你解决问题的方针，知道思想。</li>
<li>通俗定义：同类事物，多种形态</li>
<li>世界之所以多彩，诗意，源于多态。</li>
<li>官方定义：多态(Polymorphism)，是指面向对象程序运行时，相同的消息可能会送给多个不同的类之对象，而系统可依据对象所属类，引发对应类的方法，而有不同的行为。</li>
<li>js中的多态世界<ul>
<li>多态和观察者模式实现一处变化，所有皆变。 </li>
</ul>
</li>
<li>继承实现多态<ul>
<li>继承本身就是多态的一种实现</li>
<li>同类事物-多态</li>
<li>重载也是多态的一种体现</li>
</ul>
</li>
</ul>
<h5 id="重载和多态"><a href="#重载和多态" class="headerlink" title="重载和多态"></a>重载和多态</h5><ul>
<li>一个方法，名称相同，通过参数个数不同或者参数的类型不同执行不同的功能。</li>
<li>高级语言是支持重载多态的，但是Javascript不支持</li>
<li>在.Net中有方法的重载，方法名称相同，参数不同或者参数类型 不同，被视为不同的方法</li>
<li>但是在Javascript中，如果函数名称相同，无论参数怎么不相同，调用的时候始终会以最后一个函数为有效函数，怎么解决这个问题呢。</li>
<li>函数重载实现<ul>
<li>通过函数参数个数区分<ul>
<li>重载实现方式-类型不同</li>
<li>通过函数的arguments属性实现重载</li>
<li>jQuery框架中的重载</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="第七层-面向对象接口编程，面向抽象编程，面向未来编程"><a href="#第七层-面向对象接口编程，面向抽象编程，面向未来编程" class="headerlink" title="第七层 面向对象接口编程，面向抽象编程，面向未来编程"></a>第七层 面向对象接口编程，面向抽象编程，面向未来编程</h4><ul>
<li>现实生活中的接口：<ul>
<li>接口的定义：接口就是一个协议，规定大家都必须遵守的协议 </li>
</ul>
</li>
<li>接口连接整个世界</li>
<li>采用接口(协议)的好处<ul>
<li>实现模块化制造，各个模块通过接口联系起来</li>
<li>由于模块化，导致分工明细，从而保证大规模项目团队化制造，多团队制造</li>
<li>面向接口制造，灵活组装，替换容易</li>
</ul>
</li>
<li>接口遍布整个世界</li>
<li>接口的重要性：整个世界都是通过接口连接在一起的。是万物联系的根本，很难用语言描述其重要性</li>
<li>编程世界中的接口<ul>
<li>协议类型1 前后台通信协议<ul>
<li>json xml </li>
<li>前后台开发人员通过接口来合作</li>
</ul>
</li>
<li>协议类型2 不同开发人员之间的协议<ul>
<li>多人开发项目中，一般都是每个人负责编写不同的模块(对象)，当别人需要使用你写的对象的时候，你们可以坐下来沟通下接口，让对方先去使用你写的功能，至少有没有实现，如何实现，对方不关心，最简单的方法就是定义一个对象，定义一个空方法。或者方法中暂时返回假数据。先让其他人能够使用。</li>
</ul>
</li>
<li>不用系统之间的协议<ul>
<li>多系统开发一般使用web Service作为沟通桥梁，代理模式或者中介模式处理不同系统之间的通信</li>
</ul>
</li>
</ul>
</li>
<li>面向对象接口思维<ul>
<li>接口一般用于规定某个对象必须实现的方法</li>
<li>对于大型网站开发，如果采用面向对象开发。将系统分成多个模块（对象），我们可以像搭积木一样构建整个功能。</li>
<li>构建的时候我们面向接口编程。</li>
<li>首先每个模块提供一个接口。这个接口是恒定的，不变的。我们不关心内部是如何实现的，只是关心这个接口如何使用的。</li>
</ul>
</li>
<li>面向接口编程步骤<ul>
<li>1.规定接口</li>
<li>2.按照接口编写子模块</li>
<li>3.面向接口编程</li>
</ul>
</li>
</ul>
<h5 id="面向未来编程"><a href="#面向未来编程" class="headerlink" title="面向未来编程"></a>面向未来编程</h5><ul>
<li>面向对象解决的问题：封装世界，应对变化。</li>
<li>应对变化：需求变化，代码需要不断的改善，每次变化差的架构需要改动很多代码，而号的代码只需要修改最少的代码</li>
<li>面向未来编程的定义：由于用户的需求时刻变化，导致我们开发好的代码也不是一成不变的，也是需要不断修改的。为了应对这些可能的变化，必须让代码模块化。这样就算变化也只会影响某个模块而不会影响全局。</li>
<li>如何更好的应对变化<ul>
<li>一群软件大事根据建筑学等理论得出了如下几个原则：</li>
<li>开放封装原则(有变化，尽量不修改原来的代码，扩充功能)单一职责原则-这样变化了，容易找到问题</li>
<li>通俗的讲：单一职责原则：每个兑现只有一个引起他变化的原因，这样需求变化的时候，很快定位到是那个对象需要修改，而不是修改多个对象，如果刚开始架构合理，是可以完美应对需求变化的</li>
</ul>
</li>
<li>好的架构师<ul>
<li>从容应对需求变化<ul>
<li>封装变化</li>
<li>分离算法</li>
<li>分层-设计 前端 后台 数据库 服务</li>
<li>好的架构师可以让新人写的代码再差，也不会影响全局，因为采用了模块化，低耦合，让你写的代码尽量和别人写的联系少，或者通过中间桥梁来沟通，你写的再差，顶多会影响到桥梁。</li>
</ul>
</li>
<li>学习思维而不是代码，重点是你要有这种解决问题的思维</li>
<li>继承和开放封闭原则：共性放在基类中，特性通过继承的方式继承的对象只含有某产品的方法属性。</li>
</ul>
</li>
<li><strong>总结继承作用</strong><ul>
<li>继承不是一种技术，是你解决问题的方针，指导思想。</li>
<li>定义一个新的对象，使得其拥有另一个对象的功能(属性和方法)</li>
<li>减少拷贝和代码相同(如果一个地方出错，代码相同的话，需要修改很多地方，可以将一样的地方用函数封装)</li>
<li>模块化-降低系统之间的耦合，从而更好应对未来需求变化带来的代码修改，有经验的人知道，很多项目失败是因为架构差，到了最后，用户随便一个不满意，都会导致代码全部改动，进而加班疯狂改动。</li>
<li><strong>继承的好处</strong><ul>
<li>核心<ul>
<li>模块化编程，降低耦合</li>
<li>应对需求变化，随着时间流逝，产品需求可能对你类的行为有更多的要求</li>
</ul>
</li>
<li>其他好处<ul>
<li>拓展功能</li>
<li>修改功能</li>
<li>通过继承实现代码重用</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="第八层-设计模式和继承"><a href="#第八层-设计模式和继承" class="headerlink" title="第八层 设计模式和继承"></a>第八层 设计模式和继承</h4><ul>
<li>独孤九剑：23中设计模式招式</li>
<li>易筋经：面向对象编程思维 艺术</li>
</ul>
<h4 id="第九层-忘记模式-挥洒自如-无照胜有招"><a href="#第九层-忘记模式-挥洒自如-无照胜有招" class="headerlink" title="第九层 忘记模式 挥洒自如 无照胜有招"></a>第九层 忘记模式 挥洒自如 无照胜有招</h4><ul>
<li>随着开发经验提高，很自然的就会根据需求，场景创造适合当前开发场景的最佳模式。</li>
<li>基础：必须修炼完成前四层</li>
<li>中级：第五层，第六层，第七层</li>
<li>高级：第八层，第九层</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;面向对象的三大特征&quot;&gt;&lt;a href=&quot;#面向对象的三大特征&quot; class=&quot;headerlink&quot; title=&quot;面向对象的三大特征&quot;&gt;&lt;/a&gt;面向对象的三大特征&lt;/h1&gt;&lt;h2 id=&quot;继承&quot;&gt;&lt;a href=&quot;#继承&quot; class=&quot;headerlink&quot; 
    
    </summary>
    
      <category term="面向对象" scheme="http://yoursite.com/categories/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
    
      <category term="面向对象" scheme="http://yoursite.com/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>canvas</title>
    <link href="http://yoursite.com/2017/07/20/canvas/"/>
    <id>http://yoursite.com/2017/07/20/canvas/</id>
    <published>2017-07-20T01:33:21.000Z</published>
    <updated>2017-09-16T03:22:24.356Z</updated>
    
    <content type="html"><![CDATA[<h1 id="canvas"><a href="#canvas" class="headerlink" title="canvas"></a>canvas</h1><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><ol>
<li>是一个HTML5元素</li>
<li>意思是画布，本身是没有绘画功能的，需要通过javascript来实现功能。</li>
<li>默认的大小是300*150。</li>
<li>height=”300” width=”600”。</li>
<li>在浏览器解析的时候就是图片。  </li>
<li><h3 id="绘制图形的基本步骤"><a href="#绘制图形的基本步骤" class="headerlink" title="绘制图形的基本步骤"></a>绘制图形的基本步骤</h3></li>
<li>获取canvas元素</li>
<li>获取绘制环境</li>
<li>设置起始绘图的位置</li>
<li>绘制路径</li>
<li>描边<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*1.获取canvas元素*/</span></div><div class="line">    <span class="keyword">var</span> canvas = <span class="built_in">document</span>.querySelector(<span class="string">'canvas'</span>);</div><div class="line"><span class="comment">/*2.获取绘制环境  （获取绘制工具）*/</span></div><div class="line"><span class="comment">/*content内容  context 上下文 */</span></div><div class="line">    <span class="keyword">var</span> ctx = canvas.getContext(<span class="string">'2d'</span>);</div><div class="line"><span class="comment">/*3.设置起始绘图的位置*/</span></div><div class="line">    ctx.moveTo(<span class="number">100</span>,<span class="number">100</span>);</div><div class="line"><span class="comment">/*4.绘制路径 */</span></div><div class="line">    ctx.lineTo(<span class="number">200</span>,<span class="number">100</span>);</div><div class="line"><span class="comment">/*5.描边*/</span></div><div class="line">    ctx.stroke();</div></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="绘制图形的工具"><a href="#绘制图形的工具" class="headerlink" title="绘制图形的工具"></a>绘制图形的工具</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//设置宽度</span></div><div class="line">ctx.lineWidth=<span class="number">10</span>;</div><div class="line"><span class="comment">//设置描边的颜色</span></div><div class="line">ctx.strokeStyle=<span class="string">"red"</span>;</div><div class="line"><span class="comment">//线的两端的样式</span></div><div class="line">ctx.lineCap=<span class="string">"round"</span>;<span class="comment">//圆滑</span></div><div class="line">ctx.lineCap=<span class="string">"butt"</span>;<span class="comment">//屁股，粗大的一端</span></div><div class="line">ctx.lineCap=<span class="string">"square"</span>;<span class="comment">//方的</span></div><div class="line"><span class="comment">//线拐点的样式</span></div><div class="line">ctx.lineJoin = <span class="string">'miter'</span>;<span class="comment">//直直的斜过去</span></div><div class="line">ctx.lineJoin = <span class="string">'round'</span>;<span class="comment">//圆滑的</span></div><div class="line">ctx.lineJoin = <span class="string">'bevel'</span>;<span class="comment">//圆斜</span></div></pre></td></tr></table></figure>
<p>注意：在不给线设置宽度的前提下，浏览器在显示线的时候可能会自带加粗效果，这是因为canvas本身也是由像素点构成的，但是浏览器对于半个像素的解析可能会当做一个像素，这样会把线段加”粗”，但是颜色会变浅。解决上述问题的方法是认为添加半个像素，使浏览器在解析的时候是整像素。<br><strong>再次绘制的时候，会使用之前设置的样式</strong>，设置的样式最后的会生效，下面的会覆盖上面的。所以解决方法是开启新的路径。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ctx.beginPath();</div></pre></td></tr></table></figure></p>
<p>闭合是在描边的时候的使用，闭合和描边没有关系。<br>==非零绘制原则==  </p>
<ol>
<li>看某块区域是否被填充</li>
<li>从这个区域拉一条线</li>
<li>计算每条线的值，逆时针-1，顺时针+1。</li>
<li>加一块，如果是非零的那么溜填充，否则不填充。</li>
</ol>
<h4 id="绘制虚线的方法"><a href="#绘制虚线的方法" class="headerlink" title="绘制虚线的方法"></a>绘制虚线的方法</h4><p><strong>传数组：设置虚线的长度</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ctx.setLineDash([<span class="number">5</span>,<span class="number">10</span>,<span class="number">15</span>]);</div></pre></td></tr></table></figure></p>
<p>==如果传入的是偶数，那么最小的循环单元就是传入的数组的元素个数；如果传入的是奇数那么最小的循环单元是奇数元素个数的两倍，才能表示不重复的。==    </p>
<ul>
<li>setLineDash() 设置虚线</li>
<li>getLineDash() 获取虚线宽度集合</li>
<li>lineDashOffset 设置虚线偏移量（负值向右偏移）<h4 id="绘制矩形"><a href="#绘制矩形" class="headerlink" title="绘制矩形"></a>绘制矩形</h4></li>
<li>进行路径绘制ctx.rect(100,100,200,100);<ul>
<li>解释参数含义(x轴坐标，y轴坐标，宽度，高度)。</li>
<li>描边或者填充 ctx.stroke();/ctx.fill();</li>
</ul>
</li>
<li>有自己独立路径并且绘制了的矩形 <ul>
<li>ctx.strokeRect(100,100,200,100) 绘制的是一个空心的矩形</li>
<li>ctx.fillRect(100,100,200,100)  绘制的是一个实心的矩形</li>
</ul>
</li>
<li>清除矩形绘制内容<ul>
<li>ctx.clearRect(100,100,200,100);  </li>
</ul>
</li>
</ul>
<h4 id="绘制渐变"><a href="#绘制渐变" class="headerlink" title="绘制渐变"></a>绘制渐变</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>canvas<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">        canvas&#123;</span></div><div class="line"><span class="undefined">            border: 1px solid #ccc;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">width</span>=<span class="string">"600"</span> <span class="attr">height</span>=<span class="string">"400"</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="keyword">var</span> canvas = <span class="built_in">document</span>.querySelector(<span class="string">'canvas'</span>);</span></div><div class="line"><span class="javascript">    <span class="keyword">var</span> ctx = canvas.getContext(<span class="string">'2d'</span>);</span></div><div class="line"><span class="javascript">    <span class="comment">/*渐变的方案*/</span></span></div><div class="line"><span class="javascript">    <span class="keyword">var</span> linearGradient = ctx.createLinearGradient(<span class="number">100</span>,<span class="number">150</span>,<span class="number">300</span>,<span class="number">150</span>);</span></div><div class="line"><span class="javascript">    <span class="comment">/* 0-1  0-100%  */</span></span></div><div class="line"><span class="javascript">    linearGradient.addColorStop(<span class="number">0</span>,<span class="string">'red'</span>);</span></div><div class="line"><span class="javascript">    linearGradient.addColorStop(<span class="number">0.5</span>,<span class="string">'blue'</span>);</span></div><div class="line"><span class="javascript">    linearGradient.addColorStop(<span class="number">1</span>,<span class="string">'yellow'</span>);</span></div><div class="line"><span class="undefined">    ctx.fillStyle = linearGradient;</span></div><div class="line"><span class="undefined">    ctx.fillRect(100,100,200,100);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>这种类似于css3中的径向渐变。  </p>
<h4 id="绘制曲线"><a href="#绘制曲线" class="headerlink" title="绘制曲线"></a>绘制曲线</h4><p>总的来说，绘制曲线就是利用数学的方法来模拟抛物线，从而得到曲线或者其他形状的图像。<br>原理就是线都是由点构成的，所以可以通过描点的方法来实现画线的方法。<br><strong>绘制圆弧</strong><br>ctx.arc(x0,y0,150,0,-Math.PI/2,true);<br>==参数解析：(圆中心X坐标，圆中心y坐标，圆中半径，起始弧度，结束弧度，是顺时针还是逆时针，默认值是false顺时针)。==  </p>
<h4 id="绘制文本"><a href="#绘制文本" class="headerlink" title="绘制文本"></a>绘制文本</h4><ul>
<li>ctx.font=”40px 楷书”;<ul>
<li>这种写法类似于css中的font的写法</li>
</ul>
</li>
<li><strong>在canvas文本对齐方式，基于坐标点</strong><ul>
<li>ctx.textAlign=”left”;<ul>
<li>默认是向左对齐，</li>
<li>控制左右对齐</li>
</ul>
</li>
<li>ctx.textBaseline=”bottom”;<ul>
<li>上下对齐方式</li>
</ul>
</li>
</ul>
</li>
<li>ctx.strokeText(str,100,100,100);</li>
<li>文本的定位在文字的左下角(默认)，但是设置文本宽度在小于画布的宽度的时候会压缩文字；但是设置文本宽度大于或者等于画布宽度的时候，字体的文本宽度不会改变了。</li>
<li>在绘制的时候stroke的效果看似是填充效果，而fill效果的填充效果倒像是stroke的效果。</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*通过绘图*/</span></div><div class="line">    <span class="keyword">var</span> canvas = <span class="built_in">document</span>.querySelector(<span class="string">'canvas'</span>);</div><div class="line">    <span class="keyword">var</span> ctx = canvas.getContext(<span class="string">'2d'</span>);</div><div class="line"></div><div class="line">    <span class="keyword">var</span> str = <span class="string">'我是程序猿，非常荣幸'</span>;</div><div class="line"></div><div class="line">    ctx.font = <span class="string">'40px 隶书'</span>;</div><div class="line"></div><div class="line">    ctx.strokeStyle = <span class="string">'red'</span>;</div><div class="line">    <span class="comment">/*在canvas文本对齐方式 基于坐标点*/</span></div><div class="line">    <span class="comment">/*控制左右的对齐*/</span></div><div class="line">    ctx.textAlign = <span class="string">'left'</span>;<span class="comment">//left</span></div><div class="line">    <span class="comment">/*上下对象方式*/</span></div><div class="line">    ctx.textBaseline = <span class="string">'bottom'</span>;</div><div class="line"></div><div class="line">    ctx.moveTo(<span class="number">100</span>,<span class="number">100</span>);</div><div class="line">    ctx.lineTo(<span class="number">500</span>,<span class="number">100</span>);</div><div class="line">    ctx.stroke();</div><div class="line"></div><div class="line">    <span class="comment">/*文本的定位在左下角*/</span></div><div class="line">    <span class="comment">/*当最大宽度小于 文本的宽度  压缩*/</span></div><div class="line">    ctx.strokeText(str,<span class="number">100</span>,<span class="number">100</span>,<span class="number">600</span>);</div><div class="line"></div><div class="line">    <span class="comment">/*需要文字的长度*/</span></div><div class="line">    <span class="keyword">var</span> textWidth = ctx.measureText(str).width;</div><div class="line">    <span class="comment">/*进行渐变  需要文字的长度来确定结束位置*/</span></div><div class="line">    <span class="keyword">var</span> linearGradient = ctx.createLinearGradient(<span class="number">100</span>,<span class="number">200</span>,<span class="number">100</span>+textWidth,<span class="number">200</span>);</div><div class="line">    linearGradient.addColorStop(<span class="number">0</span>,<span class="string">'red'</span>);</div><div class="line">    linearGradient.addColorStop(<span class="number">0.5</span>,<span class="string">'blue'</span>);</div><div class="line">    linearGradient.addColorStop(<span class="number">1</span>,<span class="string">'yellow'</span>);</div><div class="line"></div><div class="line">    ctx.fillStyle =linearGradient;</div><div class="line">    ctx.fillText(str,<span class="number">100</span>,<span class="number">200</span>);</div></pre></td></tr></table></figure>
<h4 id="canvas中绘制图片"><a href="#canvas中绘制图片" class="headerlink" title="canvas中绘制图片"></a>canvas中绘制图片</h4><ul>
<li>在canvas中使用图片<ul>
<li>动态创建一个图片元素，使这个元素保存在内存里面</li>
<li>有两种方法<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//第一种方法</span></div><div class="line"><span class="keyword">var</span> img=<span class="built_in">document</span>.createElement(<span class="string">"img"</span>);</div><div class="line">img.src=<span class="string">"imgages/01.jpg"</span>;</div><div class="line">img.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(img);</div><div class="line">&#125;</div><div class="line"><span class="comment">//第二种方法</span></div><div class="line"><span class="keyword">var</span> img1=<span class="keyword">new</span> Image();</div><div class="line">img1.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(img1);</div><div class="line">&#125;</div><div class="line">img1.src=<span class="string">"images/01.jpg"</span>;</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<p>上面的例子告诉我们图片也有onload事件，但是在canvas不合理。<br>在实例应用中第二种方法性能会好一点，所以canvas习惯使用这种方法。<br>但是上面代码有个兼容性问题，<strong>在IE中src的加载可能在onload之前，所以后面的onload事件可能绑定不到，所以要把src放到绑定事件的后面。</strong>  </p>
<ul>
<li>canvas中绘制图片的写法有三种<ul>
<li>第一种：(图片对象，绘制的坐标X轴，绘制的坐标Y轴)ctx.drawImage(img,100,100);</li>
<li>第二种：(图片对象，绘制的坐标X轴，绘制的坐标Y轴，绘制的图片宽度，绘制的图片高度)ctx.drawImage(img,100,100,50,50);</li>
<li>第三种：(图片对象，图片的定位X轴，图片的定位Y轴，截取图片宽度，截取图片高度，绘制的坐标X轴，绘制的坐标Y轴，绘制的图片宽度，绘制的图片高度)ctx.drawImage(img,500,500,500,500,100,100,200,200);  </li>
</ul>
</li>
</ul>
<h4 id="帧动画"><a href="#帧动画" class="headerlink" title="帧动画"></a>帧动画</h4><p>以前js所学的是animate是帧动画，而css3中的动画属于补间动画，只需要设置起始和终止位置就可以了，中间过程会自动补全。  </p>
<h4 id="转化保存和恢复"><a href="#转化保存和恢复" class="headerlink" title="转化保存和恢复"></a>转化保存和恢复</h4><ul>
<li>translate移动的是坐标轴，ctx.translate(100,100);</li>
<li><p>rotate旋转使用的是弧度，默认是绕着坐标原点，旋转过后，坐标轴方向发生改变</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">       ctx.clearRect(<span class="number">-100</span>,<span class="number">-100</span>,ctx.canvas.width,ctx.canvas.height);</div><div class="line">       ctx.rotate(<span class="built_in">Math</span>.PI/<span class="number">60</span>);</div><div class="line">       ctx.strokeRect(<span class="number">-50</span>,<span class="number">-50</span>,<span class="number">100</span>,<span class="number">100</span>);</div><div class="line">   &#125;,<span class="number">100</span>)</div></pre></td></tr></table></figure>
</li>
<li><p>x轴方向缩放，y轴方向的缩放，是坐标轴的缩放。</p>
</li>
<li>ctx.scale(2,2);</li>
<li>ctx.fillText(“文字”,100,100);</li>
<li>ctx.strokeRect(-50,-50,100,100);</li>
<li><strong>ctx.save();</strong><ul>
<li>保存一些列样式，保存多个系列样式。存储结构是栈，后进先出。<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> canvas = <span class="built_in">document</span>.querySelector(<span class="string">'canvas'</span>);</div><div class="line">   <span class="keyword">var</span> ctx = canvas.getContext(<span class="string">'2d'</span>);</div><div class="line"></div><div class="line">   ctx.lineWidth = <span class="number">30</span>;</div><div class="line">   ctx.strokeStyle = <span class="string">'red'</span>;</div><div class="line">   ctx.moveTo(<span class="number">100</span>,<span class="number">100</span>);</div><div class="line">   ctx.lineTo(<span class="number">300</span>,<span class="number">100</span>);</div><div class="line">   ctx.stroke();</div><div class="line">   <span class="comment">/*保存一系列样式*/</span></div><div class="line">   <span class="comment">/*保存多个系列样式*/</span></div><div class="line">   <span class="comment">/*存储结构是栈  后进先出*/</span></div><div class="line">   ctx.save();</div><div class="line"></div><div class="line">   ctx.beginPath();</div><div class="line">   ctx.lineWidth = <span class="number">20</span>;</div><div class="line">   ctx.strokeStyle = <span class="string">'green'</span>;</div><div class="line">   ctx.moveTo(<span class="number">100</span>,<span class="number">200</span>);</div><div class="line">   ctx.lineTo(<span class="number">300</span>,<span class="number">200</span>);</div><div class="line">   ctx.stroke();</div><div class="line">   ctx.save();</div><div class="line"></div><div class="line">   ctx.beginPath();</div><div class="line">   ctx.restore();</div><div class="line">   ctx.moveTo(<span class="number">100</span>,<span class="number">300</span>);</div><div class="line">   ctx.lineTo(<span class="number">300</span>,<span class="number">300</span>);</div><div class="line">   ctx.stroke();</div><div class="line"></div><div class="line">   ctx.beginPath();</div><div class="line">   ctx.restore();</div><div class="line">   ctx.moveTo(<span class="number">100</span>,<span class="number">400</span>);</div><div class="line">   ctx.lineTo(<span class="number">300</span>,<span class="number">400</span>);</div><div class="line">   ctx.stroke();</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h4 id="canvas径向渐变"><a href="#canvas径向渐变" class="headerlink" title="canvas径向渐变"></a>canvas径向渐变</h4><p>createLInearGradient()方法创建放射状/原型渐变对象。  这种方式接受四个参数，分别是开始的位置的x坐标和y坐标，以及结束后的x坐标和y坐标。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> c=<span class="built_in">document</span>.getElementById(<span class="string">"myCanvas"</span>);</div><div class="line"><span class="keyword">var</span> ctx=c.getContext(<span class="string">"2d"</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> grd=ctx.createLinearGradient(<span class="number">0</span>,<span class="number">0</span>,<span class="number">170</span>,<span class="number">0</span>);</div><div class="line">grd.addColorStop(<span class="number">0</span>,<span class="string">"black"</span>);</div><div class="line">grd.addColorStop(<span class="number">1</span>,<span class="string">"white"</span>);</div><div class="line"></div><div class="line">ctx.fillStyle=grd;</div><div class="line">ctx.fillRect(<span class="number">20</span>,<span class="number">20</span>,<span class="number">150</span>,<span class="number">100</span>);</div></pre></td></tr></table></figure></p>
<p>渐变可以用于填充矩形，原型，线条，文本等等。  </p>
<ul>
<li>请使用该对象作为strokeStyle或fillStyle属性的值。</li>
<li>请使用addColorStop()方法规定不同的颜色，以及在gradient对象中的何处定位颜色。  </li>
<li>JavaScript语法<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">context.createRadialGradient(x0,y0,r0,x1,y1,r1);</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li>x0，渐变的开始圆的x坐标。</li>
<li>y0, 渐变的开始圆的y坐标</li>
<li>r0，开始圆的半径</li>
<li>x1, 渐变的结束圆的x坐标</li>
<li>x2，渐变的结束圆的y坐标</li>
<li>r1，结束圆的半径<h4 id="杂七杂八"><a href="#杂七杂八" class="headerlink" title="杂七杂八"></a>杂七杂八</h4></li>
</ul>
<ul>
<li>FPS的概念：简单来说就是每秒钟绘制多少帧的图层。</li>
<li>setTimeout定时器默认在程序的最后执行，就相当于一个异步程序。<br><strong>注意canvas中的图片时属于canvas的image，所以不支持css3的属性。canvas只支持旋转坐标轴。</strong></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;canvas&quot;&gt;&lt;a href=&quot;#canvas&quot; class=&quot;headerlink&quot; title=&quot;canvas&quot;&gt;&lt;/a&gt;canvas&lt;/h1&gt;&lt;h3 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;
    
    </summary>
    
      <category term="canvas" scheme="http://yoursite.com/categories/canvas/"/>
    
    
      <category term="canvas" scheme="http://yoursite.com/tags/canvas/"/>
    
  </entry>
  
  <entry>
    <title>面向对象进阶版本2.0</title>
    <link href="http://yoursite.com/2017/05/12/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6%E7%89%88%E6%9C%AC2.0/"/>
    <id>http://yoursite.com/2017/05/12/面向对象进阶版本2.0/</id>
    <published>2017-05-12T04:22:26.000Z</published>
    <updated>2017-09-13T12:36:37.347Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前端开发"><a href="#前端开发" class="headerlink" title="前端开发"></a>前端开发</h3><ul>
<li>编写通用框架-可以使用jQuery。</li>
<li>编写通用UI组件——可以选择使用jQuery UI插件。</li>
<li>编写其他框架：验证，产品价格计算，可以使用jQuery插件。</li>
<li>页面初始化：绑定，事件，性能，安全</li>
<li>ajax交互：数据获取，数据提交</li>
</ul>
<h3 id="面向对象开发"><a href="#面向对象开发" class="headerlink" title="面向对象开发"></a>面向对象开发</h3><ul>
<li>分析需要的对象</li>
<li>分析每个对象需要的属性和方法</li>
<li>一次实现每个对象</li>
<li>面向对象编程(直接使用封装好的方法)</li>
</ul>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><ul>
<li>不要一口吃个胖子，分成小的，一个一个解决</li>
<li>比如：绑定数据：我们用两个函数封装：<ul>
<li>一个绑定基本信息</li>
<li>一个绑定图片</li>
</ul>
</li>
</ul>
<h3 id="页面开发整体思路"><a href="#页面开发整体思路" class="headerlink" title="页面开发整体思路"></a>页面开发整体思路</h3><ul>
<li>先思考页面初始化所需要做的使用：<ul>
<li>绑定产品相关</li>
<li>绑定购物车相关</li>
</ul>
</li>
<li>然后思考页面在和用户交互过程需要做的事情<ul>
<li>什么事交互</li>
<li>如何实现交互</li>
</ul>
</li>
</ul>
<h3 id="基础知识汇总"><a href="#基础知识汇总" class="headerlink" title="基础知识汇总"></a>基础知识汇总</h3><ul>
<li>数据存储在磁盘中。</li>
<li>计算机的磁盘其实就是无数个0和1或者无数个开关，又叫二极管每个二极管有两个状体：开关。开表示1，关表示0。</li>
<li>二进制(短除法)：比如7除以2等于3余1，再除以2等于1，余数1.那么他的二进制是111。倒回去就是最后一个1乘以2的0次方，倒数第二个1乘以2的1次方，第一个1乘以2的二次方，然后三者和相加则可以得到十进制的数字。指令也是01表示的，001表示加法，010表示减法，011表示乘法。三个二极管可以表示八个指令。指令越多，计算机就越牛逼，32位操作系统只能表示2的32次方个指令，64位操作系统可以识别2的64位操作系统。</li>
<li>二进制图片的处理就是把图片描绘在一个一个帧点上来画出来。所以就有了分辨率的问题。</li>
<li>CPU内部就是无数个二极管造成的。1纳米等于10的-9次方米。内存就是一个二进制存储器。</li>
<li>代码执行的方式：系统会将我们编写的代码全部转换成对应的二进制，也就是01存放在内存中。CPU一行一行的从内存中读取这些01010，然后实现运算。</li>
<li>汇编语言用于一些易于记住的符号来表示二进制指令。汇编语言用8进制，16进制等来表示二进制。<ul>
<li>2进制：0，1</li>
<li>8进制：0,1,2,3,4,5,6,7</li>
<li>16进制：它由0-9，A-F组成</li>
<li>8进制和16进制知识二进制的简化写法，归根到底还是二进制，就是一大坨二进制代码的简称而已，他们有一套法则的运算方式能够将2进制转换成8进制和16进制。当CPU运算的时候，再从8进制或者16进制转换成2进制再进行计算。</li>
<li>编译原理就是将高级语言编程成汇编语言，然后编译成二进制语言的过程。由于计算机只认识0和1，所以我们使用的各种语言编码编写的代码最终都会编译成汇编语言，然后再编译成二进制语言，也有的语言跳过汇编，直接编译成二进制语言。</li>
</ul>
</li>
</ul>
<h3 id="C语言编程-面向对象编程"><a href="#C语言编程-面向对象编程" class="headerlink" title="C语言编程-面向对象编程"></a>C语言编程-面向对象编程</h3><h3 id="高级语言-面向对象语法"><a href="#高级语言-面向对象语法" class="headerlink" title="高级语言-面向对象语法"></a>高级语言-面向对象语法</h3><ul>
<li>C++ 面向对象语言的鼻祖</li>
<li>Java 面向对象发扬光大</li>
<li>C# 结合java C++等多种面向对象语言的优点开发的一种语言</li>
<li>PHP</li>
<li>JavaScript 高级版本已经开始支持面向对象比如class关键字</li>
<li>Object C:开发iphone，落后的语言</li>
<li>Swift：法法iphone结合java C# C++等开发的一种更加优秀的语言</li>
<li>Ruby</li>
<li>python</li>
<li>==总结：格式千变万化，但是本质都是一样的；属性和方法==  <h3 id="网络传输和二进制"><a href="#网络传输和二进制" class="headerlink" title="网络传输和二进制"></a>网络传输和二进制</h3></li>
<li>互联网看到的数据都是通过01传递的。</li>
<li>将汉字，拖欠，代码等数据翻译成01的过程称之为序列化。</li>
<li>将10翻译成汉字，图片，diamante的过程称之为反序列化。</li>
<li>wifi是一种以波的形式传输的能量场。信号波就有一定强度，彼此之间存在距离，以一定的速度传输。wifi波波长约为3到5英寸。波峰代表1，波谷代表0。</li>
<li>光纤信号的琴调都是强度调制，发一束强光那就代表1，发一束弱光就代表0。</li>
</ul>
<h2 id="构造函数和属性"><a href="#构造函数和属性" class="headerlink" title="构造函数和属性"></a>构造函数和属性</h2><h3 id="构造函数和普通函数"><a href="#构造函数和普通函数" class="headerlink" title="构造函数和普通函数"></a>构造函数和普通函数</h3><h4 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h4><ul>
<li>构造函数用来实例化一个对象</li>
<li>就像是一道菜谱，按照这个菜谱炒了一盘菜。</li>
<li>语法点：var product=new Product();</li>
<li>构造函数和普通函数的区别<ul>
<li>对象其实是使用函数实现的</li>
<li>对象本身就是一个函数</li>
<li>如果一个函数用于创建对象，我们一般称之为构造函数。</li>
</ul>
</li>
<li>js创建对象的四种方式<ul>
<li>参数传参</li>
<li>默认值</li>
<li>动态添加属性</li>
<li>混合模式</li>
</ul>
</li>
<li><p>构造语法规范</p>
<ul>
<li>成员(属性)定义规范</li>
<li>this.name</li>
<li>成员(方法)定义规范：<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">this</span>.buy=<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</div><div class="line">    alert(<span class="string">"buy"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>属性访问： 点语法</p>
<ul>
<li>先实例化，再使用点语法访问<h4 id="instanceOf"><a href="#instanceOf" class="headerlink" title="instanceOf"></a>instanceOf</h4>如何判断某个实例是否是根据某个猴枣函数创建的<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>(pl <span class="keyword">instanceof</span> Product)&#123;</div><div class="line">    clert(<span class="string">"true"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>高级语言构造函数是没有return的，而js比较特殊，js构造函数本省就是一个函数，所以拥有函数的一切的特性。 </p>
</li>
<li><strong>如果return是一个对象，则new的时候返回的是return的对象。</strong>  </li>
</ul>
<p><strong>万物皆属性</strong><br>一切数据都是通过变量来统一管理的。  </p>
<ul>
<li>如何避免重大损失<ul>
<li>后台开发校验</li>
<li>前端开发人员也校验</li>
</ul>
</li>
<li>作用<ul>
<li>对属性封装一些操作：比如判断，校验，默认值等等</li>
<li>保护某些属性</li>
</ul>
</li>
</ul>
<h4 id="兼容性"><a href="#兼容性" class="headerlink" title="兼容性"></a>兼容性</h4><ul>
<li>因为这些是ECMAScript 5新增属性，所以老版本浏览器都不一定支持</li>
<li>如果不考虑兼容低端浏览器，可以使用</li>
<li>支持浏览器：Chromre 32、IE 9、FireFox 28、Opera 19,Safari 5.1.7。</li>
<li>设置属性读取权限<ul>
<li>设置属性的访问权限</li>
<li>Object.defineProperty(a,b,c)</li>
<li>a. 必须要属性设置的对象</li>
<li>b. 必须要设置的属性名，（键值）</li>
<li>c. 是一个用于描述属性值得json数据，这个json数占领configurable，enmerable，writable，value构成。</li>
<li>configurable<ul>
<li><ol>
<li>可否被删除</li>
</ol>
</li>
<li><ol>
<li>他的属性值可否被批改</li>
</ol>
</li>
<li><ol>
<li>可否把属性设置成接见器属性，默认值是true，可以删除，批改，设置</li>
</ol>
</li>
<li>eumerable：可否被for-in轮回道</li>
<li>writable默示属性值可否被批改</li>
<li>value：属性值</li>
</ul>
</li>
<li>团队合作中的使用：高级开发工程师编写一个对象，为了防止别人使用的时候限制某些权限，可以使用该方法。 </li>
</ul>
</li>
</ul>
<h3 id="共有属性和私有属性"><a href="#共有属性和私有属性" class="headerlink" title="共有属性和私有属性"></a>共有属性和私有属性</h3><ul>
<li>对象都是一个一个小工具包</li>
<li>bindDOMDetail是私有，外界无法访问</li>
<li>init是共有，外界可以访问，类似于接口。<ul>
<li>好处是方便其他人使用，还可以防止其他人员访问核心代码。</li>
</ul>
</li>
</ul>
<h4 id="config对象"><a href="#config对象" class="headerlink" title="config对象"></a>config对象</h4><p>定义一个config对象保存当前对象的临时变量，这样其他所有成员都可以访问：  </p>
<ul>
<li>统一管理</li>
<li>方便内存回收</li>
<li>解决代码重复性问题：一定要保证你写的代码不要重复的</li>
<li>如何避免重复：利用函数来解决代码的复用性</li>
<li>重复性带来的危害：一旦需求改变，需要更改代码，那么所有重复的地方都需要更改。</li>
</ul>
<h4 id="实例化的本质"><a href="#实例化的本质" class="headerlink" title="实例化的本质"></a>实例化的本质</h4><ul>
<li>一些数据通过变量来管理。定义变量的过程其实就是内存分配的过程，所以本质上一切数据都是存放在内存中的。</li>
<li>数据通过变量来管理，不管是字符串，数字，还是复杂的对象，都是存放在变量中的。</li>
</ul>
<h5 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h5><ul>
<li>对象也不例外，对象也是放在变量中管理的。</li>
<li>一切数据都是保存在内存中的。</li>
<li>当打开浏览器的时候，系统先把我们开发的代码放在内存中。然后解析成我们看到的绚丽的页面。</li>
</ul>
<h5 id="数据类型复习"><a href="#数据类型复习" class="headerlink" title="数据类型复习"></a>数据类型复习</h5><ol>
<li>数值型(Number):包括整数，浮点数。</li>
<li>布尔值(Boolean)</li>
<li>字符串型(String)</li>
<li>对象(Object)</li>
<li>数组(Array)</li>
<li>空值(Null)</li>
<li>未定义(Undefined)</li>
</ol>
<ul>
<li>typeof判断数据类型<ul>
<li>在使用typeof运算符时采用引用类型存储值会出现一个问题，无论引用的是什么类型的对象，它都返回”object”。</li>
</ul>
</li>
<li>第二种方式</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">console</span>.log(toString.call(<span class="number">123</span>)) <span class="comment">//[object Number]</span></div><div class="line"><span class="built_in">console</span>.log(toString.call(<span class="string">'123'</span>)) <span class="comment">//[object String]</span></div><div class="line"><span class="built_in">console</span>.log(toString.call(<span class="literal">undefined</span>)) <span class="comment">//[object Undefined]</span></div><div class="line"><span class="built_in">console</span>.log(toString.call(<span class="literal">true</span>)) <span class="comment">//[object Boolean]</span></div><div class="line"><span class="built_in">console</span>.log(toString.call(&#123;&#125;)) <span class="comment">//[object Object]</span></div><div class="line"><span class="built_in">console</span>.log(toString.call([])) <span class="comment">//[object Array]</span></div><div class="line"><span class="built_in">console</span>.log(toString.call(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;)) <span class="comment">//[object Function]</span></div></pre></td></tr></table></figure>
<ul>
<li>第三种方法<ul>
<li>instanceof 数据类型判断</li>
<li>判断已知对象类型的方法：instanceof</li>
<li>注意：在instanceof后面一定要有对象类型，并且大小不能写错，该方法适合一些条件选择或者分支。</li>
</ul>
</li>
<li>第四种方法<ul>
<li>constructor判断</li>
</ul>
</li>
</ul>
<h5 id="jQuery中判断数据的方法"><a href="#jQuery中判断数据的方法" class="headerlink" title="jQuery中判断数据的方法"></a>jQuery中判断数据的方法</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//    jQuery提供一系列工具方法，用来判断数据类型，以弥补JavaScript原生的typeof运算符的不足。</span></div><div class="line"><span class="comment">//     以下方法对参数进行判断，返回一个布尔值。</span></div><div class="line"><span class="comment">//    jQuery.isArray()：是否为数组。</span></div><div class="line"><span class="comment">//    jQuery.isEmptyObject()：是否为空对象（不含可枚举的属性）。</span></div><div class="line"><span class="comment">//    jQuery.isFunction()：是否为函数。</span></div><div class="line"><span class="comment">//    jQuery.isNumeric()：是否为数字。</span></div><div class="line"><span class="comment">//    jQuery.isPlainObject()：是否为使用“&#123;&#125;”或“new Object”生成的对象，而不是浏览器原生提供的对象。</span></div><div class="line"><span class="comment">//    jQuery.isWindow()：是否为window对象。//    jQuery.isXMLDoc()：判断一个DOM节点是否处于XML文档之中。</span></div></pre></td></tr></table></figure>
<h4 id="内存介绍"><a href="#内存介绍" class="headerlink" title="内存介绍"></a>内存介绍</h4><ul>
<li>代码的执行过程：<ul>
<li>系统先将我们写的diamante编译成二进制</li>
<li>将二进制写进内存</li>
<li>CPU读取内存中的保存的数据，通过一大堆复杂的程序让我们看到漂亮的页面。</li>
</ul>
</li>
<li>数据最终都要放入到内存中 </li>
<li><strong>指针</strong>：在定义一个变量的时候，有两个重要的量：值和地址。地址也就是指针。<ul>
<li>指针的解释：指针就类似于门牌号，方便搜索，搜索引擎优化。</li>
<li><strong>一个变量如果保存的是门牌号，就称其指向某个变量。</strong></li>
</ul>
</li>
<li>内存和变量<ul>
<li>一切数据都是保存在内存中</li>
<li>变量定义：每个数据都会有一个地址(门牌号).</li>
<li>因为数据可能很复杂，为了能够快速找到，对数字的搜索很快。</li>
</ul>
</li>
</ul>
<h4 id="对象实例在内存中的存储"><a href="#对象实例在内存中的存储" class="headerlink" title="对象实例在内存中的存储"></a>对象实例在内存中的存储</h4><ul>
<li>实例拷贝原理：内存分配会自动拷贝构造对象的所有属性，并赋以实例的值。</li>
<li>实例在内存中的保存：当你实例化一个对象，那么内存中会开辟两个内存区域：一个保存实例名称变量，其保存的只是地址。一个保存对象的真正的数据。</li>
<li><strong>总结</strong><ul>
<li>实例化的过程其实就是拷贝构造函数属性的过程</li>
<li>==除了拷贝意外还会自动生成一个constructor属性，用于识别其实根据哪个构造函数创建的实例。==</li>
</ul>
</li>
</ul>
<h3 id="原型对象本质"><a href="#原型对象本质" class="headerlink" title="原型对象本质"></a>原型对象本质</h3><h4 id="原型对象的必要性——构造函数创建对象存在的问题"><a href="#原型对象的必要性——构造函数创建对象存在的问题" class="headerlink" title="原型对象的必要性——构造函数创建对象存在的问题"></a>原型对象的必要性——构造函数创建对象存在的问题</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//会拷贝一份</span></div><div class="line"><span class="keyword">var</span> p1=<span class="keyword">new</span> Product();</div><div class="line"><span class="keyword">var</span> p2=<span class="keyword">new</span> Product();</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(p1.constructor);</div><div class="line"><span class="built_in">console</span>.log(p2.constructor);</div></pre></td></tr></table></figure>
<p><strong>存在的问题</strong><br>每个实例的name，描述确实不一样，需要单独的空间存储，但是buy方法是所有实例都是一样的。我了避免内存浪费，所以就出现了原型帮我们解决这个问题。<br><strong>原型对象，不管你实例化多少次，都只生成一次。</strong>  </p>
<ul>
<li>只用构造函数创建对象存在的缺点<ul>
<li>对象需要实例化</li>
<li>每次实例化都需要分配内存存储这些数据</li>
<li>如果实例很多，那就要分配很多内存存储</li>
<li>一般每个实例的属性是不一样的，而行为一般都是一样的，所以我们希望每次实例化的方法，只分配内存保存不一样的数据。</li>
<li>而像原型对象方法，可以非配一次空间，所有的实例共享这个方法，所以需要原型对象。</li>
</ul>
</li>
<li>==原型对象中的工具被所有实例所共享==</li>
<li>原型对象的本质：<strong>原型对象的属性和方法可以被所有实例共享</strong><ul>
<li>这样，如果我们需要修改属性或者方法，就只需要修改一处，就能够影响到所有实例了。</li>
<li>所以，一般大家将共有的东西放在原型独享中。每个实例独特的不一样的属性放在构造函数中。</li>
</ul>
</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//面试题</span></div><div class="line"><span class="comment">//题目三</span></div><div class="line"><span class="keyword">var</span> fun = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;;</div><div class="line">fun.prototype = &#123;</div><div class="line">    info: &#123;</div><div class="line">    name: <span class="string">"peter"</span>,</div><div class="line">    age: <span class="number">25</span></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> a = <span class="keyword">new</span> fun();</div><div class="line"><span class="keyword">var</span> b = <span class="keyword">new</span> fun();</div><div class="line">a.info.name = <span class="string">"jack"</span>;</div><div class="line">b.info.name = <span class="string">"tom"</span>;</div><div class="line"><span class="built_in">console</span>.log(a.info.name); <span class="comment">//tom</span></div><div class="line"><span class="built_in">console</span>.log(b.info.name); <span class="comment">//tom</span></div></pre></td></tr></table></figure>
<h4 id="术语总结：双对象法则"><a href="#术语总结：双对象法则" class="headerlink" title="术语总结：双对象法则"></a>术语总结：双对象法则</h4><ul>
<li>通过原型创建对象，其实创建的是两个对象<ul>
<li>构造函数对象</li>
<li>原型对象</li>
</ul>
</li>
<li>当我们实例化的时候，该实例自动拷贝构造函数的所有属性和方法，而对于原型对象，则不拷贝，而是通过一个属性“铁链”。</li>
<li>双对象的名称<ul>
<li>构造函数对象的名称：就是函数名称</li>
<li>原型对象的名称：古怪点：函数名称.prototype。</li>
</ul>
</li>
<li>双双对象第一个对象：构造函数(对象) <ul>
<li>构造函数对象</li>
<li>构造函数对象中的属性方法</li>
<li>构造属性方法</li>
</ul>
</li>
<li>双对象第一个对象：原型对象<ul>
<li>原型</li>
<li>原型对象</li>
<li>原型属性 原型方法</li>
</ul>
</li>
</ul>
<h3 id="铁索连舟"><a href="#铁索连舟" class="headerlink" title="铁索连舟"></a>铁索连舟</h3><ul>
<li>实例不拷贝原型中的属性方法，如何访问其他属性？</li>
<li>隐藏的两个属性<ul>
<li>任何实例都有一个隐藏的属性：contructor，其值是构造函数。</li>
<li>此外还有一个隐藏的属性：prototype1，这就像一条铁链一样，将实例和原型对象连在一起，这样我们就可以访问到原型对象中的方法，而不用拷贝。</li>
</ul>
</li>
<li>双隐藏属性法则<ul>
<li>contructor</li>
<li>prototype</li>
</ul>
</li>
<li><strong>属性访问搜索原则</strong>  <ul>
<li>首先遍历自己的属性(从构造函数拷贝过来的属性)，如果找到就返回。</li>
<li>如果没找到，就根据铁链寻找到原型对象，一次遍历原型对象中的属性，如果找到同名的属性就返回。</li>
</ul>
</li>
<li><strong>原型链定义</strong>：以上的链式访问形式有一个术语：原型链。</li>
</ul>
<h4 id="主体屏蔽理论"><a href="#主体屏蔽理论" class="headerlink" title="主体屏蔽理论"></a>主体屏蔽理论</h4><ul>
<li>原型中也可以包含属性</li>
<li>两种访问方式<ul>
<li>访问原型对象中的属性 Product.prototype.buy() ;</li>
</ul>
</li>
<li>属性屏蔽理论 </li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">Product.prototype=&#123;</div><div class="line">    name:<span class="string">"zzz"</span>,</div><div class="line">    buy:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</div><div class="line">        alert(<span class="string">"原型对象"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> product=<span class="keyword">new</span> Product();</div><div class="line"><span class="comment">//原型属性屏蔽理论——乌云蔽日</span></div><div class="line"><span class="built_in">console</span>.log(product.buy());</div><div class="line"><span class="comment">//清除乌云</span></div><div class="line"><span class="keyword">delete</span> product.buy;</div><div class="line"><span class="built_in">console</span>.log(product.buy());</div><div class="line"></div><div class="line"><span class="comment">//被屏蔽之后如何获取</span></div><div class="line"><span class="built_in">console</span>.log(Product.prototype.buy());</div></pre></td></tr></table></figure>
<h4 id="构造属性和原型属性判断"><a href="#构造属性和原型属性判断" class="headerlink" title="构造属性和原型属性判断"></a>构造属性和原型属性判断</h4><ul>
<li>hasOwnProperty()方法<ul>
<li>可以判断一个属性是存在于构造对象的实例上海市原型对象上，该方法继承自Object。</li>
<li>如果是实例对象-true</li>
<li>如果是原型对象-false</li>
</ul>
</li>
</ul>
<h4 id="引用类型和值类型"><a href="#引用类型和值类型" class="headerlink" title="引用类型和值类型"></a>引用类型和值类型</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//数值型</span></div><div class="line"><span class="keyword">var</span> str;<span class="comment">//这个时候不进行内存分配</span></div><div class="line"><span class="keyword">var</span> x=<span class="number">9</span>;<span class="comment">//分配内存</span></div><div class="line"><span class="keyword">var</span> y=x;<span class="comment">//不分配内存 y变量和x变量公用同一个地址</span></div><div class="line"><span class="built_in">console</span>.log(str);</div><div class="line"><span class="built_in">console</span>.log(x==y);<span class="comment">//比较的是指指针指向的内存空间中存储的值</span></div><div class="line"><span class="built_in">console</span>.log(x===y);<span class="comment">//比较的是地址和内存中存储的值</span></div><div class="line"><span class="comment">//字符串</span></div><div class="line"><span class="keyword">var</span> str1;<span class="comment">//这个时候不进行内存分配</span></div><div class="line"><span class="keyword">var</span> str2=<span class="string">"百事屋"</span>;<span class="comment">//分配内存</span></div><div class="line"><span class="keyword">var</span> str3=str2;</div><div class="line"><span class="built_in">console</span>.log(str2==str3);<span class="comment">//比较的是指针指向的内存空间中存储的量</span></div><div class="line"><span class="built_in">console</span>.log(str2===str3);<span class="comment">//比较的是地址和地址中存储的值</span></div><div class="line"><span class="comment">//数组</span></div><div class="line"><span class="keyword">var</span> arr1=[<span class="string">"你猜"</span>,<span class="string">"你再猜"</span>];<span class="comment">//分配内存</span></div><div class="line"><span class="comment">//引用类型其实指向同一个地址，也就是操作的其实是同一个位置。</span></div><div class="line"><span class="keyword">var</span> arr2=arr1;<span class="comment">//问题，这里arr2会会不会分配内存，答案不会</span></div><div class="line"><span class="built_in">console</span>.log(arr1[<span class="number">0</span>]);</div><div class="line"><span class="built_in">console</span>.log(arr2[<span class="number">0</span>]);<span class="comment">//一样</span></div><div class="line"></div><div class="line"><span class="comment">//修改数组</span></div><div class="line">arr[<span class="number">0</span>]=<span class="string">"三国 水壶 西游记"</span>;</div><div class="line"><span class="built_in">console</span>.log(arr1[<span class="number">0</span>]);</div><div class="line"><span class="built_in">console</span>.log(arr2[<span class="number">0</span>]);</div><div class="line"><span class="comment">//一样，说明这里不是分配内存，其实arr变量中存的是地址，指向arr1内存</span></div><div class="line"></div><div class="line"><span class="comment">//函数</span></div><div class="line"><span class="comment">//系统都会在内存中生成两个区域：一个存储变量，一个用来存储函数</span></div><div class="line"><span class="comment">//而变量中存放的知识函数空间所在的地址(指针)</span></div><div class="line"><span class="comment">//由于函数是对象，因此函数名实际上也是一个指向函数对象的指针，不会与某个函数绑定。</span></div><div class="line"><span class="comment">//由于函数名仅仅是指向函数的指针</span></div><div class="line"><span class="comment">//因此函数名与包含对象指针的其他变量没有什么不同</span></div><div class="line"><span class="comment">//换句话说，一个函数可能会有多个名字，例如：</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">num1,num2</span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> num1+num2;</div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.log(sum(<span class="number">10</span>,<span class="number">10</span>));<span class="comment">//20</span></div><div class="line"><span class="keyword">var</span> anotherSum=sum;<span class="comment">//内能是如何分配的？这里不会在内存生成新的空间，存储函数。而是生成一个变量，变量中保存的是同一个地址</span></div><div class="line">sum=<span class="literal">null</span>;<span class="comment">//这里只是将sum变量中原来保存的是函数地址，然后赋值成null，这样做并不会影响到函数对象对象的内存空间</span></div><div class="line"><span class="built_in">console</span>.log(anotherSum(<span class="number">10</span>,<span class="number">10</span>));<span class="comment">//20</span></div><div class="line"><span class="built_in">console</span>.log(sum(<span class="number">10</span>,<span class="number">10</span>));<span class="comment">//20</span></div></pre></td></tr></table></figure>
<p><strong>由于函数是对象，因此函数名实际上也是一个指向函数对象的指针，不会与某个函数绑定。</strong>  </p>
<h3 id="对象-1"><a href="#对象-1" class="headerlink" title="对象"></a>对象</h3><h4 id="引用类型和值类型-1"><a href="#引用类型和值类型-1" class="headerlink" title="引用类型和值类型"></a>引用类型和值类型</h4><h5 id="值类型内存分配"><a href="#值类型内存分配" class="headerlink" title="值类型内存分配"></a>值类型内存分配</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">chainStore</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> store=<span class="string">"nihao"</span>;</div><div class="line">    <span class="keyword">var</span> store2=store1;</div><div class="line">    store1=<span class="string">"haoni"</span>;</div><div class="line">    alert(store2);<span class="comment">//nihao</span></div><div class="line">&#125;</div><div class="line">chainStore();</div><div class="line"><span class="comment">//把一个值类型(也可以叫基本类型)store2传递另一个变量(赋值)时，其实是分配了一块新的内存空间，因此改变store1的值对store2没有任何影响，因为它不像引用类型，变量的交换其实是交换了指向同一个内容的地址。</span></div></pre></td></tr></table></figure>
<h5 id="对象是引用类型"><a href="#对象是引用类型" class="headerlink" title="对象是引用类型"></a>对象是引用类型</h5><p>对象是引用类型，赋值只是生成一个内存保存地址而已。<br>var y=x；<br>如果变量x表示一个对象，则通过复制后，y生成一个变量，变量包含一个地址，地址指向对象x。所以从本质上而言，不会生成新的变量，x，y指向内存中的同一个位置，当你通过y改变对象的值，这种变化也会反映到x上。<br><strong>Y不完全拷贝X对象，而只是生成一个变量，变量中存储的是x的地址。所以X其实是Y是一回事</strong>  </p>
<h5 id="引用类型内存分配"><a href="#引用类型内存分配" class="headerlink" title="引用类型内存分配"></a>引用类型内存分配</h5><p>其实操作的就是地址，他们都指向同一片地址，所以修改任何一个变量都是修改自身。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">chainStore</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> store1=[<span class="string">"Nike China"</span>];</div><div class="line">    <span class="keyword">var</span> store2=store1;</div><div class="line">    store1[<span class="number">0</span>]=<span class="string">"Nike U.S.A"</span>;</div><div class="line">    alert(store2[<span class="number">2</span>]);<span class="comment">//Nike U.S.A</span></div><div class="line">&#125;</div><div class="line">chainStore();</div></pre></td></tr></table></figure></p>
<p>在上面的代码中，store2只进行一次赋值，理论上它的值已经确定，但后面通过改写store1的值，发现store2的值也发生了改变，这正是引用类型的特征，也是我们要注意的地方。  </p>
<h5 id="引用类型和值类型区别"><a href="#引用类型和值类型区别" class="headerlink" title="引用类型和值类型区别"></a>引用类型和值类型区别</h5><ul>
<li>内存分配机制不一样<ul>
<li>引用类型-创建一个变量——内存中保存的是变量真实入口的地址</li>
<li>值类型-创建一个变量，内存创建一个区域。</li>
<li>说白了就是==引用类型会分配两个区域：一个保存地址，一个保存内容==</li>
</ul>
</li>
<li>变量赋值是否的区别<ul>
<li>将一个值类型赋值给另一个变量，实际上就是创建一个区域</li>
<li>引用类型，只是创建一个区域，保存另一个变量的入口地址。 </li>
</ul>
</li>
</ul>
<p><strong>总结</strong>  </p>
<ul>
<li>值类型赋值，会重新分配内存</li>
<li>==引用类型赋值其实赋的是指针。==</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params">x</span>) </span>&#123;</div><div class="line">            <span class="built_in">console</span>.log(<span class="keyword">typeof</span>(x));    <span class="comment">// undefined 值类型</span></div><div class="line">            <span class="built_in">console</span>.log(<span class="keyword">typeof</span>(<span class="number">10</span>));   <span class="comment">// number 值类型</span></div><div class="line">            <span class="built_in">console</span>.log(<span class="keyword">typeof</span>(‘abc’)); <span class="comment">// string 值类型</span></div><div class="line">            <span class="built_in">console</span>.log(<span class="keyword">typeof</span>(<span class="literal">true</span>));  <span class="comment">// Boolean 值类型</span></div><div class="line">            <span class="built_in">console</span>.log(<span class="keyword">typeof</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; &#125;));  <span class="comment">//函数 引用类型</span></div><div class="line">            <span class="built_in">console</span>.log(<span class="keyword">typeof</span>([<span class="number">1</span>, ‘a’, <span class="literal">true</span>]));  <span class="comment">//数组  引用类型</span></div><div class="line">            <span class="built_in">console</span>.log(<span class="keyword">typeof</span> (&#123; <span class="attr">a</span>: <span class="number">10</span>, <span class="attr">b</span>: <span class="number">20</span> &#125;));  <span class="comment">//object 或者json  引用类型</span></div><div class="line">            <span class="built_in">console</span>.log(<span class="keyword">typeof</span> (<span class="literal">null</span>));  <span class="comment">//null  引用类型</span></div><div class="line">            <span class="built_in">console</span>.log(<span class="keyword">typeof</span> (<span class="keyword">new</span> <span class="built_in">Number</span>(<span class="number">10</span>)));  <span class="comment">//内置对象 引用类型</span></div><div class="line">Var na；</div><div class="line">        &#125;</div><div class="line">        show();</div><div class="line">其中上面的四种（<span class="literal">undefined</span>, number, string, boolean）属于值类型，不是对象。</div><div class="line">函数、数组、对象、<span class="literal">null</span>、<span class="keyword">new</span> <span class="built_in">Number</span>(<span class="number">10</span>)都是对象。他们都是引用类型。</div></pre></td></tr></table></figure>
<h5 id="值类型"><a href="#值类型" class="headerlink" title="值类型"></a>值类型</h5><ol>
<li>undefined 值类型</li>
<li>number 值类型</li>
<li>string 值类型</li>
<li>Boolean 值类型</li>
</ol>
<p>保存在栈内存中的简单数据段，栈是在内存中划分的固定内存。</p>
<h5 id="引用类型"><a href="#引用类型" class="headerlink" title="引用类型"></a>引用类型</h5><p>函数，数组，json类型，null，数值对象。<br>目的将数值型转换成引用类型new Number(10);</p>
<h4 id="堆内存空间和栈内存空间"><a href="#堆内存空间和栈内存空间" class="headerlink" title="堆内存空间和栈内存空间"></a>堆内存空间和栈内存空间</h4><p><strong>值类型都是存放在栈内存空间的</strong><br><strong>引用类型都是存放在堆内存空间的</strong>  </p>
<ul>
<li>栈：存放变量，变量中保存的只是对象所在的地址。</li>
<li>堆：保存对象真正的数据。</li>
</ul>
<h4 id="内存使用生命周期"><a href="#内存使用生命周期" class="headerlink" title="内存使用生命周期"></a>内存使用生命周期</h4><p>js环境中分配的内存一般有如下生命周期：  </p>
<ul>
<li>内存分配：当我们申明变量、函数、对象的时候，系统会自动为他们分配内存。</li>
<li>内存使用 var name=null;即读写内存，也就是使用变量，函数等。</li>
<li>内存回收：使用完毕，由垃圾回收自动回收不再使用的内存。</li>
</ul>
<h5 id="两个概念"><a href="#两个概念" class="headerlink" title="两个概念"></a>两个概念</h5><p>一切数据通过变量来管理。<br>定义变量的过程其实就是内存分配的过程，所以本质上一切数据都是存放在内存中的。  </p>
<h5 id="一切数据都是通过变量来存储的"><a href="#一切数据都是通过变量来存储的" class="headerlink" title="一切数据都是通过变量来存储的"></a>一切数据都是通过变量来存储的</h5><p>数据通过变量来管理，不管是字符串，数字，还是复杂的对象，都是存放在变量中的。有些时候系统会自动生成变量存储，即使我们看不到。总之一切数据都是通过变量存储的。</p>
<h5 id="内存生命使用周期-定义变量的过程就是内存分配的过程"><a href="#内存生命使用周期-定义变量的过程就是内存分配的过程" class="headerlink" title="内存生命使用周期-定义变量的过程就是内存分配的过程"></a>内存生命使用周期-定义变量的过程就是内存分配的过程</h5><p>内存分配就是使用内存。<br>内存空间是有限的，4g内存，8g内存，使用完就要回收。<br>好的程序都会处理这一点。整个c语言编程就是针对内存编程。这就是内存使用生命周期，也就是变量的生命周期。</p>
<h5 id="内存回收-自动释放篇"><a href="#内存回收-自动释放篇" class="headerlink" title="内存回收-自动释放篇"></a>内存回收-自动释放篇</h5><p>释放内存  </p>
<ol>
<li>系统自动释放</li>
<li>释放定义的数组占用的空间</li>
<li>释放对象的每个属性，方法占用的内存</li>
<li>释放对象本身占用的内存。</li>
</ol>
<ul>
<li>浏览器自动释放内存：IE在最小化和关闭时释放。  </li>
<li>值类型内存自动释放：当函数执行的时候，会将参数，函数中定义的值的类型变量都保存在堆栈中。当函数执行结束，会自动释放和这个函数有关的存放在堆栈中的值类型变量。==闭包除外==  </li>
<li>引用类型内存释放：引用类型通过引用计算器管理，实例化+1销毁(比如函数执行结束-1)，直到这个类的引用计数为0则系统自动释放内存。</li>
</ul>
<h5 id="内存泄漏"><a href="#内存泄漏" class="headerlink" title="内存泄漏"></a>内存泄漏</h5><ul>
<li>定义：内存泄漏是指一块被分配的内存既不能使用，又不能回收，这样泄漏越多，最终导致占用内存越来越多，最终使得应用崩溃，甚至导致浏览器崩溃，最恶毒的就是导致系统也崩溃。  </li>
<li>在C++中，因为是手动管理内存，内存泄漏是经常出现的事情。而现在流行的c#和java等语言采用了自动垃圾回收方法管理内存，正常使用的情况下几乎不会发生内存泄漏。浏览器中也是采用自动垃圾回收方法管理内存，但由于浏览器垃圾回收方法有bug，会产生内存泄漏。  </li>
<li>为什么c语言易学难用：c语言编程在实际中都是自己负责内存的分配，回收等。而高级语言都是系统帮我们管理内存。</li>
</ul>
<ul>
<li>如何解决内存泄漏：<ul>
<li>高级语言的指针和内存管理<ul>
<li>C语言，C++语言，JAVA语言，C#语言</li>
<li>其他语言=也有指针这个概念</li>
</ul>
</li>
<li>为什么C/C++语言相对Java等高级语言较为难学：因为需要程序员自己处理内存分配，内存泄漏，内存安全等问题。</li>
<li>Java，C#，swift语言自动内存回收机制：引用计数器的原理，函数的回收原理。</li>
</ul>
</li>
</ul>
<h4 id="其他方式创建对象"><a href="#其他方式创建对象" class="headerlink" title="其他方式创建对象"></a>其他方式创建对象</h4><p>总结创建对象的几种方式：  </p>
<ul>
<li>字面量</li>
<li>Object<ul>
<li>获取对象的值：通过.或者[]操作符 </li>
<li>缺点：重复太多</li>
</ul>
</li>
<li>内置对象</li>
<li>构造函数<ul>
<li>方法是所有实例都一样的，每次实例都重新分配内存，造成内存浪费。 </li>
</ul>
</li>
<li>原型对象<ul>
<li>有些属性，比如name并非是所有实例共享的</li>
<li>比如每个手机名称是不一样的</li>
<li>如果是值类型能正常显示</li>
<li>但是如果是引用类型就会出错</li>
<li>解决方式<ul>
<li>使用构造函数+原型对象方式</li>
<li>也就是混合模式</li>
</ul>
</li>
</ul>
</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//混合模式</span></div><div class="line"><span class="keyword">var</span> Role=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.name=&#123;<span class="attr">nickName</span>:<span class="string">"Jack"</span>,<span class="attr">accountName</span>:<span class="string">"12345@qq.com"</span>&#125;;</div><div class="line">&#125;</div><div class="line"><span class="comment">//姓名</span></div><div class="line"><span class="comment">//生命值</span></div><div class="line">Role.prototype.HP=<span class="number">100</span>;</div><div class="line"><span class="comment">//魔法值</span></div><div class="line">Role.prototype.MP=<span class="number">100</span>;</div><div class="line"><span class="comment">//技能</span></div><div class="line">Role.prototype.technologys=[<span class="string">"普攻"</span>,<span class="string">"变成白痴"</span>,<span class="string">"变成Sb"</span>,<span class="string">"变成猪头"</span>];</div><div class="line"><span class="comment">//跑起来</span></div><div class="line">Role.prototype.run=<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</div><div class="line">    alert(<span class="string">"run"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>拷贝<ul>
<li>原理：遍历A对象的每个属性，以此赋值给另一个空对象。</li>
<li>使用场景：<ul>
<li>默认值场景(默认值和自定义值，模版)</li>
<li>拓展功能(框架)</li>
</ul>
</li>
</ul>
</li>
<li>工厂<ul>
<li>本质<ul>
<li>其实就是封装性</li>
<li>其实就是隐藏细节</li>
<li>让我们可以拿来即用</li>
<li>就像现实的工厂一样，生产出手机，我们可以直接使用</li>
</ul>
</li>
</ul>
</li>
<li>第三方<ul>
<li>基本方法</li>
<li>使用第三方框架改造案例</li>
</ul>
</li>
</ul>
<p>面向对象的一切思维都是来源于生活  </p>
<ul>
<li>生活场景<ul>
<li>工厂模式也不例外</li>
<li>工厂模式就是将物品生产交给工厂来做</li>
<li>同样的，我们可以实例看做一个具体的产品。产品创建的工作交给工厂，我们直接做事</li>
</ul>
</li>
<li>与构造函数创建区别<ul>
<li>没有显式的创建对象——不需要new</li>
<li>没有return语句</li>
</ul>
</li>
<li>传参的方式实现数据修改：<ul>
<li>适用于不用修改任何对象内部的任何值的情况</li>
<li>虽然避免了重复，但是使用范围较窄。</li>
</ul>
</li>
</ul>
<h4 id="各种术语总结"><a href="#各种术语总结" class="headerlink" title="各种术语总结"></a>各种术语总结</h4><ul>
<li>双对象法则：构造函数对象，原型对象</li>
<li>构造函数</li>
<li>原型对象</li>
<li>构造对象属性和方法</li>
<li>原型属性和方法</li>
<li>OOP</li>
<li>OO</li>
<li>高阶：继承 多态 接口 抽象 重载 覆写<ul>
<li>继承：一般构造函数对象中防止属性，原型对象中放置所有实例共享的方法<ul>
<li>构造函数黄建的实例能访问原型对象的方法属性是因为继承</li>
<li>两个对象的本质关系：原型对象继承了构造函数对象，因而可以访问构造函数对象的一切方法，属性。</li>
</ul>
</li>
<li>重载——overload<ul>
<li>function Add(a,b){};</li>
<li>function Add(a,b,c){};</li>
<li>function Add(a,b,c,d){};</li>
<li>function Add(a,b,c,d,e){};</li>
</ul>
</li>
<li>覆写：重写——override<ul>
<li>重写表示重写父对象的同名方法或者属性</li>
</ul>
</li>
</ul>
</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line"><span class="comment">//    重写 重载 - override</span></div><div class="line"><span class="comment">//重写表示重写父对象的同名方法或者属性</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name, sex</span>) </span>&#123;</div><div class="line">    <span class="keyword">this</span>.name = name;</div><div class="line">    <span class="keyword">this</span>.sex = sex;</div><div class="line">    <span class="keyword">this</span>.test=<span class="string">'构造函数定义的属性'</span></div><div class="line">    <span class="keyword">this</span>.add=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    alert(<span class="string">'构造函数对象中定义的方法'</span>)</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">Person.prototype = &#123;</div><div class="line">    test:<span class="string">'原型中定义的属性'</span>,</div><div class="line">    getName: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.name;</div><div class="line">    &#125;,</div><div class="line">    getSex: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.sex;</div><div class="line">    &#125;,</div><div class="line">    add:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        alert(<span class="string">'原型对象中定义的方法'</span>)</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> shukui=<span class="keyword">new</span> Person(<span class="string">'wangshukui'</span>,<span class="string">'nan'</span>)</div><div class="line">shukui.add();<span class="comment">//构造函数对象继承原型对象 方法被重写</span></div><div class="line">alert(shukui.test); <span class="comment">//构造函数对象继承原型对象 属性被重写</span></div><div class="line">Person.prototype.add();</div><div class="line">Person.add();<span class="comment">//报错</span></div><div class="line">person.prototype.add(); <span class="comment">//报错</span></div><div class="line"><span class="comment">//    高级语言的中的覆写 - 重写 - override</span></div><div class="line"><span class="comment">//</span></div><div class="line"><span class="comment">//    //声明一个超类的</span></div><div class="line"><span class="comment">//    public class Parent&#123;</span></div><div class="line"><span class="comment">//        public void kick()&#123;</span></div><div class="line"><span class="comment">//            System.out.println(“kick football beeline.”);</span></div><div class="line"><span class="comment">//        &#125;</span></div><div class="line"><span class="comment">//    &#125;</span></div><div class="line"><span class="comment">//    //声明一个子类</span></div><div class="line"><span class="comment">//    public class Child extends Parent&#123;</span></div><div class="line"><span class="comment">//        public void kick()&#123;</span></div><div class="line"><span class="comment">//            System.out.println(“kick football arc.”);</span></div><div class="line"><span class="comment">//        &#125;</span></div><div class="line"><span class="comment">//    &#125;</span></div><div class="line"><span class="comment">//    //执行代码</span></div><div class="line"><span class="comment">//    public class test&#123;</span></div><div class="line"><span class="comment">//        public static void mian(String[] args)&#123;</span></div><div class="line"><span class="comment">//        Child cld=new Child();</span></div><div class="line"><span class="comment">//        cld.kick();//print kick football arc.</span></div><div class="line"><span class="comment">//    &#125;</span></div><div class="line"><span class="comment">//    &#125;</span></div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure>
<h4 id="面向对象定义"><a href="#面向对象定义" class="headerlink" title="面向对象定义"></a>面向对象定义</h4><p>面型过程就是使用函数包装好一个一个工具。<br>常用的三个过程：init，binddom，bindevents。<br><strong>面向对象编程原则：单一功能原则——一个函数尽量包含一个功能。</strong></p>
<h4 id="面向对象编程"><a href="#面向对象编程" class="headerlink" title="面向对象编程"></a>面向对象编程</h4><p>==原则：单一职责==  </p>
<h5 id="绑定进阶"><a href="#绑定进阶" class="headerlink" title="绑定进阶"></a>绑定进阶</h5><p>数据绑定：在开发中，数据一般是从后台开发人员从数据库读取出来，封装成一个json字符串返回给你，然后我们需要将前端写的假数据编程真数据，这个过程就是数据绑定。  </p>
<ul>
<li>数据绑定的几种形式<ul>
<li>简单绑定方法</li>
<li>动态创建标签绑定方式<ul>
<li>使用场景：状态不同，显示内同不一样。</li>
<li>比如登录有三个状态：未登录，登录失败，登录成功</li>
<li>每种状态显示的内容时不一样的，这个时候就需要动态创建标签。</li>
<li>使用技术：innerHTML append</li>
<li>备注：议案用于动态生成的代码量少的时候，如果需要动态生成很多代码，一般用模版技术。</li>
</ul>
</li>
<li>模版技术<ul>
<li>王者：art template(完美融合node.js)</li>
<li>doT.js</li>
<li>Juicer.js(支持node.js)</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="art模版语法"><a href="#art模版语法" class="headerlink" title="art模版语法"></a>art模版语法</h3><p>编写模版，使用一个type=”text/html”的script便签存放模版<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;script id=<span class="string">"test"</span> type=<span class="string">"text/html"</span>&gt;</div><div class="line"> &lt;h1&gt;&#123;&#123;title&#125;&#125;&lt;<span class="regexp">/h1&gt; </span></div><div class="line"><span class="regexp">&lt;ul&gt; </span></div><div class="line"><span class="regexp">&#123;&#123;each list as value i&#125;&#125; </span></div><div class="line"><span class="regexp">&lt;li&gt;索引 &#123;&#123;i + 1&#125;&#125; ：&#123;&#123;value&#125;&#125;&lt;/</span>li&gt; </div><div class="line">&#123;&#123;/each&#125;&#125; </div><div class="line">&lt;<span class="regexp">/ul&gt; </span></div><div class="line"><span class="regexp">&lt;/</span>script&gt;</div></pre></td></tr></table></figure></p>
<ul>
<li>数据模版绑定<br>Test是模版名称，Data是数据名称  </li>
<li><p>两种绑定语法：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> data = &#123; </div><div class="line">title: <span class="string">'标签'</span>, </div><div class="line">list: [<span class="string">'文艺'</span>, <span class="string">'博客'</span>, <span class="string">'摄影'</span>, <span class="string">'电影'</span>, <span class="string">'民谣'</span>, <span class="string">'旅行'</span>, <span class="string">'吉他'</span>] </div><div class="line">&#125;; </div><div class="line"></div><div class="line"><span class="keyword">var</span> html = template(<span class="string">'test'</span>, data); <span class="built_in">document</span>.getElementById(<span class="string">'content'</span>).innerHTML = html;</div></pre></td></tr></table></figure>
</li>
<li><p>条件表达式</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&#123;&#123;<span class="keyword">if</span> admin&#125;&#125; </div><div class="line">&lt;p&gt;admin&lt;<span class="regexp">/p&gt;</span></div><div class="line"><span class="regexp"> &#123;&#123;else if code &gt; 0&#125;&#125; </span></div><div class="line"><span class="regexp">	&lt;p&gt;master&lt;/</span>p&gt;</div><div class="line"> &#123;&#123;<span class="keyword">else</span>&#125;&#125; </div><div class="line">      &lt;p&gt;error!<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></div><div class="line"> &#123;&#123;/<span class="keyword">if</span>&#125;&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>遍历表达式</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//无论数组或者对象都可以用each进行遍历</span></div><div class="line">&#123;&#123;each list <span class="keyword">as</span> value index&#125;&#125; </div><div class="line">&lt;li&gt;</div><div class="line">	&#123;&#123;index&#125;&#125; - &#123;&#123;value.user&#125;&#125;</div><div class="line">&lt;<span class="regexp">/li&gt; </span></div><div class="line"><span class="regexp">&#123;&#123;/</span>each&#125;&#125; </div><div class="line">亦可以被简写：</div><div class="line">&#123;&#123;each list&#125;&#125; </div><div class="line">&lt;li&gt;</div><div class="line">	&#123;&#123;$index&#125;&#125; - &#123;&#123;$value.user&#125;&#125;</div><div class="line">&lt;<span class="regexp">/li&gt; </span></div><div class="line"><span class="regexp">&#123;&#123;/</span>each&#125;&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li>子模版<ul>
<li>模版包含表达式，用于嵌套子模版<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;&#123;include <span class="string">'template_name'</span>&#125;&#125; </div><div class="line">子模板默认共享当前数据，亦可以指定数据：</div><div class="line">&#123;&#123;include <span class="string">'template_name'</span> news_list&#125;&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<p>子模版好处：模块化组装页面，将复杂页面分成几个模块，携程模版，之后通过一个容器模版组装整个网页。这代表一种未来新兴开发技术。基于node.js+arttemplate技术，已经实现动态加载模版技术。 </p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前端开发&quot;&gt;&lt;a href=&quot;#前端开发&quot; class=&quot;headerlink&quot; title=&quot;前端开发&quot;&gt;&lt;/a&gt;前端开发&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;编写通用框架-可以使用jQuery。&lt;/li&gt;
&lt;li&gt;编写通用UI组件——可以选择使用jQuery UI插件。
    
    </summary>
    
      <category term="面向对象" scheme="http://yoursite.com/categories/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
    
      <category term="面向对象" scheme="http://yoursite.com/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>面向对象进阶版本1.0</title>
    <link href="http://yoursite.com/2017/04/10/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6%E7%89%88%E6%9C%AC1.0/"/>
    <id>http://yoursite.com/2017/04/10/面向对象进阶版本1.0/</id>
    <published>2017-04-10T07:21:36.000Z</published>
    <updated>2017-09-08T02:58:39.358Z</updated>
    
    <content type="html"><![CDATA[<h3 id="构造函数和属性"><a href="#构造函数和属性" class="headerlink" title="构造函数和属性"></a>构造函数和属性</h3><h4 id="01-基础"><a href="#01-基础" class="headerlink" title="01. 基础"></a>01. 基础</h4><ul>
<li>只使用构造函数创建对象</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">    <span class="comment">//该函数 用于创建对象 其除了是一个函数之外，我们又称之为构造对象的函数 - 简称构造函数</span></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Product</span>(<span class="params">name,description</span>)</span>&#123;</div><div class="line">    <span class="comment">//属性</span></div><div class="line">   <span class="keyword">this</span>.name=name;</div><div class="line">    <span class="comment">// 属性</span></div><div class="line">    <span class="keyword">this</span>.description = description</div><div class="line">    <span class="comment">//方法 又称方法属性 万物皆属性</span></div><div class="line">    <span class="keyword">this</span>.buy=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        alert(<span class="string">'buy'</span>)</div><div class="line">    &#125;</div><div class="line"> &#125;</div><div class="line"></div><div class="line">    <span class="comment">//会拷贝一份</span></div><div class="line">    <span class="keyword">var</span> p1 = <span class="keyword">new</span> Product()</div><div class="line">    <span class="keyword">var</span> p2 = <span class="keyword">new</span> Product()</div><div class="line"></div><div class="line">    <span class="built_in">console</span>.log(p1.constructor)</div><div class="line">    <span class="built_in">console</span>.log(p2.constructor)</div><div class="line"></div><div class="line">    <span class="comment">/*如何判断某个实例是否是根据某个构造函数创建的*/</span></div><div class="line">    <span class="keyword">if</span>(p1 <span class="keyword">instanceof</span> Product)&#123;</div><div class="line">        alert(<span class="string">'true'</span>)</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">/*存在的问题*/</span></div><div class="line">    <span class="comment">//每个实例的name，描述确实不一样，需要单独的空间存储，但是buy方法是所有实例都一样的</span></div><div class="line"></div><div class="line">    <span class="comment">/*为了避免内存浪费，所以出现了原型帮助我们解决这个问题*/</span></div><div class="line"></div><div class="line">    <span class="comment">/*原型对象 不管你实例化多少次，都只生成一次*/</span></div><div class="line"></div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure>
<p><strong>四种创建方式</strong></p>
<ol>
<li>传参形式</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Product</span>(<span class="params">name</span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.name = name</div><div class="line">&#125;</div><div class="line">Product.prototype=&#123;&#125;；</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">var</span> iphone = <span class="keyword">new</span> Product(<span class="string">'iphone8s'</span>)；</div></pre></td></tr></table></figure>
<ol>
<li>默认值</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Product</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.name = <span class="string">''</span></div><div class="line">    <span class="keyword">this</span>.price=<span class="number">0</span></div><div class="line">&#125;</div><div class="line">Product.prototype=&#123;&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">var</span> iphone = <span class="keyword">new</span> Product()</div><div class="line"><span class="comment">/*动态添加形式*/</span></div><div class="line">iphone.description=<span class="string">'XXXXXXXXXX'</span></div><div class="line">iphone.images=[]</div></pre></td></tr></table></figure>
<ol>
<li>混合模式</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Product</span>(<span class="params">name,price</span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.name = name</div><div class="line">    <span class="keyword">this</span>.price=price</div><div class="line">    <span class="keyword">this</span>.version=<span class="number">1.0</span></div><div class="line">    <span class="keyword">this</span>.add=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</div><div class="line">&#125;</div><div class="line">Product.prototype=&#123;&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">var</span> iphone = <span class="keyword">new</span> Product()</div></pre></td></tr></table></figure>
<ol>
<li>动态添加形式</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">iphone.description=<span class="string">'XXXXXXXXXX'</span></div><div class="line">    iphone.images=[]</div><div class="line"></div><div class="line"></div><div class="line">    <span class="built_in">console</span>.log(iphone <span class="keyword">instanceof</span> Product)<span class="comment">//true</span></div></pre></td></tr></table></figure>
<h4 id="属性进阶"><a href="#属性进阶" class="headerlink" title="属性进阶"></a>属性进阶</h4><p><strong>万物皆属性</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Product</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">this</span>.name=<span class="string">''</span></div><div class="line">        <span class="keyword">this</span>.add=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    Product.prototype=&#123;</div><div class="line"></div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p><strong>万物皆变量</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> str =<span class="string">''</span></div><div class="line"><span class="keyword">var</span> num=<span class="number">1</span></div><div class="line"><span class="keyword">var</span> bool=<span class="literal">true</span></div><div class="line"><span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>()</div><div class="line"><span class="built_in">console</span>.log(fn())</div><div class="line"><span class="built_in">console</span>.log(fn2())<span class="comment">//无法访问到</span></div><div class="line"></div><div class="line"><span class="comment">//函数声明，变量fn以及其实现被提升到顶部</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'函数'</span>)</div><div class="line">&#125;</div><div class="line"><span class="comment">//函数表达式,仅变量fn2被提升到顶部，实现没有被提升</span></div><div class="line"><span class="keyword">var</span> fn2 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'函数变量形式'</span>)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/*万物皆变量*/</span></div><div class="line"><span class="keyword">var</span> Product = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.name=<span class="string">'iphone'</span></div><div class="line">    <span class="keyword">this</span>.add=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">Product.prototype=&#123;</div><div class="line">    buy:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> iphone =  <span class="keyword">new</span> Product();</div><div class="line"><span class="built_in">console</span>.log(iphone.name)</div></pre></td></tr></table></figure></p>
<h4 id="产品对象"><a href="#产品对象" class="headerlink" title="产品对象"></a>产品对象</h4><ul>
<li>对象内使用对象的属性和方法：this</li>
<li>对象的使用方法：先实例化，后用点语法</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*类 -- 抽象对象*/</span></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Product</span>(<span class="params">name,price</span>) </span>&#123;</div><div class="line">        <span class="comment">/*属性 行为 可以为空或者给默认值*/</span></div><div class="line">        <span class="keyword">this</span>.name=name</div><div class="line">        <span class="keyword">this</span>.price=<span class="number">0</span>;</div><div class="line">        <span class="keyword">this</span>.description = <span class="string">''</span>;</div><div class="line">        <span class="keyword">this</span>.zhekou = <span class="string">''</span></div><div class="line">        <span class="keyword">this</span>.sales = <span class="string">''</span></div><div class="line">        <span class="comment">/*我们的需求：自动计算打折后的价格*/</span></div><div class="line">        <span class="comment">/*形象的理解：包装*/</span></div><div class="line">        <span class="built_in">Object</span>.defineProperty(<span class="keyword">this</span>, <span class="string">"price"</span>, &#123;</div><div class="line">            get: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;<span class="keyword">return</span> price*<span class="number">0.9</span>;&#125;,</div><div class="line">            set: <span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123;</div><div class="line">                <span class="comment">/*大概普通产品的价格都在0--1万*/</span></div><div class="line">                <span class="keyword">if</span>(value&gt;<span class="number">10000</span>)</div><div class="line">                &#123;</div><div class="line">                    alert(<span class="string">'产品价格必须在0--1万之间'</span>);</div><div class="line">                &#125;<span class="keyword">else</span>&#123;</div><div class="line">                    price = value;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p><strong>定义对象的两种方式</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//第一种方法</span></div><div class="line"><span class="comment">//定义对象的两种方式</span></div><div class="line">    Product.prototype=&#123;</div><div class="line">        getPrice:<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.price</div><div class="line">        &#125;,</div><div class="line">        addToCart:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            alert(<span class="string">'将物品添加到购物车'</span>)</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"><span class="comment">//第二种方法</span></div><div class="line">    Product.prototype.buy=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    Product.prototype.addToCart=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line"></div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>堆积木开发，代码可读性极高。<br>使用方法：对象的使用必须先实例化，对象定义好之后，都是抽象的，必须实例化成具体。<br>==给对象赋值，也可以新增属性==<br>例如：iphone.name=”iphone7”;<br><strong>绑定元素：通过点语法访问对象中的属性或者方法</strong><br>例如： name.innerHTML=iphone.name;<br><strong>绑定事件</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    iphone.addToCart();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>添加一个属性包装器</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//添加一个属性包装器</span></div><div class="line">   <span class="built_in">Object</span>.defineProperty(<span class="keyword">this</span>, <span class="string">"produceDate"</span>, &#123;</div><div class="line">       get: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">           <span class="keyword">return</span> produceDate.toLocaleDateString();</div><div class="line">           <span class="comment">/*return produceDate.toLocaleString();*/</span></div><div class="line">       &#125;,</div><div class="line">       set: <span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123;</div><div class="line">           produceDate = value;</div><div class="line">       &#125;</div><div class="line">   &#125;);</div></pre></td></tr></table></figure></p>
<h4 id="共有属性私有属性"><a href="#共有属性私有属性" class="headerlink" title="共有属性私有属性"></a>共有属性私有属性</h4><h5 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h5><p>对象构造函数<br>私有属性好处：安全，就类似于闭包中的函数一样，减少污染。<br><strong>私有属性，只能在对象构造函数内部使用</strong><br><strong>公有属性，在对象实例化后调用</strong><br>共有属性的定义：使用对象的人可以访问到对象内部的某个属性。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//对象构造函数</span></div><div class="line">    <span class="comment">// 私有属性好处： 安全 就类似闭包中的函数一样 减少污染</span></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name</span>) </span>&#123;</div><div class="line">        <span class="comment">//私有属性，只能在对象构造函数内部使用</span></div><div class="line">        <span class="keyword">var</span> className = <span class="string">"用户对象"</span>;</div><div class="line">        <span class="comment">//公有属性,在对象实例化后调用</span></div><div class="line">        <span class="keyword">this</span>.name = name;</div><div class="line">        <span class="comment">//私有方法</span></div><div class="line">        <span class="keyword">var</span> privateFunction = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            alert(<span class="keyword">this</span>.name);</div><div class="line">        &#125;</div><div class="line">        <span class="comment">//公有方法</span></div><div class="line">        <span class="keyword">this</span>.publicFunction = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            alert(<span class="keyword">this</span>.name); <span class="comment">//公有属性</span></div><div class="line">            alert(className); <span class="comment">//正确 直接通过变量名访问</span></div><div class="line">            alert(<span class="keyword">this</span>.className); <span class="comment">//undefined 错误 不能这样访问</span></div><div class="line">        &#125;</div><div class="line">        <span class="comment">//公有属性</span></div><div class="line">        alert(className);</div><div class="line">        <span class="comment">//正确 直接通过变量名访问</span></div><div class="line">        alert(<span class="keyword">this</span>.className); <span class="comment">//undefined 错误 不能这样访问</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/*什么是公有属性：*/</span></div><div class="line">    <span class="comment">/*使用象的人可以访问到对象内部的某个属性*/</span></div><div class="line">    <span class="keyword">var</span> penson = <span class="keyword">new</span> Person(<span class="string">'xiaowang'</span>)</div><div class="line"></div><div class="line">    <span class="built_in">console</span>.log(penson.className);</div><div class="line">    <span class="built_in">console</span>.log(penson.name)</div><div class="line">    <span class="built_in">console</span>.log(person.publicFunction())</div><div class="line">    <span class="built_in">console</span>.log(person.privateFunction())</div><div class="line"></div><div class="line">    <span class="comment">/*最小原则：*/</span></div><div class="line">    $(<span class="string">'#tab'</span>).tab()</div></pre></td></tr></table></figure></p>
<h5 id="init函数的引入"><a href="#init函数的引入" class="headerlink" title="init函数的引入"></a>init函数的引入</h5><p>初始化函数的引入：我们将开发某个功能的初始化的工作都放在一个函数里面，用户只需要知道这是一个工具就可以了。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">init:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.bindDOM();</div><div class="line">    <span class="keyword">this</span>.bindEvents();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h5 id="私有成员的引入"><a href="#私有成员的引入" class="headerlink" title="私有成员的引入"></a>私有成员的引入</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*无法使用私有成员*/</span></div><div class="line"><span class="comment">//  iphone.bindDOM()</span></div><div class="line"><span class="comment">//  iphone.bindEvents()</span></div><div class="line"><span class="comment">/*只能使用共有成员*/</span></div><div class="line">    iphone.init()</div></pre></td></tr></table></figure>
<h5 id="config"><a href="#config" class="headerlink" title="config"></a>config</h5><p>定义一个变量：这个变量可以被对象中所有的属性访问到。目的是避免重复，减少内存，便于统一管理。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">this</span>.config = &#123;</div><div class="line">    btnConfirm: <span class="built_in">document</span>.getElementById(<span class="string">'btn'</span>),</div><div class="line">    btnBuy: <span class="built_in">document</span>.getElementById(<span class="string">'btn'</span>),</div><div class="line">    btnAddCart: <span class="built_in">document</span>.getElementById(<span class="string">'btn'</span>),</div><div class="line">    domProductName :  <span class="built_in">document</span>.getElementById(<span class="string">'pname'</span>),</div><div class="line">    domProductPrice :  <span class="built_in">document</span>.getElementById(<span class="string">'pprice'</span>),</div><div class="line">    sum :  <span class="number">1000</span>,</div><div class="line">    des :  <span class="built_in">document</span>.getElementById(<span class="string">'pdes'</span>),</div><div class="line">    youhuijia :  <span class="built_in">document</span>.getElementById(<span class="string">'pyouhui'</span>),</div><div class="line">    zhekou :  <span class="built_in">document</span>.getElementById(<span class="string">'pzhekou'</span>),</div><div class="line">    sales :  <span class="built_in">document</span>.getElementById(<span class="string">'psales'</span>),</div><div class="line">    date :  <span class="built_in">document</span>.getElementById(<span class="string">'date'</span>)</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<h5 id="命名规范化"><a href="#命名规范化" class="headerlink" title="命名规范化"></a>命名规范化</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"itemInfo"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"name"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">'pname'</span>&gt;</span>乐视TV（ Letv） S50 Air 全配版 50英寸2D智能LED液晶 超级电视<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"pdes"</span>&gt;</span>各地区货源已陆续到库，我们将在十月十号左右发货，对于此次延迟发货给您带来的不便表示致歉，望您谅解。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> &gt;</span>已售：<span class="tag">&lt;<span class="name">strong</span> <span class="attr">id</span>=<span class="string">"psales"</span>&gt;</span>6000<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>原价：<span class="tag">&lt;<span class="name">strong</span> <span class="attr">id</span>=<span class="string">'pprice'</span>&gt;</span>6000<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>元<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>优惠价：<span class="tag">&lt;<span class="name">strong</span> <span class="attr">id</span>=<span class="string">'pyouhui'</span>&gt;</span>5000<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>元<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>折扣：<span class="tag">&lt;<span class="name">strong</span> <span class="attr">id</span>=<span class="string">'pzhekou'</span>&gt;</span>6.0<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>折<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>生产日期：<span class="tag">&lt;<span class="name">strong</span> <span class="attr">id</span>=<span class="string">'date'</span>&gt;</span>2015-09-09<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">'btn'</span>&gt;</span>加入购物车<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">dateFormat</span>(<span class="params">date,format</span>)</span>&#123;</span></div><div class="line"><span class="javascript">        <span class="keyword">var</span> o = &#123;</span></div><div class="line"><span class="javascript">            <span class="string">"M+"</span> : date.getMonth()+<span class="number">1</span>, <span class="comment">//month</span></span></div><div class="line"><span class="javascript">            <span class="string">"d+"</span> : date.getDate(),    <span class="comment">//day</span></span></div><div class="line"><span class="javascript">            <span class="string">"h+"</span> : date.getHours(),   <span class="comment">//hour</span></span></div><div class="line"><span class="javascript">            <span class="string">"m+"</span> : date.getMinutes(), <span class="comment">//minute</span></span></div><div class="line"><span class="javascript">            <span class="string">"s+"</span> : date.getSeconds(), <span class="comment">//second</span></span></div><div class="line"><span class="javascript">            <span class="string">"q+"</span> : <span class="built_in">Math</span>.floor((date.getMonth()+<span class="number">3</span>)/<span class="number">3</span>),  <span class="comment">//quarter</span></span></div><div class="line"><span class="javascript">            <span class="string">"S"</span> : date.getMilliseconds() <span class="comment">//millisecond</span></span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="javascript">        <span class="keyword">if</span>(<span class="regexp">/(y+)/</span>.test(format)) format=format.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>,</span></div><div class="line"><span class="javascript">                (date.getFullYear()+<span class="string">""</span>).substr(<span class="number">4</span>- <span class="built_in">RegExp</span>.$<span class="number">1.</span>length));</span></div><div class="line"><span class="javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> k <span class="keyword">in</span> o)<span class="keyword">if</span>(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"("</span>+ k +<span class="string">")"</span>).test(format))</span></div><div class="line"><span class="javascript">            format = format.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>,</span></div><div class="line"><span class="javascript">                    <span class="built_in">RegExp</span>.$<span class="number">1.</span>length==<span class="number">1</span>? o[k] :</span></div><div class="line"><span class="javascript">                            (<span class="string">"00"</span>+ o[k]).substr((<span class="string">""</span>+ o[k]).length));</span></div><div class="line"><span class="javascript">        <span class="keyword">return</span> format;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="comment">//产品对象</span></span></div><div class="line"><span class="javascript">    <span class="comment">/*对象内如何使用对象的属性和方法：this，对象外如何使用：先实例化，后用点语法*/</span></span></div><div class="line"><span class="javascript">    <span class="comment">/*类 -- 抽象对象*/</span></span></div><div class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">Product</span>(<span class="params">name,price</span>) </span>&#123;</span></div><div class="line"><span class="javascript">        <span class="comment">/*属性 行为 可以为空或者给默认值*/</span></span></div><div class="line"><span class="javascript">        <span class="keyword">this</span>.name=name</span></div><div class="line"><span class="javascript">        <span class="keyword">this</span>.price=<span class="number">1000</span>;</span></div><div class="line"><span class="javascript">        <span class="keyword">this</span>.description = <span class="string">''</span>;</span></div><div class="line"><span class="javascript">        <span class="keyword">this</span>.zhekou = <span class="string">''</span></span></div><div class="line"><span class="javascript">        <span class="keyword">this</span>.sales = <span class="string">''</span></span></div><div class="line"><span class="javascript">        <span class="keyword">this</span>.produceDate</span></div><div class="line"><span class="javascript">        <span class="comment">/*我们的需求：自动计算打折后的价格*/</span></span></div><div class="line"><span class="javascript">        <span class="built_in">Object</span>.defineProperty(<span class="keyword">this</span>, <span class="string">"price"</span>, &#123;</span></div><div class="line"><span class="undefined">            value:5000000,</span></div><div class="line"><span class="javascript">            writable: <span class="literal">false</span>,</span></div><div class="line"><span class="undefined">        &#125;);</span></div><div class="line"><span class="javascript">        <span class="built_in">Object</span>.defineProperty(<span class="keyword">this</span>, <span class="string">"produceDate"</span>, &#123;</span></div><div class="line"><span class="javascript">            get: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></div><div class="line"><span class="javascript">                <span class="keyword">return</span> dateFormat(produceDate,<span class="string">'yyyy年MM月dd日'</span>);</span></div><div class="line"><span class="undefined">            &#125;,</span></div><div class="line"><span class="javascript">            set: <span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123;</span></div><div class="line"><span class="undefined">                produceDate = value;</span></div><div class="line"><span class="undefined">            &#125;</span></div><div class="line"><span class="undefined">        &#125;);</span></div><div class="line"><span class="javascript">        <span class="keyword">var</span> that = <span class="keyword">this</span>;</span></div><div class="line"><span class="javascript">        <span class="keyword">this</span>.config = &#123;</span></div><div class="line"><span class="javascript">            btn: <span class="built_in">document</span>.getElementById(<span class="string">'btn'</span>),</span></div><div class="line"><span class="javascript">            name :  <span class="built_in">document</span>.getElementById(<span class="string">'pname'</span>),</span></div><div class="line"><span class="javascript">            price :  <span class="built_in">document</span>.getElementById(<span class="string">'pprice'</span>),</span></div><div class="line"><span class="javascript">            sum :  <span class="built_in">document</span>.getElementById(<span class="string">'sum'</span>),</span></div><div class="line"><span class="javascript">            des :  <span class="built_in">document</span>.getElementById(<span class="string">'pdes'</span>),</span></div><div class="line"><span class="javascript">            youhuijia :  <span class="built_in">document</span>.getElementById(<span class="string">'pyouhui'</span>),</span></div><div class="line"><span class="javascript">            zhekou :  <span class="built_in">document</span>.getElementById(<span class="string">'pzhekou'</span>),</span></div><div class="line"><span class="javascript">            sales :  <span class="built_in">document</span>.getElementById(<span class="string">'psales'</span>),</span></div><div class="line"><span class="javascript">            date :  <span class="built_in">document</span>.getElementById(<span class="string">'date'</span>)</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">bindDOM</span>(<span class="params"></span>)</span>&#123;</span></div><div class="line"><span class="javascript">            <span class="comment">/*绑定元素*/</span></span></div><div class="line"><span class="javascript">            <span class="comment">/*通过点语法访问对象中的属性或者方法*/</span></span></div><div class="line"><span class="undefined">            that.config.name.innerHTML=that.name</span></div><div class="line"><span class="undefined">            that.config.price.innerHTML=that.price</span></div><div class="line"><span class="undefined">            that.config.des.innerHTML=that.description</span></div><div class="line"><span class="undefined">            that.config.youhuijia.innerHTML=that.youhuijia</span></div><div class="line"><span class="undefined">            that.config.zhekou.innerHTML=that.zhekou</span></div><div class="line"><span class="undefined">            that.config.sales.innerHTML=that.sales</span></div><div class="line"><span class="undefined">            that.config.date.innerHTML=that.produceDate</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">bindEvents</span>(<span class="params"></span>)</span>&#123;</span></div><div class="line"><span class="javascript">            <span class="comment">/*绑定事件*/</span></span></div><div class="line"><span class="javascript">            that.config.btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></div><div class="line"><span class="undefined">                that.addToCart()</span></div><div class="line"><span class="undefined">            &#125;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="javascript">        <span class="keyword">this</span>.init = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></div><div class="line"><span class="undefined">            bindDOM()</span></div><div class="line"><span class="undefined">            bindEvents()</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="comment">//定义对象的两种方式</span></span></div><div class="line"><span class="undefined">    Product.prototype=&#123;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="javascript">        getPrice:<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></div><div class="line"><span class="javascript">            <span class="keyword">return</span> <span class="keyword">this</span>.price</span></div><div class="line"><span class="undefined">        &#125;,</span></div><div class="line"><span class="javascript">        addToCart:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></div><div class="line"><span class="javascript">            alert(<span class="string">'将物品添加到购物车'</span>)</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="javascript">    Product.prototype.buy=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="javascript">    Product.prototype.addToCart=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></div><div class="line"><span class="undefined">    </span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="javascript">    <span class="comment">/*搭积木开发 -- 代码可读性极高*/</span></span></div><div class="line"><span class="javascript">    <span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></div><div class="line"><span class="javascript">        <span class="comment">/*实例化 -- 实例 -- 具体*/</span></span></div><div class="line"><span class="javascript">        <span class="comment">//如何使用</span></span></div><div class="line"><span class="javascript">        <span class="comment">//对象的使用必须先实例化，对象定义好之后，都是抽象的，必须实例化成具体</span></span></div><div class="line"><span class="javascript">        <span class="keyword">var</span> iphone = <span class="keyword">new</span> Product()</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="javascript">        <span class="comment">/*给对象的赋值赋值，也可以新增属性*/</span></span></div><div class="line"><span class="javascript">        iphone.name=<span class="string">'iphone7'</span></span></div><div class="line"><span class="undefined">        iphone.price=6000</span></div><div class="line"><span class="javascript">        iphone.description=<span class="string">'手机中的战斗机'</span></span></div><div class="line"><span class="undefined">        iphone.youhuijia=3000</span></div><div class="line"><span class="undefined">        iphone.zhekou=3.0</span></div><div class="line"><span class="undefined">        iphone.sales=40000</span></div><div class="line"><span class="javascript">        iphone.produceDate=<span class="keyword">new</span> <span class="built_in">Date</span>()</span></div><div class="line"><span class="javascript">        <span class="comment">/*无法使用私有成员*/</span></span></div><div class="line"><span class="javascript"><span class="comment">//        iphone.bindDOM()</span></span></div><div class="line"><span class="javascript"><span class="comment">//        iphone.bindEvents()</span></span></div><div class="line"><span class="javascript">        <span class="comment">/*只能使用共有成员*/</span></span></div><div class="line"><span class="undefined">        iphone.init()</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="对象实例化的本质"><a href="#对象实例化的本质" class="headerlink" title="对象实例化的本质"></a>对象实例化的本质</h4><h5 id="数据类型判断"><a href="#数据类型判断" class="headerlink" title="数据类型判断"></a>数据类型判断</h5><ul>
<li>数据类型判断typeof，但是使用typeof运算符时采用引用类型存储值会出现一个问题：无论引用的是什么类型的对象，它都返回”object”。  </li>
<li>数据类型判断：toString.call。通用但是很繁琐的方法:peototype。</li>
<li>数据类型判断：instanceof。判断已知对象类型的方法。注意Instanceof后面一定要是对象类型，并且大小写不能写错，该方法适合一些条件选择或分支。</li>
<li>数据类型判断: 根据对象的constructor判断。</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//  根据对象的constructor判断： constructor</span></div><div class="line">    <span class="keyword">var</span> arr=[];</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'数据类型判断 - constructor'</span>)</div><div class="line">    <span class="built_in">console</span>.log(arr.constructor === <span class="built_in">Array</span>)   <span class="comment">//----------&gt; true</span></div><div class="line">    <span class="built_in">console</span>.log(date.constructor === <span class="built_in">Date</span>)   <span class="comment">//-----------&gt; true</span></div><div class="line">    <span class="built_in">console</span>.log(fn.constructor === <span class="built_in">Function</span>) <span class="comment">//-------&gt; true</span></div></pre></td></tr></table></figure>
<p><strong>JavaScript中isFinite()函数，isFinite()函数用于检查其参数是否是无穷大。</strong>  </p>
<ul>
<li>如果number是有限数字(或可转换为有效数字)，那么返回值为true。</li>
<li>否则，如果number是NaN(非数字),或者是正、负无穷大的数，则返回false。<h3 id="原型对象（improtant）"><a href="#原型对象（improtant）" class="headerlink" title="原型对象（improtant）"></a>原型对象（improtant）</h3><h4 id="属性屏蔽理论"><a href="#属性屏蔽理论" class="headerlink" title="属性屏蔽理论"></a>属性屏蔽理论</h4></li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">    <span class="comment">//该函数 用于创建对象 其除了是一个函数之外，我们又称之为构造对象的函数 - 简称构造函数</span></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Product</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="comment">//属性</span></div><div class="line">        <span class="keyword">this</span>.name=<span class="string">'神仙'</span>;</div><div class="line">        <span class="comment">// 属性</span></div><div class="line">        <span class="keyword">this</span>.description = <span class="string">''</span></div><div class="line">        <span class="keyword">this</span>.buy = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            alert(<span class="string">'构造函数对象'</span>)</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">        Product.prototype=&#123;</div><div class="line">            name:<span class="string">'王书奎'</span>,</div><div class="line">            buy:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">                alert(<span class="string">'原型对象'</span>)</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">var</span> product = <span class="keyword">new</span> Product()</div><div class="line">        <span class="comment">/*原型属性屏蔽理论 -- 乌云蔽日*/</span></div><div class="line">        <span class="built_in">console</span>.log(product.buy())</div><div class="line"></div><div class="line">        <span class="comment">/*清除乌云*/</span></div><div class="line">        <span class="keyword">delete</span> product.buy</div><div class="line">        <span class="built_in">console</span>.log(product.buy())</div><div class="line"></div><div class="line"></div><div class="line">        <span class="comment">/*被屏蔽之后如何获取 */</span></div><div class="line"><span class="comment">//        console.log(Product.prototype.buy())</span></div><div class="line"></div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure>
<p><strong>hsaOwnProperty:看是不是对象自身下面的属性</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//hasOwnProperty : 看是不是对象自身下面的属性</span></div><div class="line">        <span class="function"><span class="keyword">function</span> <span class="title">Product</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            <span class="keyword">this</span>.name=<span class="string">'iphone'</span></div><div class="line">        &#125;</div><div class="line"></div><div class="line">        Product.prototype=&#123;</div><div class="line">            age:<span class="number">100</span></div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">var</span> iphone = <span class="keyword">new</span> Product()</div><div class="line">        <span class="built_in">console</span>.log(iphone.hasOwnProperty(<span class="string">'name'</span>))</div><div class="line">        <span class="built_in">console</span>.log(iphone.hasOwnProperty(<span class="string">'age'</span>))</div></pre></td></tr></table></figure></p>
<p><strong>hasOwnProperty对象字面量</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//hasOwnProperty : 看是不是对象自身下面的属性</span></div><div class="line">        <span class="keyword">var</span> iphone = &#123;</div><div class="line">            name:<span class="string">'iphone'</span>,</div><div class="line">            age:<span class="number">100</span>,</div><div class="line">            address:&#123;<span class="attr">home</span>:<span class="string">'江苏'</span>,<span class="attr">current</span>:<span class="string">'北京昌平'</span>&#125;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">console</span>.log(iphone.hasOwnProperty(<span class="string">'name'</span>))<span class="comment">//true</span></div><div class="line">        <span class="built_in">console</span>.log(iphone.hasOwnProperty(<span class="string">'age'</span>))<span class="comment">//true</span></div><div class="line">        <span class="built_in">console</span>.log(iphone.hasOwnProperty(<span class="string">'address'</span>))<span class="comment">//true</span></div><div class="line">        <span class="built_in">console</span>.log(iphone.hasOwnProperty(<span class="string">'home'</span>))<span class="comment">//false</span></div></pre></td></tr></table></figure></p>
<h5 id="constructor-查看对象的构造函数"><a href="#constructor-查看对象的构造函数" class="headerlink" title="constructor 查看对象的构造函数"></a>constructor 查看对象的构造函数</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Product</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    </div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> iphone=<span class="keyword">new</span> Product();</div><div class="line">alert(iphone.constructor);<span class="comment">//Product</span></div><div class="line"><span class="keyword">var</span> arr=[];</div><div class="line">alert(arr.constructor==<span class="built_in">Array</span>);<span class="comment">//true</span></div></pre></td></tr></table></figure>
<h5 id="for-in"><a href="#for-in" class="headerlink" title="for in"></a>for in</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Product</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">this</span>.name=<span class="string">'iphone8'</span></div><div class="line">        <span class="keyword">this</span>.description=<span class="string">'手机中的战斗机'</span></div><div class="line">        <span class="keyword">this</span>.price=<span class="number">7777</span></div><div class="line">        <span class="keyword">this</span>.add = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    Product.prototype=&#123;</div><div class="line">        date:<span class="string">'2017-8-8'</span>,</div><div class="line">        buy:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">var</span> iphone = <span class="keyword">new</span> Product()</div><div class="line"></div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> iphone) &#123;</div><div class="line">        <span class="built_in">console</span>.log(i);</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>for in第二种<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Product</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">this</span>.name=<span class="string">'iphone8'</span></div><div class="line">        <span class="keyword">this</span>.description=<span class="string">'手机中的战斗机'</span></div><div class="line">        <span class="keyword">this</span>.price=<span class="number">7777</span></div><div class="line">        <span class="keyword">this</span>.add = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    Product.prototype=&#123;</div><div class="line">        date:<span class="string">'2017-8-8'</span>,</div><div class="line">        buy:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">var</span> iphone = <span class="keyword">new</span> Product()</div><div class="line"><span class="comment">//    通过hasOwnProperty过滤掉原型中的属性</span></div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> iphone) &#123;</div><div class="line">        <span class="keyword">if</span> (iphone.hasOwnProperty(i)) &#123;</div><div class="line">            <span class="built_in">console</span>.log(i);</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>for in json<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> iphone = &#123;</div><div class="line">        name:<span class="string">'iphone'</span>,</div><div class="line">        age:<span class="number">100</span>,</div><div class="line">        address:&#123;<span class="attr">home</span>:<span class="string">'江苏'</span>,<span class="attr">current</span>:<span class="string">'北京昌平&#125;</span></div><div class="line"><span class="string">    &#125;</span></div><div class="line"><span class="string">    for(var i in iphone) &#123;</span></div><div class="line"><span class="string">        if (iphone.hasOwnProperty(i)) &#123;</span></div><div class="line"><span class="string">            console.log(i);</span></div><div class="line"><span class="string">        &#125;</span></div><div class="line"><span class="string">    &#125;</span></div></pre></td></tr></table></figure></p>
<h3 id="面向对象复习和各种术语总结"><a href="#面向对象复习和各种术语总结" class="headerlink" title="面向对象复习和各种术语总结"></a>面向对象复习和各种术语总结</h3><h4 id="构造函数和原型"><a href="#构造函数和原型" class="headerlink" title="构造函数和原型"></a>构造函数和原型</h4><p>原型对象里面的属性，简称原型属性。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">Product.prototype.age = <span class="number">12</span>;</div><div class="line"><span class="comment">//    原型方法</span></div><div class="line">Product.prototype.add=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;;</div><div class="line"><span class="comment">//实例化  抽象 具体 实例  ---  new Product ---类名</span></div><div class="line"><span class="comment">//使用的使用 需要先实例化：</span></div><div class="line"><span class="keyword">var</span>  product = <span class="keyword">new</span> Product(); <span class="comment">//实例对象 实例</span></div><div class="line"><span class="comment">//如何访问对象里面的方法属性 -- 点语法</span></div><div class="line"><span class="built_in">console</span>.log(product.name)</div><div class="line">product.add();</div></pre></td></tr></table></figure></p>
<p>构造函数的语法规范：该函数用于创建对象，其除了是一个对象外，我们又称之为构造对象的函数，简称构造函数。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Product</span>(<span class="params">name,description</span>)</span>&#123;</div><div class="line">        <span class="comment">//属性</span></div><div class="line">        <span class="keyword">this</span>.name=name;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>访问语法规范，先实例化后再点语法访问<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> phone = <span class="keyword">new</span> Product(<span class="string">'手机'</span>,<span class="string">'手机中的战斗机'</span>);</div><div class="line">    <span class="built_in">console</span>.log(phone.name);</div><div class="line">    <span class="built_in">console</span>.log(phone.buy());</div></pre></td></tr></table></figure></p>
<p><strong>原型对象名字：构造函数名称.prototype</strong><br>原型对象的属性语法规范：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Peoduct.prototype.date=<span class="string">'2017/10/2'</span>;</div><div class="line">Product.prototype.getDetail = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">       <span class="keyword">return</span> &#123;<span class="attr">name</span>:<span class="string">'IPhone7s'</span>,<span class="attr">price</span>:<span class="number">100</span>,<span class="attr">description</span>:<span class="string">'手机中的战斗机'</span>&#125;;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>访问语法规范：静态模式访问。实例模式访问。  </p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//静态模式访问</span></div><div class="line">    <span class="built_in">console</span>.log(Product.prototype.date);</div><div class="line"></div><div class="line"><span class="comment">//实例模式访问</span></div><div class="line">    phone = <span class="keyword">new</span>; Product(<span class="string">'手机'</span>,<span class="string">'手机中的战斗机'</span>);</div><div class="line">    <span class="built_in">console</span>.log(phone.date);</div></pre></td></tr></table></figure>
<p><strong>构造函数对象属性不共享，原型对象属性共享</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">原型对象属性共享</div><div class="line">    <span class="keyword">var</span> iphone =<span class="keyword">new</span> Product(<span class="string">'iphone'</span>)</div><div class="line">    <span class="keyword">var</span> android =<span class="keyword">new</span> Product(<span class="string">'android'</span>)</div><div class="line"></div><div class="line">    <span class="comment">//构造函数对象属性不共享</span></div><div class="line">    <span class="built_in">console</span>.log(iphone.name)    <span class="comment">//iphone</span></div><div class="line">    <span class="built_in">console</span>.log(android.name)   <span class="comment">//android</span></div><div class="line"></div><div class="line">    <span class="comment">//原型对象属性被所有实例共享</span></div><div class="line">    <span class="built_in">console</span>.log(iphone.date)    <span class="comment">//2015/10/0</span></div><div class="line">    <span class="built_in">console</span>.log(android.date)   <span class="comment">//2015/10/0</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;构造函数和属性&quot;&gt;&lt;a href=&quot;#构造函数和属性&quot; class=&quot;headerlink&quot; title=&quot;构造函数和属性&quot;&gt;&lt;/a&gt;构造函数和属性&lt;/h3&gt;&lt;h4 id=&quot;01-基础&quot;&gt;&lt;a href=&quot;#01-基础&quot; class=&quot;headerlink&quot; ti
    
    </summary>
    
      <category term="面向对象" scheme="http://yoursite.com/categories/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
    
      <category term="面向对象" scheme="http://yoursite.com/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>CSS3简单介绍</title>
    <link href="http://yoursite.com/2017/03/08/CSS3%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/"/>
    <id>http://yoursite.com/2017/03/08/CSS3简单介绍/</id>
    <published>2017-03-08T15:11:35.000Z</published>
    <updated>2017-09-08T03:02:27.900Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CSS3"><a href="#CSS3" class="headerlink" title="CSS3"></a>CSS3</h1><p>css3就是css版本的一个升级，里面增加了一些新的样式，增强了一些样式。<br>css3现状：  </p>
<ol>
<li>浏览器支持程度差 ，需要添加私有前缀。</li>
<li>移动端支持优于PC端。</li>
<li>不断改进中</li>
<li>应用相对广泛。<br>如何对待   </li>
<li>坚持渐进增强原则</li>
<li>考虑用户群体</li>
<li>遵照产品的方案</li>
<li>听boss的<h3 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h3></li>
</ol>
<table>
<thead>
<tr>
<th>选择器</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>E[att] css2</td>
<td>选择具有att属性的E元素</td>
</tr>
<tr>
<td>E[att=”val”] css2</td>
<td>选择具有att属性且属性值等于val的E元素</td>
</tr>
<tr>
<td>E[att~=”val”] css2</td>
<td>选择具有att属性且属性值为用空格分隔的字母列表，其中一个等于val的E元素</td>
</tr>
<tr>
<td>E[att^=”val”] css3</td>
<td>选择具有att属性且属性值为以val开头的字符串的E元素</td>
</tr>
<tr>
<td>E[att$=”val”] css3</td>
<td>选择具有att属性且属性值为以val结尾的字符串的E元素</td>
</tr>
<tr>
<td>E[att*=”val”] css3</td>
<td>选择具有att属性且属性值为包含val的字符串的E元素</td>
</tr>
<tr>
<td>E[att竖线=”val”] css2</td>
<td>选择具有att属性且属性值为val开头并用连接符”-“分隔的字符串的E元素，如果属性值仅为val，也将被选择</td>
</tr>
</tbody>
</table>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">    /*元素[属性名字]---&gt;找有href属性a标签*/</span></div><div class="line"><span class="undefined">    /*a[href=""] 这个双引号可以省略*/</span></div><div class="line"><span class="undefined">    a[href]&#123;  background-color: red;  &#125;</span></div><div class="line"><span class="undefined">    /*获取的是带有href属性的a标签,同时这个属性值:海阔天空.mp3*/</span></div><div class="line"><span class="undefined">    a[href="海阔天空.mp3"]&#123;</span></div><div class="line"><span class="undefined">      background-color: green;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">    /*获取的是属性值以:小 开头的元素*/</span></div><div class="line"><span class="undefined">    a[href^="小"]&#123;</span></div><div class="line"><span class="undefined">      background-color: yellow;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">    /*获取的是属性以: .avi 结尾的*/</span></div><div class="line"><span class="undefined">    a[href$=".avi"]&#123;</span></div><div class="line"><span class="undefined">      background-color: blue;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">    /*获取的是href属性值只要包含:美 的元素*/</span></div><div class="line"><span class="undefined">    a[href*=美]&#123;</span></div><div class="line"><span class="undefined">      background-color: black;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
<p>属性选择器：针对属性的<br>E[att=值] E就是元素，att—》属性的名字<br>值：可以用双引号<br>==伪类选择器：==<br>:first-child<br>:last-child<br>结构（位置）选择器<br>:nth-child(n)—&gt;第一个这个元素（不是索引，第几个就是第几个）<br>.nth-last-child(n)—从后面向前数<br>注意：n遵循线性变化，其取值0、1、2、3、4…，n可以是多种形式：nth-child(2n+1)、nth-child(2n+1)等。<br>：指的是E元素的父元素，并对应位置的子元素必须是E。</p>
<h3 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">    /*!*第一个:从li的父级元素中第一个li*!*/</span></div><div class="line"><span class="undefined">    li:first-child&#123;color: red&#125;</span></div><div class="line"><span class="undefined">    /*!*最后一个*!*/</span></div><div class="line"><span class="undefined">    li:last-child&#123;color: green&#125;</span></div><div class="line"><span class="undefined">    /*!*第三个:n:第几个*!*/</span></div><div class="line"><span class="undefined">    li:nth-child(3)&#123;color: red&#125;</span></div><div class="line"><span class="undefined">    /*!*偶数:*!*/</span></div><div class="line"><span class="undefined">    li:nth-child(even)&#123;color: orange&#125;</span></div><div class="line"><span class="undefined">    /*!*奇数*!*/</span></div><div class="line"><span class="undefined">    li:nth-child(odd)&#123;color: indigo&#125;</span></div><div class="line"><span class="undefined">    /*!*最后一列*!*/</span></div><div class="line"><span class="undefined">    li:nth-child(7n)&#123;color: green&#125;</span></div><div class="line"><span class="undefined">    /*!*后面第二列*!*/</span></div><div class="line"><span class="undefined">    li:nth-child(7n-1)&#123;color: green&#125;</span></div><div class="line"><span class="undefined">    /*!*前三个*!*/</span></div><div class="line"><span class="undefined">    !*li:nth-child(-n+3)&#123;color: green&#125;*!</span></div><div class="line"><span class="undefined">    /*!*n从0开始到页面承受的范围内*!*/</span></div><div class="line"><span class="undefined">    /*!*后三个*!*/</span></div><div class="line"><span class="undefined">    li:nth-last-child(-n+3)&#123;color: darkcyan;&#125;</span></div><div class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
<p>伪类选择器<br>先找li的父级元素ul，再从ul中找到第一个子元素，必须是li  </p>
<ol>
<li>第一个li  li:first-child{color:red;}</li>
<li>最后一个  li:las-child{color:red;}</li>
<li>:nth-child(n)  n的范围0到无穷，按照这个数字个数查找  li:nthc-child(n){color:red;}</li>
<li>偶数   li:nth-child(even){color:blue;}</li>
<li>奇数   li:nth-child(odd){color:green;}</li>
<li>最后一列  li:nth-child(7n){color:red;} 7为总列数</li>
<li>最后的第二列 li:nth-child(7n-1){color:red;}</li>
<li>前三个   li:nth-child(-n+3){color:red;}</li>
<li>后三个   li:nth-last-child(-n+3){color:red;}<br>伪结构（位置）选择器：<br>:first-child—第一个<br>:last-child—最后一个<br>:nth-child(n)—n就是一个数字，从0开始到无穷大<br>:nth-lastchild(n)—从后面向前数<br>注意：n遵循线性变化，其取值0、1、2、3、4…，n可以是多种形式：nth-child(2n+1)、nth-child(2n+1)等。<br>：前面指的是E元素的父元素，并对应位置的子元素必须是E。 <h4 id="空选择器E-empty"><a href="#空选择器E-empty" class="headerlink" title="空选择器E:empty{]"></a>空选择器E:empty{]</h4>空的意思就是没有的话执行什么，有的话干什么。例如，span中没有内容就隐藏，如果有就显示<br>选中没有任何子节点的E元素（使用不是很广泛）<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">    span:empty&#123;</span></div><div class="line"><span class="undefined">     display: none;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ol>
<p>span:empty{display:none;}  </p>
<h4 id="目标选择器-E-target"><a href="#目标选择器-E-target" class="headerlink" title="目标选择器 E:target"></a>目标选择器 E:target</h4><p>结合锚点进行使用，处于当前锚点的元素会被选中<br>例如：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">    h3:target&#123;</span></div><div class="line"><span class="undefined">      background-color: yellow;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="排除选择器-E-not-selector-除了selector（任意选择器）外的元素会被选中"><a href="#排除选择器-E-not-selector-除了selector（任意选择器）外的元素会被选中" class="headerlink" title="排除选择器   E:not(selector)除了selector（任意选择器）外的元素会被选中"></a>排除选择器   E:not(selector)除了selector（任意选择器）外的元素会被选中</h4><p>例如<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">    /*排除某个应用two类样式的元素*/</span></div><div class="line"><span class="undefined">    #dv3 li:not(.two)&#123;background-color: blue;&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="伪对象（元素）选择器"><a href="#伪对象（元素）选择器" class="headerlink" title="伪对象（元素）选择器"></a>伪对象（元素）选择器</h4><p>E::first-letter—&gt;第一个字符<br>E::first-line—&gt;第一行<br>E::selection—&gt;选中的<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">    /*改变的是每个li中第一个字符的颜色*/</span></div><div class="line"><span class="undefined">    #dv1 li:first-letter&#123;</span></div><div class="line"><span class="undefined">      color: yellow;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">    /*c3的写法*/</span></div><div class="line"><span class="undefined">    #dv1 li::first-letter&#123;</span></div><div class="line"><span class="undefined">      color: yellow;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">    /*字体下沉*/</span></div><div class="line"><span class="undefined">    #dv2 p:first-child:first-letter&#123;</span></div><div class="line"><span class="undefined">      font-size: 40px;</span></div><div class="line"><span class="undefined">      float: left;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">    /*第一行的字体颜色改变*/</span></div><div class="line"><span class="undefined">    #dv3 p:first-line&#123;</span></div><div class="line"><span class="undefined">      color: green;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">    /*伪类选择器-----以前的写法*/</span></div><div class="line"><span class="undefined">    li:before,li:after&#123;</span></div><div class="line"><span class="undefined">      content: "";</span></div><div class="line"><span class="undefined">      display: block;</span></div><div class="line"><span class="undefined">      width: 100px;</span></div><div class="line"><span class="undefined">      height: 100px;</span></div><div class="line"><span class="undefined">      background-color: green;</span></div><div class="line"><span class="undefined">      margin-bottom: 10px;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">    /*伪元素选择器:CSS3中的写法*/</span></div><div class="line"><span class="undefined">    li::before,li::after&#123;</span></div><div class="line"><span class="undefined">      content: "";</span></div><div class="line"><span class="undefined">      display: block;</span></div><div class="line"><span class="undefined">      width: 100px;</span></div><div class="line"><span class="undefined">      height: 100px;</span></div><div class="line"><span class="undefined">      background-color: green;</span></div><div class="line"><span class="undefined">      margin-bottom: 10px;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">    /*以上这种写法还是比较推荐单冒号的写法的*/</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
<p>before和after在E元素内部的开始位置和结束位置创建一个元素，该元素是行内元素，并且必须要结合content属性使用。<br>上述写法中的content:””;和display：block两行代码必须写，content中可以由内容，而diaplay：block改为定位也可。单冒号和双冒号的区别在于区分伪类和伪元素。  </p>
<h3 id="颜色的增强"><a href="#颜色的增强" class="headerlink" title="颜色的增强"></a>颜色的增强</h3><p>颜色的写法有单词的写法，十六进制的写法，rgb的写法和HSL的写法。</p>
<ul>
<li>RGB取值范围为0~255</li>
<li>hsl(色调，饱和度，亮度)；</li>
<li>H代表色调，取值范围0-360,0/360表示红色，120表示绿色，240表示蓝色。</li>
<li>S代表饱满度，取值范围0-100%;</li>
<li>L代表亮度，取值范围0-100%;</li>
<li>A代表透明度，取值范围为0-1；</li>
<li>hsla(色调，饱和度，亮度，透明度);  <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">    span&#123;</span></div><div class="line"><span class="undefined">        color:hsla&#123;360,50%,50%,0.3&#125;;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>关于css透明度  </p>
<ol>
<li>opacity只能针对整个盒子设置透明度，子盒子及内容会继承父盒子的透明度； </li>
<li>transparent不可调节透明度，始终完全透明。<h3 id="border"><a href="#border" class="headerlink" title="border"></a>border</h3>border:三个值：宽度，颜色，样式；<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">    div&#123;</span></div><div class="line"><span class="undefined">        border-top-width:20px;</span></div><div class="line"><span class="undefined">        border-top-style:dashed;</span></div><div class="line"><span class="undefined">        border-bottom-color:transparent;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="文字阴影"><a href="#文字阴影" class="headerlink" title="文字阴影"></a>文字阴影</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">    li&#123;</span></div><div class="line"><span class="undefined">      font-size: 30px;</span></div><div class="line"><span class="undefined">      font-family: "全新硬笔行书简";</span></div><div class="line"><span class="undefined">      /*水平位置,垂直位置,模糊度,颜色*/</span></div><div class="line"><span class="undefined">      /*text-shadow: 5px 5px 5px green ;*/</span></div><div class="line"><span class="undefined">      /*文字的阴影可以有很多*/</span></div><div class="line"><span class="undefined">      text-shadow: 5px 5px 5px green ,5px 5px 5px yellow,5px 5px 5px red;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
<p>文字阴影（text-shadow）：水平位置，垂直位置，模糊度，颜色。  文字的阴影可以有很多。水平偏移量，正值向右，负值向左；垂直偏移量，正值向下，负值向上；模糊度不能为负值。<br>==文本浮雕效果案例==<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS 文本<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">    body &#123;</span></div><div class="line"><span class="undefined">      background-color: gray;</span></div><div class="line"><span class="undefined">      font: bold 6em "全新硬笔行书简";</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">    div &#123;</span></div><div class="line"><span class="undefined">      margin: 30px;</span></div><div class="line"><span class="undefined">      color: #808080;</span></div><div class="line"><span class="undefined">      text-align: center;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">    .to&#123;</span></div><div class="line"><span class="undefined">      text-shadow: -1px -1px 0 white,1px 1px 0 black;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">    .ao&#123;</span></div><div class="line"><span class="undefined">      text-shadow: -1px -1px 0 black,1px 1px 0 white;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"to"</span>&gt;</span>作为一个人你要有优点<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ao"</span>&gt;</span>作为一个人你要有缺点<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h3><p>css3中可以通过box-sizing来指定盒模型，这样我们计算盒子大小的方式就发生了改变。可以分成两种情况：</p>
<ul>
<li>1.box-sizing:border-box  盒子大小为width</li>
<li>2.box-sizing:content-box  盒子大小为width+padding+border。  </li>
<li>注意上面的width是css属性里设置的width。content值时会自动调整的。<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">    div&#123;</span></div><div class="line"><span class="undefined">      width: 300px;</span></div><div class="line"><span class="undefined">      height: 300px;</span></div><div class="line"><span class="undefined">      border: 5px solid red;</span></div><div class="line"><span class="undefined">      margin: 0 auto;</span></div><div class="line"><span class="undefined">      margin-top: 50px;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">    /*C3中的为元素选择器*/</span></div><div class="line"><span class="undefined">    div:hover:after&#123;</span></div><div class="line"><span class="undefined">      padding-top: 50px;</span></div><div class="line"><span class="undefined">      content: "哎呦喂,常来啊";</span></div><div class="line"><span class="undefined">      display: block;</span></div><div class="line"><span class="undefined">      width: 100%;</span></div><div class="line"><span class="undefined">      height: 100%;</span></div><div class="line"><span class="undefined">      background-color: green;</span></div><div class="line"><span class="undefined">      box-sizing: border-box;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cls"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>box-sizing属性默认设置为content-box。当设置为border-box的时候，盒子整体大小不会改变了就。即使设置了padding也没有问题，只是会把内容区域变小。<br>关于网页常见的图片高亮效果可以给他设置与背景色一致的边框来模拟高亮效果。同时给其设置hover属性来模拟。 </p>
<hr>
<h2 id="边框（重点掌握）"><a href="#边框（重点掌握）" class="headerlink" title="边框（重点掌握）"></a>边框（重点掌握）</h2><h3 id="边框的圆角的设置"><a href="#边框的圆角的设置" class="headerlink" title="边框的圆角的设置"></a>边框的圆角的设置</h3><p>圆角处理时，脑中要形成圆，圆心，横轴，纵轴的概念，正圆是椭圆的一种特殊情况。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">    .cls&#123;</span></div><div class="line"><span class="undefined">    /*四个值分别为左上角，右上角，右下角，左下角*/</span></div><div class="line"><span class="undefined">        border-radius:20px 20px 20px 20px;</span></div><div class="line"><span class="undefined">    /*一个角有两个半径，一个是水平的一个是垂直的。*/</span></div><div class="line"><span class="undefined">        border-radius:20px 20px 20px 20px/40px 40px 40px 40px;</span></div><div class="line"><span class="undefined">        /*前面的四个表示的水平方向，后面的四个表示垂直方向*/</span></div><div class="line"><span class="undefined">        /*有三个值的话第一个值代表左上，第二个值代表右上和左下，第三个值代表右下。*/</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="边框阴影"><a href="#边框阴影" class="headerlink" title="边框阴影"></a>边框阴影</h4><p>首先，阴影是不会影响元素布局的，水平偏移量正值向右，负值向左；垂直偏移量，正值向下，负值向上；模糊度不能为负值，inset可以设置内阴影。<br>注意：设置边框阴影不会改变盒子的大小，即不会影响兄弟元素的布局。可以设置多重边框阴影，实现更好的效果，增强立体感，符合渐进增强，实际开发中可以大胆使用。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">    .cls&#123;</span></div><div class="line"><span class="undefined">      width: 200px;</span></div><div class="line"><span class="undefined">      height: 100px;</span></div><div class="line"><span class="undefined">      background-color: green;</span></div><div class="line"><span class="undefined">      border: 5px solid red;</span></div><div class="line"><span class="undefined">      /*box-shadow: 5px 5px 5px blue,5px 5px 5px yellow;*/</span></div><div class="line"><span class="undefined">      //这里的inset指的是内阴影，在div里面显示的阴影</span></div><div class="line"><span class="undefined">      box-shadow: inset 5px 5px 5px blue;</span></div><div class="line"><span class="undefined">      float: left;</span></div><div class="line"><span class="undefined">      margin-right: 20px;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="边框图片"><a href="#边框图片" class="headerlink" title="边框图片"></a>边框图片</h3><p>设置的图片灰被切割成九宫格，形式，然后进行设置。<br>1.round会自动调整尺寸，完整显示边框图片<br>2.repeat单纯平铺，多余部分，会被裁剪而不能完整显示。  </p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS3边框<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">    body &#123;</span></div><div class="line"><span class="undefined">      margin: 0;</span></div><div class="line"><span class="undefined">      padding: 0;</span></div><div class="line"><span class="undefined">      background-color: #F7F7F7;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">    ul &#123;</span></div><div class="line"><span class="undefined">      width: 960px;</span></div><div class="line"><span class="undefined">      margin: 40px auto;</span></div><div class="line"><span class="undefined">      list-style: none;</span></div><div class="line"><span class="undefined">      background-color: #FFF;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">    li &#123;</span></div><div class="line"><span class="undefined">      padding: 15px;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">    li:nth-child(2)&#123;</span></div><div class="line"><span class="undefined">      width: 300px;</span></div><div class="line"><span class="undefined">      height: 200px;</span></div><div class="line"><span class="undefined">      border-width: 27px;</span></div><div class="line"><span class="undefined">      border-color: red;</span></div><div class="line"><span class="xml">      <span class="comment">&lt;!--稍微低点版本的浏览器可以不用写--&gt;</span></span></div><div class="line"><span class="undefined">      border-style: solid;</span></div><div class="line"><span class="undefined">      /*引入了图片的路径*/</span></div><div class="line"><span class="undefined">      border-image-source: url("images/border.png");</span></div><div class="line"><span class="undefined">      /*切割的大小不需要px*/</span></div><div class="line"><span class="undefined">      border-image-slice: 27;</span></div><div class="line"><span class="undefined">      /*是否平铺*/</span></div><div class="line"><span class="undefined">      /*默认的  repeat:平铺, round:按照比例显示，stretch表示拉伸，round环绕（时钟显示全的）*/</span></div><div class="line"><span class="undefined">      border-image-repeat: stretch;</span></div><div class="line"><span class="xml">      <span class="comment">&lt;!--这个属性只能改变边框的宽，不会影响整个元素的宽度--&gt;</span></span></div><div class="line"><span class="undefined">      border-image-width:2px;</span></div><div class="line"><span class="xml">      <span class="comment">&lt;!--下面的这个会影响元素的大小--&gt;</span></span></div><div class="line"><span class="undefined">      border-width：30px；</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/border_image_2.png"</span> <span class="attr">width</span>=<span class="string">"100"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>==边框的应用的案例==<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div><div class="line">420</div><div class="line">421</div><div class="line">422</div><div class="line">423</div><div class="line">424</div><div class="line">425</div><div class="line">426</div><div class="line">427</div><div class="line">428</div><div class="line">429</div><div class="line">430</div><div class="line">431</div><div class="line">432</div><div class="line">433</div><div class="line">434</div><div class="line">435</div><div class="line">436</div><div class="line">437</div><div class="line">438</div><div class="line">439</div><div class="line">440</div><div class="line">441</div><div class="line">442</div><div class="line">443</div><div class="line">444</div><div class="line">445</div><div class="line">446</div><div class="line">447</div><div class="line">448</div><div class="line">449</div><div class="line">450</div><div class="line">451</div><div class="line">452</div><div class="line">453</div><div class="line">454</div><div class="line">455</div><div class="line">456</div><div class="line">457</div><div class="line">458</div><div class="line">459</div><div class="line">460</div><div class="line">461</div><div class="line">462</div><div class="line">463</div><div class="line">464</div><div class="line">465</div><div class="line">466</div><div class="line">467</div><div class="line">468</div><div class="line">469</div><div class="line">470</div><div class="line">471</div><div class="line">472</div><div class="line">473</div><div class="line">474</div><div class="line">475</div><div class="line">476</div><div class="line">477</div><div class="line">478</div><div class="line">479</div><div class="line">480</div><div class="line">481</div><div class="line">482</div><div class="line">483</div><div class="line">484</div><div class="line">485</div><div class="line">486</div><div class="line">487</div><div class="line">488</div><div class="line">489</div><div class="line">490</div><div class="line">491</div><div class="line">492</div><div class="line">493</div><div class="line">494</div><div class="line">495</div><div class="line">496</div><div class="line">497</div><div class="line">498</div><div class="line">499</div><div class="line">500</div><div class="line">501</div><div class="line">502</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS3 边框<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">		body, ul, li, dl, dt, dd, h1, h2, h3, h4, h5 &#123;</span></div><div class="line"><span class="undefined">			margin: 0;</span></div><div class="line"><span class="undefined">			padding: 0;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		body &#123;</span></div><div class="line"><span class="undefined">			background-color: #F7F7F7;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		.wrapper &#123;</span></div><div class="line"><span class="undefined">			width: 1000px;</span></div><div class="line"><span class="undefined">			margin: 0 auto;</span></div><div class="line"><span class="undefined">			padding: 20px;</span></div><div class="line"><span class="undefined">			box-sizing: border-box;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		header &#123;</span></div><div class="line"><span class="undefined">			padding: 20px 0;</span></div><div class="line"><span class="undefined">			margin-bottom: 20px;</span></div><div class="line"><span class="undefined">			text-align: center;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		header h3 &#123;</span></div><div class="line"><span class="undefined">			line-height: 1;</span></div><div class="line"><span class="undefined">			font-weight: normal;</span></div><div class="line"><span class="undefined">			font-size: 28px;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		.main &#123;</span></div><div class="line"><span class="undefined">			/*overflow: hidden;*/</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		.main:after &#123;</span></div><div class="line"><span class="undefined">			content: '';</span></div><div class="line"><span class="undefined">			clear: both;</span></div><div class="line"><span class="undefined">			display: block;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		.main .item &#123;</span></div><div class="line"><span class="undefined">			width: 210px;</span></div><div class="line"><span class="undefined">			height: 210px;</span></div><div class="line"><span class="undefined">			margin: 0 30px 30px 0;</span></div><div class="line"><span class="undefined">			display: flex;</span></div><div class="line"><span class="undefined">			position: relative;</span></div><div class="line"><span class="undefined">			background-color: #FFF;</span></div><div class="line"><span class="undefined">			float: left;</span></div><div class="line"><span class="undefined">			box-shadow: 2px 2px 5px #CCC;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined">		</span></div><div class="line"><span class="undefined">		.main .item:after &#123;</span></div><div class="line"><span class="undefined">			content: attr(data-brief);</span></div><div class="line"><span class="undefined">			display: block;</span></div><div class="line"><span class="undefined">			width: 100%;</span></div><div class="line"><span class="undefined">			height: 100%;</span></div><div class="line"><span class="undefined">			text-align: center;</span></div><div class="line"><span class="undefined">			line-height: 210px;</span></div><div class="line"><span class="undefined">			position: absolute;</span></div><div class="line"><span class="undefined">			top: 0;</span></div><div class="line"><span class="undefined">			left: 0;</span></div><div class="line"><span class="undefined">			color: #FFF;</span></div><div class="line"><span class="undefined">			font-family: '微软雅黑';</span></div><div class="line"><span class="undefined">			font-size: 18px;</span></div><div class="line"><span class="undefined">			background-color: rgba(170, 170, 170, 0);</span></div><div class="line"><span class="undefined">			z-index: -1;</span></div><div class="line"><span class="undefined">			transition: all 0.3s ease-in;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		.main .item:hover:after &#123;</span></div><div class="line"><span class="undefined">			background-color: rgba(170, 170, 170, 0.6);</span></div><div class="line"><span class="undefined">			z-index: 100;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		.main .item:nth-child(4n) &#123;</span></div><div class="line"><span class="undefined">			margin-right: 0;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		/*.main .item:nth-last-child(-n+5) &#123;</span></div><div class="line"><span class="undefined">			margin-bottom: 0;</span></div><div class="line"><span class="undefined">		&#125;*/</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		/* 以上是骨架样式 */</span></div><div class="line"><span class="undefined">		/* 1、2、3、4 顺时针 */</span></div><div class="line"><span class="undefined">		.border-radius &#123;</span></div><div class="line"><span class="undefined">			width: 180px;</span></div><div class="line"><span class="undefined">			height: 180px;</span></div><div class="line"><span class="undefined">			margin: auto;</span></div><div class="line"><span class="undefined">			border: 1px solid red;</span></div><div class="line"><span class="undefined">			/*border-radius: 50% 30% 20%;*/</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined">		</span></div><div class="line"><span class="undefined">		.square &#123;</span></div><div class="line"><span class="undefined">			border-radius: 0;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined">		</span></div><div class="line"><span class="undefined">		/*拱形*/</span></div><div class="line"><span class="undefined">		.item:nth-child(1) .border-radius &#123;</span></div><div class="line"><span class="undefined">			border-radius: 90px;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		/*拱形*/</span></div><div class="line"><span class="undefined">		.item:nth-child(2) .border-radius &#123;</span></div><div class="line"><span class="undefined">			border-radius: 90px 90px 0 0;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		/*半圆*/</span></div><div class="line"><span class="undefined">		.item:nth-child(3) .border-radius &#123;</span></div><div class="line"><span class="undefined">			height: 90px;</span></div><div class="line"><span class="undefined">			border-radius: 90px 90px 0 0;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		/*左上角*/</span></div><div class="line"><span class="undefined">		.item:nth-child(4) .border-radius &#123;</span></div><div class="line"><span class="undefined">			/*height: 90px;*/</span></div><div class="line"><span class="undefined">			border-radius: 90px 0 0 0;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		/*四分之一圆*/</span></div><div class="line"><span class="undefined">		.item:nth-child(5) .border-radius &#123;</span></div><div class="line"><span class="undefined">			width: 90px;</span></div><div class="line"><span class="undefined">			height: 90px;</span></div><div class="line"><span class="undefined">			border-radius: 90px 0 0 0;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		/*横着的椭圆*/</span></div><div class="line"><span class="undefined">		.item:nth-child(6) .border-radius &#123;</span></div><div class="line"><span class="undefined">			height: 90px;</span></div><div class="line"><span class="undefined">			/*border-radius: 50%;*/</span></div><div class="line"><span class="undefined">			border-radius: 90px 90px 90px 90px / 45px 45px 45px 45px;</span></div><div class="line"><span class="undefined">			/*border-radius: 45px / 90px;*/</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		/*竖着的椭圆*/</span></div><div class="line"><span class="undefined">		.item:nth-child(7) .border-radius &#123;</span></div><div class="line"><span class="undefined">			width: 90px;</span></div><div class="line"><span class="undefined">			border-radius: 45px 45px 45px 45px / 90px 90px 90px 90px;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		/*半个横着的椭圆*/</span></div><div class="line"><span class="undefined">		.item:nth-child(8) .border-radius &#123;</span></div><div class="line"><span class="undefined">			height: 45px;</span></div><div class="line"><span class="undefined">			border-radius: 90px 90px 0 0 / 45px 45px 0 0;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		/*半个竖着的椭圆*/</span></div><div class="line"><span class="undefined">		.item:nth-child(9) .border-radius &#123;</span></div><div class="line"><span class="undefined">			width: 45px;</span></div><div class="line"><span class="undefined">			border-radius: 45px  0 0 45px / 90px 0 0 90px;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		/*四分之一竖着的椭圆*/</span></div><div class="line"><span class="undefined">		.item:nth-child(10) .border-radius &#123;</span></div><div class="line"><span class="undefined">			width: 45px;</span></div><div class="line"><span class="undefined">			height: 90px;</span></div><div class="line"><span class="undefined">			border-radius: 45px 0 0 0 / 90px 0 0 0;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		/*饼环*/</span></div><div class="line"><span class="undefined">		.item:nth-child(11) .border-radius &#123;</span></div><div class="line"><span class="undefined">			width: 40px;</span></div><div class="line"><span class="undefined">			height: 40px;</span></div><div class="line"><span class="undefined">			border: 70px solid red;</span></div><div class="line"><span class="undefined">			border-radius: 90px;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		/*圆饼*/</span></div><div class="line"><span class="undefined">		.item:nth-child(12) .border-radius &#123;</span></div><div class="line"><span class="undefined">			width: 40px;</span></div><div class="line"><span class="undefined">			height: 40px;</span></div><div class="line"><span class="undefined">			border: 70px solid red;</span></div><div class="line"><span class="undefined">			border-radius: 60px;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		/*左上角圆饼*/</span></div><div class="line"><span class="undefined">		.item:nth-child(13) .border-radius &#123;</span></div><div class="line"><span class="undefined">			width: 60px;</span></div><div class="line"><span class="undefined">			height: 60px;</span></div><div class="line"><span class="undefined">			border: 60px solid red;</span></div><div class="line"><span class="undefined">			border-radius: 90px 0 0 0;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		/*对角圆饼*/</span></div><div class="line"><span class="undefined">		.item:nth-child(14) .border-radius &#123;</span></div><div class="line"><span class="undefined">			width: 60px;</span></div><div class="line"><span class="undefined">			height: 60px;</span></div><div class="line"><span class="undefined">			border: 60px solid red;</span></div><div class="line"><span class="undefined">			border-radius: 90px 0 90px 0;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		/*四边不同色*/</span></div><div class="line"><span class="undefined">		.item:nth-child(15) .border-radius &#123;</span></div><div class="line"><span class="undefined">			width: 0px;</span></div><div class="line"><span class="undefined">			height: 0px;</span></div><div class="line"><span class="undefined">			border-width: 90px;</span></div><div class="line"><span class="undefined">			border-style: solid;</span></div><div class="line"><span class="undefined">			border-color: red green yellow blue;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		/*右透明色*/</span></div><div class="line"><span class="undefined">		.item:nth-child(16) .border-radius &#123;</span></div><div class="line"><span class="undefined">			width: 0px;</span></div><div class="line"><span class="undefined">			height: 0px;</span></div><div class="line"><span class="undefined">			border-width: 90px;</span></div><div class="line"><span class="undefined">			border-style: solid;</span></div><div class="line"><span class="undefined">			border-color: red green yellow blue;</span></div><div class="line"><span class="undefined">			border-right-color: transparent;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		/*圆右透明色*/</span></div><div class="line"><span class="undefined">		.item:nth-child(17) .border-radius &#123;</span></div><div class="line"><span class="undefined">			width: 0px;</span></div><div class="line"><span class="undefined">			height: 0px;</span></div><div class="line"><span class="undefined">			border-width: 90px;</span></div><div class="line"><span class="undefined">			border-style: solid;</span></div><div class="line"><span class="undefined">			border-color: red;</span></div><div class="line"><span class="undefined">			border-right-color: transparent;</span></div><div class="line"><span class="undefined">			border-radius: 90px;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		/*圆右红透明色*/</span></div><div class="line"><span class="undefined">		.item:nth-child(18) .border-radius &#123;</span></div><div class="line"><span class="undefined">			width: 0px;</span></div><div class="line"><span class="undefined">			height: 0px;</span></div><div class="line"><span class="undefined">			border-width: 90px;</span></div><div class="line"><span class="undefined">			border-style: solid;</span></div><div class="line"><span class="undefined">			border-color: transparent;</span></div><div class="line"><span class="undefined">			border-right-color: red;</span></div><div class="line"><span class="undefined">			border-radius: 90px;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		/*阴阳图前世*/</span></div><div class="line"><span class="undefined">		.item:nth-child(19) .border-radius &#123;</span></div><div class="line"><span class="undefined">			width: 180px;</span></div><div class="line"><span class="undefined">			height: 0px;</span></div><div class="line"><span class="undefined">			border-top-width: 90px;</span></div><div class="line"><span class="undefined">			border-bottom-width: 90px;</span></div><div class="line"><span class="undefined">			border-style: solid;</span></div><div class="line"><span class="undefined">			border-top-color: red;</span></div><div class="line"><span class="undefined">			border-bottom-color: green;</span></div><div class="line"><span class="undefined">			/*border-right-color: red;*/</span></div><div class="line"><span class="undefined">			border-radius: 90px;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		/*阴阳图前世2*/</span></div><div class="line"><span class="undefined">		.item:nth-child(20) .border-radius &#123;</span></div><div class="line"><span class="undefined">			width: 180px;</span></div><div class="line"><span class="undefined">			height: 90px;</span></div><div class="line"><span class="undefined">			border-bottom-width: 90px;</span></div><div class="line"><span class="undefined">			border-style: solid;</span></div><div class="line"><span class="undefined">			border-bottom-color: green;</span></div><div class="line"><span class="undefined">			background-color: red;</span></div><div class="line"><span class="undefined">			/*border-right-color: red;*/</span></div><div class="line"><span class="undefined">			border-radius: 90px;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		/*阴阳图今生*/</span></div><div class="line"><span class="undefined">		.item:nth-child(21) .border-radius &#123;</span></div><div class="line"><span class="undefined">			width: 180px;</span></div><div class="line"><span class="undefined">			height: 90px;</span></div><div class="line"><span class="undefined">			border-bottom-width: 90px;</span></div><div class="line"><span class="undefined">			border-style: solid;</span></div><div class="line"><span class="undefined">			border-bottom-color: green;</span></div><div class="line"><span class="undefined">			background-color: red;</span></div><div class="line"><span class="undefined">			border-radius: 90px;</span></div><div class="line"><span class="undefined">			position: relative;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		.item:nth-child(21) .border-radius::after,</span></div><div class="line"><span class="undefined">		.item:nth-child(21) .border-radius::before &#123;</span></div><div class="line"><span class="undefined">			content: '';</span></div><div class="line"><span class="undefined">			position: absolute;</span></div><div class="line"><span class="undefined">			top: 50%;</span></div><div class="line"><span class="undefined">			width: 20px;</span></div><div class="line"><span class="undefined">			height: 20px;</span></div><div class="line"><span class="undefined">			/*margin: -10px 0 0 0;*/</span></div><div class="line"><span class="undefined">			border-width: 35px;</span></div><div class="line"><span class="undefined">			border-style: solid;</span></div><div class="line"><span class="undefined">			border-radius: 45px;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		/*左阴阳*/</span></div><div class="line"><span class="undefined">		.item:nth-child(21) .border-radius::after &#123;</span></div><div class="line"><span class="undefined">			background-color: red;</span></div><div class="line"><span class="undefined">			border-color: green;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		/*右阴阳*/</span></div><div class="line"><span class="undefined">		.item:nth-child(21) .border-radius::before &#123;</span></div><div class="line"><span class="undefined">			background-color: green;</span></div><div class="line"><span class="undefined">			border-color: red;</span></div><div class="line"><span class="undefined">			right: 0;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		/*右阴阳*/</span></div><div class="line"><span class="undefined">		.item:nth-child(22) .border-radius &#123;</span></div><div class="line"><span class="undefined">			width: 180px;</span></div><div class="line"><span class="undefined">			height: 90px;</span></div><div class="line"><span class="undefined">			border-bottom-width: 90px;</span></div><div class="line"><span class="undefined">			border-bottom-color: green;</span></div><div class="line"><span class="undefined">			border-bottom-style: solid;</span></div><div class="line"><span class="undefined">			background-color: red;</span></div><div class="line"><span class="undefined">			border-radius: 90px;</span></div><div class="line"><span class="undefined">			position: relative;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		.item:nth-child(22) .border-radius::after,</span></div><div class="line"><span class="undefined">		.item:nth-child(22) .border-radius::before &#123;</span></div><div class="line"><span class="undefined">			content: '';</span></div><div class="line"><span class="undefined">			position: absolute;</span></div><div class="line"><span class="undefined">			top: 50%;</span></div><div class="line"><span class="undefined">			width: 20px;</span></div><div class="line"><span class="undefined">			height: 20px;</span></div><div class="line"><span class="undefined">			border-width: 35px;</span></div><div class="line"><span class="undefined">			border-style: solid;</span></div><div class="line"><span class="undefined">			border-radius: 45px;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		.item:nth-child(22) .border-radius::before &#123;</span></div><div class="line"><span class="undefined">			border-color: green;</span></div><div class="line"><span class="undefined">			background-color: red;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		.item:nth-child(22) .border-radius::after &#123;</span></div><div class="line"><span class="undefined">			right: 0;</span></div><div class="line"><span class="undefined">			border-color: red;</span></div><div class="line"><span class="undefined">			background-color: green;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		/*消息框*/</span></div><div class="line"><span class="undefined">		.item:nth-child(23) .border-radius &#123;</span></div><div class="line"><span class="undefined">			width: 160px;</span></div><div class="line"><span class="undefined">			height: 80px;</span></div><div class="line"><span class="undefined">			background-color: red;</span></div><div class="line"><span class="undefined">			border-radius: 6px;</span></div><div class="line"><span class="undefined">			position: relative;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		.item:nth-child(23) .border-radius::after &#123;</span></div><div class="line"><span class="undefined">			content: '';</span></div><div class="line"><span class="undefined">			width: 0;</span></div><div class="line"><span class="undefined">			height: 0;</span></div><div class="line"><span class="undefined">			border-width: 10px;</span></div><div class="line"><span class="undefined">			border-style: solid;</span></div><div class="line"><span class="undefined">			border-color: transparent;</span></div><div class="line"><span class="undefined">			border-right-color: red;</span></div><div class="line"><span class="undefined">			position: absolute;</span></div><div class="line"><span class="undefined">			top: 16px;</span></div><div class="line"><span class="undefined">			left: -20px;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		/*奇怪的图形*/</span></div><div class="line"><span class="undefined">		.item:nth-child(24) .border-radius &#123;</span></div><div class="line"><span class="undefined">			width: 40px;</span></div><div class="line"><span class="undefined">			height: 40px;</span></div><div class="line"><span class="undefined">			border-width: 45px 0 45px 70px;</span></div><div class="line"><span class="undefined">			border-style: solid;</span></div><div class="line"><span class="undefined">			border-radius: 0 0 60px 0;</span></div><div class="line"><span class="undefined">			border-color: red;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		/*奇怪的图形2*/</span></div><div class="line"><span class="undefined">		.item:nth-child(25) .border-radius &#123;</span></div><div class="line"><span class="undefined">			width: 100px;</span></div><div class="line"><span class="undefined">			height: 40px;</span></div><div class="line"><span class="undefined">			border-width: 45px 20px 45px 70px;</span></div><div class="line"><span class="undefined">			border-style: solid;</span></div><div class="line"><span class="undefined">			border-radius: 60px;</span></div><div class="line"><span class="undefined">			border-color: red;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		/*QQ对话*/</span></div><div class="line"><span class="undefined">		.item:nth-child(26) .border-radius &#123;</span></div><div class="line"><span class="undefined">			width: 160px;</span></div><div class="line"><span class="undefined">			height: 80px;</span></div><div class="line"><span class="undefined">			background-color: red;</span></div><div class="line"><span class="undefined">			border-radius: 6px;</span></div><div class="line"><span class="undefined">			position: relative;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		.item:nth-child(26) .border-radius::after &#123;</span></div><div class="line"><span class="undefined">			content: '';</span></div><div class="line"><span class="undefined">			position: absolute;</span></div><div class="line"><span class="undefined">			top: 0;</span></div><div class="line"><span class="undefined">			right: -20px;</span></div><div class="line"><span class="undefined">			width: 30px;</span></div><div class="line"><span class="undefined">			height: 30px;</span></div><div class="line"><span class="undefined">			border-width: 0 0 30px 30px;</span></div><div class="line"><span class="undefined">			border-style: solid;</span></div><div class="line"><span class="undefined">			border-bottom-color: red;</span></div><div class="line"><span class="undefined">			border-left-color: transparent;</span></div><div class="line"><span class="undefined">			border-radius: 0 0 60px 0;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">		/*圆角的百分比设置 */</span></div><div class="line"><span class="undefined">		.item:nth-child(27) .border-radius &#123;</span></div><div class="line"><span class="undefined">			width: 180px;</span></div><div class="line"><span class="undefined">			/*height: 180px;*/</span></div><div class="line"><span class="undefined">			height: 90px;</span></div><div class="line"><span class="undefined">			border-radius: 50%;</span></div><div class="line"><span class="undefined">			border-radius: 90px/45px;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">			/*百分比是按横竖两个对应的方向的长度进行计算*/</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">	</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">header</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">h3</span>&gt;</span>CSS3 边框圆角<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">header</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">data-brief</span>=<span class="string">"整圆"</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"border-radius"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">data-brief</span>=<span class="string">"拱形"</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"border-radius"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">data-brief</span>=<span class="string">"半圆"</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"border-radius"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">data-brief</span>=<span class="string">"左上角"</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"border-radius"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">data-brief</span>=<span class="string">"四分之一圆"</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"border-radius"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">data-brief</span>=<span class="string">"横着的椭圆"</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"border-radius"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">data-brief</span>=<span class="string">"竖着的椭圆"</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"border-radius"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">data-brief</span>=<span class="string">"半个横着的椭圆"</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"border-radius"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">data-brief</span>=<span class="string">"半个竖着的椭圆"</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"border-radius"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">data-brief</span>=<span class="string">"四分之一竖着的椭圆"</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"border-radius"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">data-brief</span>=<span class="string">"饼环"</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"border-radius"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">data-brief</span>=<span class="string">"圆饼"</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"border-radius"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">data-brief</span>=<span class="string">"左上角圆饼"</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"border-radius"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">data-brief</span>=<span class="string">"对角圆饼"</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"border-radius"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">data-brief</span>=<span class="string">"四边不同色"</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"border-radius"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">data-brief</span>=<span class="string">"右透明色"</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"border-radius"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">data-brief</span>=<span class="string">"圆右透明色"</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"border-radius"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">data-brief</span>=<span class="string">"圆右红透明色"</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"border-radius"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">data-brief</span>=<span class="string">"阴阳图前世"</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"border-radius"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">data-brief</span>=<span class="string">"阴阳图前世2"</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"border-radius"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">data-brief</span>=<span class="string">"阴阳图今生"</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"border-radius"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">data-brief</span>=<span class="string">"阴阳图今生2"</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"border-radius"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">data-brief</span>=<span class="string">"消息框"</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"border-radius"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">data-brief</span>=<span class="string">"奇怪的图形"</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"border-radius"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">data-brief</span>=<span class="string">"奇怪的图形2"</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"border-radius"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">data-brief</span>=<span class="string">"QQ对话"</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"border-radius"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">data-brief</span>=<span class="string">"圆角百分比"</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"border-radius"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>==膜拜级哆啦A梦==<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div><div class="line">420</div><div class="line">421</div><div class="line">422</div><div class="line">423</div><div class="line">424</div><div class="line">425</div><div class="line">426</div><div class="line">427</div><div class="line">428</div><div class="line">429</div><div class="line">430</div><div class="line">431</div><div class="line">432</div><div class="line">433</div><div class="line">434</div><div class="line">435</div><div class="line">436</div><div class="line">437</div><div class="line">438</div><div class="line">439</div><div class="line">440</div><div class="line">441</div><div class="line">442</div><div class="line">443</div><div class="line">444</div><div class="line">445</div><div class="line">446</div><div class="line">447</div><div class="line">448</div><div class="line">449</div><div class="line">450</div><div class="line">451</div><div class="line">452</div><div class="line">453</div><div class="line">454</div><div class="line">455</div><div class="line">456</div><div class="line">457</div><div class="line">458</div><div class="line">459</div><div class="line">460</div><div class="line">461</div><div class="line">462</div><div class="line">463</div><div class="line">464</div><div class="line">465</div><div class="line">466</div><div class="line">467</div><div class="line">468</div><div class="line">469</div><div class="line">470</div><div class="line">471</div><div class="line">472</div><div class="line">473</div><div class="line">474</div><div class="line">475</div><div class="line">476</div><div class="line">477</div><div class="line">478</div><div class="line">479</div><div class="line">480</div><div class="line">481</div><div class="line">482</div><div class="line">483</div><div class="line">484</div><div class="line">485</div><div class="line">486</div><div class="line">487</div><div class="line">488</div><div class="line">489</div><div class="line">490</div><div class="line">491</div><div class="line">492</div><div class="line">493</div><div class="line">494</div><div class="line">495</div><div class="line">496</div><div class="line">497</div><div class="line">498</div><div class="line">499</div><div class="line">500</div><div class="line">501</div><div class="line">502</div><div class="line">503</div><div class="line">504</div><div class="line">505</div><div class="line">506</div><div class="line">507</div><div class="line">508</div><div class="line">509</div><div class="line">510</div><div class="line">511</div><div class="line">512</div><div class="line">513</div><div class="line">514</div><div class="line">515</div><div class="line">516</div><div class="line">517</div><div class="line">518</div><div class="line">519</div><div class="line">520</div><div class="line">521</div><div class="line">522</div><div class="line">523</div><div class="line">524</div><div class="line">525</div><div class="line">526</div><div class="line">527</div><div class="line">528</div><div class="line">529</div><div class="line">530</div><div class="line">531</div><div class="line">532</div><div class="line">533</div><div class="line">534</div><div class="line">535</div><div class="line">536</div><div class="line">537</div><div class="line">538</div><div class="line">539</div><div class="line">540</div><div class="line">541</div><div class="line">542</div><div class="line">543</div><div class="line">544</div><div class="line">545</div><div class="line">546</div><div class="line">547</div><div class="line">548</div><div class="line">549</div><div class="line">550</div><div class="line">551</div><div class="line">552</div><div class="line">553</div><div class="line">554</div><div class="line">555</div><div class="line">556</div><div class="line">557</div><div class="line">558</div><div class="line">559</div><div class="line">560</div><div class="line">561</div><div class="line">562</div><div class="line">563</div><div class="line">564</div><div class="line">565</div><div class="line">566</div><div class="line">567</div><div class="line">568</div><div class="line">569</div><div class="line">570</div><div class="line">571</div><div class="line">572</div><div class="line">573</div><div class="line">574</div><div class="line">575</div><div class="line">576</div><div class="line">577</div><div class="line">578</div><div class="line">579</div><div class="line">580</div><div class="line">581</div><div class="line">582</div><div class="line">583</div><div class="line">584</div><div class="line">585</div><div class="line">586</div><div class="line">587</div><div class="line">588</div><div class="line">589</div><div class="line">590</div><div class="line">591</div><div class="line">592</div><div class="line">593</div><div class="line">594</div><div class="line">595</div><div class="line">596</div><div class="line">597</div><div class="line">598</div><div class="line">599</div><div class="line">600</div><div class="line">601</div><div class="line">602</div><div class="line">603</div><div class="line">604</div><div class="line">605</div><div class="line">606</div><div class="line">607</div><div class="line">608</div><div class="line">609</div><div class="line">610</div><div class="line">611</div><div class="line">612</div><div class="line">613</div><div class="line">614</div><div class="line">615</div><div class="line">616</div><div class="line">617</div><div class="line">618</div><div class="line">619</div><div class="line">620</div><div class="line">621</div><div class="line">622</div><div class="line">623</div><div class="line">624</div><div class="line">625</div><div class="line">626</div><div class="line">627</div><div class="line">628</div><div class="line">629</div><div class="line">630</div><div class="line">631</div><div class="line">632</div><div class="line">633</div><div class="line">634</div><div class="line">635</div><div class="line">636</div><div class="line">637</div><div class="line">638</div><div class="line">639</div><div class="line">640</div><div class="line">641</div><div class="line">642</div><div class="line">643</div><div class="line">644</div><div class="line">645</div><div class="line">646</div><div class="line">647</div><div class="line">648</div><div class="line">649</div><div class="line">650</div><div class="line">651</div><div class="line">652</div><div class="line">653</div><div class="line">654</div><div class="line">655</div><div class="line">656</div><div class="line">657</div><div class="line">658</div><div class="line">659</div><div class="line">660</div><div class="line">661</div><div class="line">662</div><div class="line">663</div><div class="line">664</div><div class="line">665</div><div class="line">666</div><div class="line">667</div><div class="line">668</div><div class="line">669</div><div class="line">670</div><div class="line">671</div><div class="line">672</div><div class="line">673</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-cn"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>机器猫<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"author"</span> <span class="attr">content</span>=<span class="string">""</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"copyright"</span> <span class="attr">content</span>=<span class="string">" "</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">        	.wrapper&#123;</span></div><div class="line"><span class="undefined">            	    margin: 50px 0 0 500px;</span></div><div class="line"><span class="undefined">            	&#125;</span></div><div class="line"><span class="undefined">        	.doraemon&#123;</span></div><div class="line"><span class="undefined">             	    position: relative;</span></div><div class="line"><span class="undefined">             	&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">            .doraemon .head &#123;</span></div><div class="line"><span class="undefined">                            position:relative;</span></div><div class="line"><span class="undefined">                            width: 320px;</span></div><div class="line"><span class="undefined">                            height: 300px;</span></div><div class="line"><span class="undefined">                            border-radius: 150px;</span></div><div class="line"><span class="undefined">                            background: #07bbee;</span></div><div class="line"><span class="undefined">                            background: -webkit-radial-gradient(right top,#fff 10%,#07bbee 20%,#10a6ce 75%,#000);</span></div><div class="line"><span class="undefined">                            background: -moz-radial-gradient(right top,#fff 10%,#07bbee 20%,#10a6ce 75%,#000);</span></div><div class="line"><span class="undefined">                            background: -ms-radial-gradient(right top,#fff 10%,#07bbee 20%,#10a6ce 75%,#000);</span></div><div class="line"><span class="undefined">                 border:2px solid #555;</span></div><div class="line"><span class="undefined">                 box-shadow:-5px 10px 15px rgba(0,0,0,0.45);</span></div><div class="line"><span class="undefined">             &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">            	/*脸部*/</span></div><div class="line"><span class="undefined">            .doraemon .face &#123;</span></div><div class="line"><span class="undefined">                 position: relative; /*让所有脸部元素可自由定位*/</span></div><div class="line"><span class="undefined">                 z-index: 2;    /*脸在头部背景上面*/</span></div><div class="line"><span class="undefined">             &#125;</span></div><div class="line"><span class="undefined">            	        /*白色脸底*/</span></div><div class="line"><span class="undefined">            	        .doraemon .face .white &#123;</span></div><div class="line"><span class="undefined">                 	            width: 265px;       /*设置宽高*/</span></div><div class="line"><span class="undefined">                 	            height: 195px;</span></div><div class="line"><span class="undefined">                 	            border-radius: 150px;</span></div><div class="line"><span class="undefined">                 	            position: absolute; /*进行绝对定位*/</span></div><div class="line"><span class="undefined">                 	            top: 75px;</span></div><div class="line"><span class="undefined">                 	            left: 25px;</span></div><div class="line"><span class="undefined">                 	            background: #fff;</span></div><div class="line"><span class="undefined">                 	            /*此放射渐变也是使脸的左下角暗一些，看上去更真实*/</span></div><div class="line"><span class="undefined">                 	            background: -webkit-radial-gradient(right top,#fff 75%,#eee 80%,#999 90%,#444);</span></div><div class="line"><span class="undefined">                 	            background: -moz-radial-gradient(right top,#fff 75%,#eee 80%,#999 90%,#444);</span></div><div class="line"><span class="undefined">                 	            background: –ms-radial-gradient(right top,#fff 75%,#eee 80%,#999 90%,#444);</span></div><div class="line"><span class="undefined">                 	         &#125;</span></div><div class="line"><span class="undefined">            	        /*鼻子*/</span></div><div class="line"><span class="undefined">            	         .doraemon .face .nose&#123;</span></div><div class="line"><span class="undefined">                  	             width:30px;</span></div><div class="line"><span class="undefined">                  	             height:30px;</span></div><div class="line"><span class="undefined">                  	             border-radius:15px;</span></div><div class="line"><span class="undefined">                  	             background:#c93300;</span></div><div class="line"><span class="undefined">                  	             border:2px solid #000;</span></div><div class="line"><span class="undefined">                  	             position:absolute;</span></div><div class="line"><span class="undefined">                  	             top:110px;</span></div><div class="line"><span class="undefined">                  	             left:140px;</span></div><div class="line"><span class="undefined">                  	             z-index:3;   /*鼻子在白色脸底下面*/</span></div><div class="line"><span class="undefined">                  	         &#125;</span></div><div class="line"><span class="undefined">            	        /*鼻子上的高光*/</span></div><div class="line"><span class="undefined">            	        .doraemon .face .nose .light &#123;</span></div><div class="line"><span class="undefined">                  	            width:10px;</span></div><div class="line"><span class="undefined">                  	            height:10px;</span></div><div class="line"><span class="undefined">                  	            border-radius: 5px;</span></div><div class="line"><span class="undefined">                  	            box-shadow: 19px 8px 5px #fff;  /*通过阴影实现高光*/</span></div><div class="line"><span class="undefined">                  	        &#125;</span></div><div class="line"><span class="undefined">            	         /*鼻子下的线*/</span></div><div class="line"><span class="undefined">            	         .doraemon .face .nose_line&#123;</span></div><div class="line"><span class="undefined">                  	             width:3px;</span></div><div class="line"><span class="undefined">                  	             height:100px;</span></div><div class="line"><span class="undefined">                  	             background:#333;</span></div><div class="line"><span class="undefined">                  	             position:absolute;</span></div><div class="line"><span class="undefined">                  	             top:143px;</span></div><div class="line"><span class="undefined">                  	             left:155px;</span></div><div class="line"><span class="undefined">                  	             z-index:3;</span></div><div class="line"><span class="undefined">                  	         &#125;</span></div><div class="line"><span class="undefined">            	         /*嘴巴*/</span></div><div class="line"><span class="undefined">            	         .doraemon .face .mouth&#123;</span></div><div class="line"><span class="undefined">                  	             width:220px;</span></div><div class="line"><span class="undefined">                  	             height:400px;</span></div><div class="line"><span class="undefined">                  	             /*通过底边框加上圆角模拟微笑嘴巴*/</span></div><div class="line"><span class="undefined">                  	             border-bottom:3px solid #333;</span></div><div class="line"><span class="undefined">                  	             border-radius:120px;</span></div><div class="line"><span class="undefined">                  	             position:absolute;</span></div><div class="line"><span class="undefined">                  	             top:-160px;</span></div><div class="line"><span class="undefined">                  	             left:45px;</span></div><div class="line"><span class="undefined">                  	         &#125;</span></div><div class="line"><span class="undefined">            	         /*眼睛*/</span></div><div class="line"><span class="undefined">            	        .doraemon .eyes &#123;</span></div><div class="line"><span class="undefined">                  	            position: relative;</span></div><div class="line"><span class="undefined">                  	            z-index: 3; /*眼睛在白色脸底下面*/</span></div><div class="line"><span class="undefined">                  	        &#125;</span></div><div class="line"><span class="undefined">            	        /*眼睛共同的样式*/</span></div><div class="line"><span class="undefined">            	        .doraemon .eyes .eye&#123;</span></div><div class="line"><span class="undefined">                  	            width:72px;</span></div><div class="line"><span class="undefined">                  	            height:82px;</span></div><div class="line"><span class="undefined">                  	            background:#fff;</span></div><div class="line"><span class="undefined">                  	            border:2px solid #000;</span></div><div class="line"><span class="undefined">                  	            border-radius:35px 35px;</span></div><div class="line"><span class="undefined">                  	            position:absolute;</span></div><div class="line"><span class="undefined">                  	            top:40px;</span></div><div class="line"><span class="undefined">                  	        &#125;  /*眼珠*/</span></div><div class="line"><span class="undefined">            	        .doraemon .eyes .eye .black&#123;</span></div><div class="line"><span class="undefined">                  	            width:14px;</span></div><div class="line"><span class="undefined">                  	            height:14px;</span></div><div class="line"><span class="undefined">                  	            background:#000;</span></div><div class="line"><span class="undefined">                  	            border-radius:7px;</span></div><div class="line"><span class="undefined">                  	            position:absolute;</span></div><div class="line"><span class="undefined">                  	            top:40px;</span></div><div class="line"><span class="undefined">                  	        &#125;</span></div><div class="line"><span class="undefined">            	     .doraemon .eyes .left&#123;</span></div><div class="line"><span class="undefined">                  	            left:82px;</span></div><div class="line"><span class="undefined">                  	        &#125;</span></div><div class="line"><span class="undefined">            	     .doraemon .eyes .right &#123;</span></div><div class="line"><span class="undefined">                  	            left: 156px;</span></div><div class="line"><span class="undefined">                  	        &#125;</span></div><div class="line"><span class="undefined">            	     .doraemon .eyes .eye .bleft &#123;</span></div><div class="line"><span class="undefined">                  	            left: 50px;</span></div><div class="line"><span class="undefined">                  	        &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">                     .doraemon .eyes .eye .bright &#123;</span></div><div class="line"><span class="undefined">                         left: 7px;</span></div><div class="line"><span class="undefined">                     &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">            	/*胡须背景，主要用于挡住嘴巴的一部分，不要显得太长*/</span></div><div class="line"><span class="undefined">            	        .doraemon .whiskers&#123;</span></div><div class="line"><span class="undefined">                             width:220px;</span></div><div class="line"><span class="undefined">                             height:80px;</span></div><div class="line"><span class="undefined">                             background:#fff;</span></div><div class="line"><span class="undefined">                             border-radius:15px;</span></div><div class="line"><span class="undefined">                             position:absolute;</span></div><div class="line"><span class="undefined">                             top:120px;</span></div><div class="line"><span class="undefined">                             left:45px;</span></div><div class="line"><span class="undefined">                 	            z-index:2;   /*在鼻子和眼睛下面*/</span></div><div class="line"><span class="undefined">                 	        &#125;</span></div><div class="line"><span class="undefined">            	        /*所有胡子的公用样式*/</span></div><div class="line"><span class="undefined">            	        .doraemon .whiskers .whisker &#123;</span></div><div class="line"><span class="undefined">                  	            width: 60px;</span></div><div class="line"><span class="undefined">                  	            height: 2px;</span></div><div class="line"><span class="undefined">                  	            background: #333;</span></div><div class="line"><span class="undefined">                  	            position: absolute;</span></div><div class="line"><span class="undefined">                  	            z-index: 2;</span></div><div class="line"><span class="undefined">                  	        &#125;</span></div><div class="line"><span class="undefined">            	        /*右上胡子*/</span></div><div class="line"><span class="undefined">            	        .doraemon .whiskers .rTop &#123;</span></div><div class="line"><span class="undefined">                  	            left: 165px;</span></div><div class="line"><span class="undefined">                  	            top: 25px;</span></div><div class="line"><span class="undefined">                  	        &#125;</span></div><div class="line"><span class="undefined">            	        /*右中胡子*/</span></div><div class="line"><span class="undefined">            	        .doraemon .whiskers .rMiddle &#123;</span></div><div class="line"><span class="undefined">                  	            left: 167px;</span></div><div class="line"><span class="undefined">                  	            top: 45px;</span></div><div class="line"><span class="undefined">                  	        &#125;</span></div><div class="line"><span class="undefined">            	        /*右下胡子*/</span></div><div class="line"><span class="undefined">            	        .doraemon .whiskers .rBottom &#123;</span></div><div class="line"><span class="undefined">                  	            left: 165px;</span></div><div class="line"><span class="undefined">                  	            top: 65px;</span></div><div class="line"><span class="undefined">                  	        &#125;</span></div><div class="line"><span class="undefined">                    /*左上胡子*/</span></div><div class="line"><span class="undefined">                    .doraemon .whiskers .lTop &#123;</span></div><div class="line"><span class="undefined">                  	            left: 0;</span></div><div class="line"><span class="undefined">                  	            top: 25px;</span></div><div class="line"><span class="undefined">                  	        &#125;</span></div><div class="line"><span class="undefined">            	        /*左中胡子*/</span></div><div class="line"><span class="undefined">            	        .doraemon .whiskers .lMiddle &#123;</span></div><div class="line"><span class="undefined">                  	            left: -2px;</span></div><div class="line"><span class="undefined">                  	            top: 45px;</span></div><div class="line"><span class="undefined">                  	        &#125;</span></div><div class="line"><span class="undefined">            	        /*左下胡子*/</span></div><div class="line"><span class="undefined">            	        .doraemon .whiskers .lBottom &#123;</span></div><div class="line"><span class="undefined">                  	            left: 0;</span></div><div class="line"><span class="undefined">                  	            top: 65px;</span></div><div class="line"><span class="undefined">                  	        &#125;</span></div><div class="line"><span class="undefined">            	        /*胡子旋转角度*/</span></div><div class="line"><span class="undefined">            	        .doraemon .whiskers .r160 &#123;</span></div><div class="line"><span class="undefined">                  	            -webkit-transform: rotate(160deg);</span></div><div class="line"><span class="undefined">                  	            -moz-transform: rotate(160deg);</span></div><div class="line"><span class="undefined">                  	            -ms-transform: rotate(160deg);</span></div><div class="line"><span class="undefined">                  	            -o-transform: rotate(160deg);</span></div><div class="line"><span class="undefined">                  	            transform: rotate(160deg);</span></div><div class="line"><span class="undefined">                  	        &#125;</span></div><div class="line"><span class="undefined">            	        .doraemon .whiskers .r20 &#123;</span></div><div class="line"><span class="undefined">                  	            -webkit-transform: rotate(200deg);</span></div><div class="line"><span class="undefined">                  	            -moz-transform: rotate(200deg);</span></div><div class="line"><span class="undefined">                  	            -ms-transform: rotate(200deg);</span></div><div class="line"><span class="undefined">                  	            -o-transform: rotate(200deg);</span></div><div class="line"><span class="undefined">                  	            transform: rotate(200deg);</span></div><div class="line"><span class="undefined">                  	        &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">            	/*围脖*/</span></div><div class="line"><span class="undefined">            	        .doraemon .choker &#123;</span></div><div class="line"><span class="undefined">              	            width: 230px;</span></div><div class="line"><span class="undefined">                	            height: 20px;</span></div><div class="line"><span class="undefined">                	            background: #c40;</span></div><div class="line"><span class="undefined">                	            /*线性渐变 让围巾看上去更自然*/</span></div><div class="line"><span class="undefined">                	            background: -webkit-gradient(linear,left top,left bottom,from(#c40),to(#800400));</span></div><div class="line"><span class="undefined">                	            background: -moz-linear-gradient(center top,#c40,#800400);</span></div><div class="line"><span class="undefined">                	            background: -ms-linear-gradient(center top,#c40,#800400);</span></div><div class="line"><span class="undefined">                     border: 2px solid #000;</span></div><div class="line"><span class="undefined">                        border-radius: 10px;</span></div><div class="line"><span class="undefined">                        position: relative;</span></div><div class="line"><span class="undefined">                        top: -40px;</span></div><div class="line"><span class="undefined">                        left: 45px;</span></div><div class="line"><span class="undefined">                        z-index: 4;</span></div><div class="line"><span class="undefined">                    &#125;</span></div><div class="line"><span class="undefined">               /*铃铛*/</span></div><div class="line"><span class="undefined">               .doraemon .choker .bell &#123;</span></div><div class="line"><span class="undefined">            	            width: 40px;</span></div><div class="line"><span class="undefined">            	            height: 40px;</span></div><div class="line"><span class="undefined">            	            _overflow: hidden; /*IE6 hack*/</span></div><div class="line"><span class="undefined">            	            border: 2px solid #000;</span></div><div class="line"><span class="undefined">            	            border-radius: 50px;</span></div><div class="line"><span class="undefined">            	            background: #f9f12a;</span></div><div class="line"><span class="undefined">            	            background: -webkit-gradient(linear, left top, left bottom, from(#f9f12a),color-stop(0.5, #e9e11a), to(#a9a100));</span></div><div class="line"><span class="undefined">            	            background: -moz-linear-gradient(top, #f9f12a, #e9e11a 75%,#a9a100);</span></div><div class="line"><span class="undefined">           	   background: -ms-linear-gradient(top, #f9f12a, #e9e11a 75%,#a9a100);</span></div><div class="line"><span class="undefined">           	            box-shadow: -5px 5px 10px rgba(0,0,0,0.25);</span></div><div class="line"><span class="undefined">           	            position: absolute;</span></div><div class="line"><span class="undefined">           	            top: 5px;</span></div><div class="line"><span class="undefined">           	            left: 90px;</span></div><div class="line"><span class="undefined">           	        &#125;</span></div><div class="line"><span class="undefined">              /*双横线*/</span></div><div class="line"><span class="undefined">              .doraemon .choker .bell_line &#123;</span></div><div class="line"><span class="undefined">           	            width: 36px;</span></div><div class="line"><span class="undefined">           	            height: 2px;</span></div><div class="line"><span class="undefined">           	            background: #f9f12a;</span></div><div class="line"><span class="undefined">           	            border: 2px solid #333;</span></div><div class="line"><span class="undefined">           	            border-radius: 3px 3px 0 0;</span></div><div class="line"><span class="undefined">           	            position: absolute;</span></div><div class="line"><span class="undefined">           	            top: 10px;</span></div><div class="line"><span class="undefined">           	        &#125;</span></div><div class="line"><span class="undefined">              /*黑点*/</span></div><div class="line"><span class="undefined">              .doraemon .choker .bell_circle&#123;</span></div><div class="line"><span class="undefined">                  width:12px;</span></div><div class="line"><span class="undefined">            	            height:10px;</span></div><div class="line"><span class="undefined">            	            background:#000;</span></div><div class="line"><span class="undefined">            	            border-radius:5px;</span></div><div class="line"><span class="undefined">            	            position:absolute;</span></div><div class="line"><span class="undefined">            	            top:20px;</span></div><div class="line"><span class="undefined">            	            left:14px;</span></div><div class="line"><span class="undefined">            	        &#125;</span></div><div class="line"><span class="undefined">               /*黑点下的线*/</span></div><div class="line"><span class="undefined">               .doraemon .choker .bell_under&#123;</span></div><div class="line"><span class="undefined">            	            width: 3px;</span></div><div class="line"><span class="undefined">            	            height:15px;</span></div><div class="line"><span class="undefined">            	            background:#000;</span></div><div class="line"><span class="undefined">            	            position:absolute;</span></div><div class="line"><span class="undefined">            	            left: 18px;</span></div><div class="line"><span class="undefined">            	            top:27px;</span></div><div class="line"><span class="undefined">            	        &#125;</span></div><div class="line"><span class="undefined">               /*铃铛高光*/</span></div><div class="line"><span class="undefined">               .doraemon .choker .bell_light&#123;</span></div><div class="line"><span class="undefined">            	            width:12px;</span></div><div class="line"><span class="undefined">            	            height:12px;</span></div><div class="line"><span class="undefined">            	            border-radius:10px;</span></div><div class="line"><span class="undefined">            	            box-shadow:19px 8px 5px #fff;</span></div><div class="line"><span class="undefined">            	            position:absolute;</span></div><div class="line"><span class="undefined">            	            top:-5px;</span></div><div class="line"><span class="undefined">            	            left:5px;</span></div><div class="line"><span class="undefined">            	            opacity:0.7;</span></div><div class="line"><span class="undefined">            	        &#125;</span></div><div class="line"><span class="undefined">               /*身子*/</span></div><div class="line"><span class="undefined">               .doraemon .bodys &#123;</span></div><div class="line"><span class="undefined">            	            position: relative;</span></div><div class="line"><span class="undefined">            	            top: -310px;</span></div><div class="line"><span class="undefined">            	        &#125;</span></div><div class="line"><span class="undefined">               /*肚子*/</span></div><div class="line"><span class="undefined">            	        .doraemon .bodys .body &#123;</span></div><div class="line"><span class="undefined">                 	            width: 220px;</span></div><div class="line"><span class="undefined">                 	            height: 165px;</span></div><div class="line"><span class="undefined">                 	            background: #07beea;</span></div><div class="line"><span class="undefined">                 	            background: -webkit-gradient(linear,right top,left top,from(#07beea),color-stop(0.5, #0073b3),color-stop(0.75,#00b0e0), to(#0096be));</span></div><div class="line"><span class="undefined">                 	            background: -moz-linear-gradient(right center,#07beea,#0073b3 50%,#00b0e0 75%,#0096be 100%);</span></div><div class="line"><span class="undefined">                 	            background: -ms-linear-gradient(right center,#07beea,#0073b3 50%,#00b0e0 75%,#0096be 100%);</span></div><div class="line"><span class="undefined">                 	            border:2px solid #333;</span></div><div class="line"><span class="undefined">                 	            position:absolute;</span></div><div class="line"><span class="undefined">                 	            top:265px;</span></div><div class="line"><span class="undefined">                 	            left:50px;</span></div><div class="line"><span class="undefined">                 	        &#125;</span></div><div class="line"><span class="undefined">            	        /*白色肚兜*/</span></div><div class="line"><span class="undefined">            	            .doraemon .bodys .wraps &#123;</span></div><div class="line"><span class="undefined">                                  width: 170px;</span></div><div class="line"><span class="undefined">                                  height: 170px;</span></div><div class="line"><span class="undefined">                                  background: #fff;</span></div><div class="line"><span class="undefined">                                  background: -webkit-gradient(linear, right top, left bottom, from(#fff),color-stop(0.75,#fff),color-stop(0.83,#eee),color-stop(0.90,#999),color-stop(0.95,#444), to(#000));</span></div><div class="line"><span class="undefined">                                  background: -moz-linear-gradient(right top,#fff,#fff 75%,#eee 83%,#999 90%,#444 95%,#000);</span></div><div class="line"><span class="undefined">                                  background: -ms-linear-gradient(right top,#fff,#fff 75%,#eee 83%,#999 90%,#444 95%,#000);</span></div><div class="line"><span class="undefined">                                  border: 2px solid #000;</span></div><div class="line"><span class="undefined">                  	                border-radius: 85px;</span></div><div class="line"><span class="undefined">                  	                position: absolute;</span></div><div class="line"><span class="undefined">                  	                left: 72px;</span></div><div class="line"><span class="undefined">                  	                top: 230px;</span></div><div class="line"><span class="undefined">                  	            &#125;</span></div><div class="line"><span class="undefined">            	            /*口袋*/</span></div><div class="line"><span class="undefined">            	            .doraemon .bodys .pocket &#123;</span></div><div class="line"><span class="undefined">                   	                width: 130px;</span></div><div class="line"><span class="undefined">                   	                height: 130px;</span></div><div class="line"><span class="undefined">                   	                border-radius: 65px;</span></div><div class="line"><span class="undefined">                   	                background: #fff;</span></div><div class="line"><span class="undefined">                   	                background: -webkit-gradient(linear, right top, left bottom, from(#fff),color-stop(0.70,#fff),color-stop(0.75,#f8f8f8),color-stop(0.80,#eee),color-stop(0.88,#ddd), to(#fff));</span></div><div class="line"><span class="undefined">                   	                background: -moz-linear-gradient(right top, #fff, #fff 70%,#f8f8f8 75%,#eee 80%,#ddd 88%, #fff);</span></div><div class="line"><span class="undefined">                   	                background: -ms-linear-gradient(right top, #fff, #fff 70%,#f8f8f8 75%,#eee 80%,#ddd 88%, #fff);</span></div><div class="line"><span class="undefined">                   	                border: 2px solid #000;</span></div><div class="line"><span class="undefined">                   	                position:absolute;</span></div><div class="line"><span class="undefined">                   	                top: 250px;</span></div><div class="line"><span class="undefined">                   	                left: 92px;</span></div><div class="line"><span class="undefined">                   	            &#125;</span></div><div class="line"><span class="undefined">            	            /*挡住口袋一半*/</span></div><div class="line"><span class="undefined">            	            .doraemon .bodys .pocket_mask &#123;</span></div><div class="line"><span class="undefined">                   	                width: 134px;</span></div><div class="line"><span class="undefined">                   	                height: 60px;</span></div><div class="line"><span class="undefined">                   	                background:#fff;</span></div><div class="line"><span class="undefined">                   	                border-bottom: 2px solid #000;</span></div><div class="line"><span class="undefined">                   	                position:absolute;</span></div><div class="line"><span class="undefined">                   	                top: 259px;</span></div><div class="line"><span class="undefined">                   	                left: 92px;</span></div><div class="line"><span class="undefined">                   	           &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">            	/*左右手*/</span></div><div class="line"><span class="undefined">                .doraemon .hand_right, .doraemon .hand_left &#123;</span></div><div class="line"><span class="undefined">                        height: 100px;</span></div><div class="line"><span class="undefined">                        width: 100px;</span></div><div class="line"><span class="undefined">                        position: absolute;</span></div><div class="line"><span class="undefined">                        top: 272px;</span></div><div class="line"><span class="undefined">                        left: 248px;</span></div><div class="line"><span class="undefined">                    &#125;</span></div><div class="line"><span class="undefined">                /*左手*/</span></div><div class="line"><span class="undefined">                .doraemon .hand_left &#123;</span></div><div class="line"><span class="undefined">           	                left: -10px;</span></div><div class="line"><span class="undefined">           	            &#125;</span></div><div class="line"><span class="undefined">                /*手臂公共部分*/</span></div><div class="line"><span class="undefined">                .doraemon .arm &#123;</span></div><div class="line"><span class="undefined">           	                width:80px;</span></div><div class="line"><span class="undefined">           	                height:50px;</span></div><div class="line"><span class="undefined">           	                background: #07beea;</span></div><div class="line"><span class="undefined">           	                background: -webkit-gradient(linear, left top, left bottom, from(#07beea),color-stop(0.85,#07beea), to(#555));</span></div><div class="line"><span class="undefined">           	                background: -moz-linear-gradient(center top, #07BEEA, #07BEEA 85%, #555);</span></div><div class="line"><span class="undefined">           	                background: -ms-linear-gradient(center top, #07BEEA, #07BEEA 85%, #555);</span></div><div class="line"><span class="undefined">           	                border: 1px solid #000000;</span></div><div class="line"><span class="undefined">           	                box-shadow: -10px 7px 10px rgba(0, 0, 0, 0.35);</span></div><div class="line"><span class="undefined">           	                z-index: -1;</span></div><div class="line"><span class="undefined">           	                position: relative;</span></div><div class="line"><span class="undefined">           	            &#125;</span></div><div class="line"><span class="undefined">                /*右手手臂*/</span></div><div class="line"><span class="undefined">                .doraemon .hand_right .arm &#123;</span></div><div class="line"><span class="undefined">           	                top: 17px;</span></div><div class="line"><span class="undefined">           	                -webkit-transform: rotate(35deg);</span></div><div class="line"><span class="undefined">           	                -moz-transform: rotate(35deg);</span></div><div class="line"><span class="undefined">           	                -ms-transform: rotate(35deg);</span></div><div class="line"><span class="undefined">           	                -o-transform: rotate(35deg);</span></div><div class="line"><span class="undefined">           	                transform: rotate(35deg);</span></div><div class="line"><span class="undefined">           	            &#125;</span></div><div class="line"><span class="undefined">                /*左手手臂*/</span></div><div class="line"><span class="undefined">                .doraemon .hand_left .arm &#123;</span></div><div class="line"><span class="undefined">           	                top: 17px;</span></div><div class="line"><span class="undefined">           	                background: #0096be;   /*背光一面使用纯色，使其有立体感*/</span></div><div class="line"><span class="undefined">           	                box-shadow: 5px -7px 10px rgba(0, 0, 0, 0.25);</span></div><div class="line"><span class="undefined">           	                -webkit-transform: rotate(145deg);</span></div><div class="line"><span class="undefined">           	                -moz-transform: rotate(145deg);</span></div><div class="line"><span class="undefined">           	                -ms-transform: rotate(145deg);</span></div><div class="line"><span class="undefined">           	                -o-transform: rotate(145deg);</span></div><div class="line"><span class="undefined">           	                transform: rotate(145deg);</span></div><div class="line"><span class="undefined">           	            &#125;</span></div><div class="line"><span class="undefined">                /*圆形手掌公共部分*/</span></div><div class="line"><span class="undefined">                .doraemon .circle &#123;</span></div><div class="line"><span class="undefined">           	                width: 60px;</span></div><div class="line"><span class="undefined">           	                height: 60px;</span></div><div class="line"><span class="undefined">           	                border-radius: 30px;</span></div><div class="line"><span class="undefined">           	                border: 2px solid #000;</span></div><div class="line"><span class="undefined">           	                background: #fff;</span></div><div class="line"><span class="undefined">           	                background: -webkit-gradient(linear, right top, left bottom, from(#fff),color-stop(0.5,#fff),color-stop(0.70,#eee),color-stop(0.8,#ddd), to(#999));</span></div><div class="line"><span class="undefined">           	                background: -moz-linear-gradient(right top, #fff, #fff 50%, #eee 70%, #ddd 80%,#999);</span></div><div class="line"><span class="undefined">           	                background: -ms-linear-gradient(right top, #fff, #fff 50%, #eee 70%, #ddd 80%,#999);</span></div><div class="line"><span class="undefined">           	                position: absolute;</span></div><div class="line"><span class="undefined">           	            &#125;</span></div><div class="line"><span class="undefined">                /*右手手掌*/</span></div><div class="line"><span class="undefined">                .doraemon .hand_right .circle &#123;</span></div><div class="line"><span class="undefined">           	                left: 40px;</span></div><div class="line"><span class="undefined">           	                top: 32px;</span></div><div class="line"><span class="undefined">           	            &#125;</span></div><div class="line"><span class="undefined">                /*左手手掌*/</span></div><div class="line"><span class="undefined">                .doraemon .hand_left .circle &#123;</span></div><div class="line"><span class="undefined">           	                left: -20px;</span></div><div class="line"><span class="undefined">           	                top: 32px;</span></div><div class="line"><span class="undefined">           	            &#125;</span></div><div class="line"><span class="undefined">                /*手臂和身体结合处，使用背景遮住边框*/</span></div><div class="line"><span class="undefined">                .doraemon .arm_rewrite &#123;</span></div><div class="line"><span class="undefined">           	                height: 45px;</span></div><div class="line"><span class="undefined">           	                width: 5px;</span></div><div class="line"><span class="undefined">           	                background: #07beea;</span></div><div class="line"><span class="undefined">           	                position: relative;</span></div><div class="line"><span class="undefined">           	            &#125;</span></div><div class="line"><span class="undefined">                /*右手结合处*/</span></div><div class="line"><span class="undefined">                .doraemon .hand_right .arm_rewrite &#123;</span></div><div class="line"><span class="undefined">           	                top: -45px;</span></div><div class="line"><span class="undefined">           	                left: 22px;</span></div><div class="line"><span class="undefined">           	            &#125;</span></div><div class="line"><span class="undefined">                /*左手结合处*/</span></div><div class="line"><span class="undefined">                .doraemon .hand_left .arm_rewrite &#123;</span></div><div class="line"><span class="undefined">           	                top: -45px;</span></div><div class="line"><span class="undefined">           	                left: 60px;</span></div><div class="line"><span class="undefined">           	                background: #0096be; /*同理，背光一面使用纯色，使其有立体感*/</span></div><div class="line"><span class="undefined">           	            &#125;</span></div><div class="line"><span class="undefined">                /*脚部*/</span></div><div class="line"><span class="undefined">                .doraemon .foot &#123;</span></div><div class="line"><span class="undefined">           	                width: 280px;</span></div><div class="line"><span class="undefined">           	                height: 40px;</span></div><div class="line"><span class="undefined">           	                position: relative;</span></div><div class="line"><span class="undefined">           	                top: 55px;</span></div><div class="line"><span class="undefined">           	                left: 20px;</span></div><div class="line"><span class="undefined">           	            &#125;</span></div><div class="line"><span class="undefined">                /*左右脚共同样式*/</span></div><div class="line"><span class="undefined">                .doraemon .foot .left, .doraemon .foot .right &#123;</span></div><div class="line"><span class="undefined">           	                width: 125px;</span></div><div class="line"><span class="undefined">           	                height: 30px;</span></div><div class="line"><span class="undefined">           	                background: #fff;</span></div><div class="line"><span class="undefined">           	                background: -webkit-gradient(linear, right top, left bottom, from(#fff),color-stop(0.75,#fff),color-stop(0.85,#eee), to(#999));</span></div><div class="line"><span class="undefined">           	                background: -moz-linear-gradient(right top, #fff, #fff 75%, #eee 85%, #999);</span></div><div class="line"><span class="undefined">           	                background: -ms-linear-gradient(right top, #fff, #fff 75%, #eee 85%, #999);</span></div><div class="line"><span class="undefined">           	                border: 2px solid #333;</span></div><div class="line"><span class="undefined">           	                border-radius: 80px 60px 60px 40px;</span></div><div class="line"><span class="undefined">           	                box-shadow: -6px 0 10px rgba(0, 0, 0, 0.35);</span></div><div class="line"><span class="undefined">           	                position: relative;</span></div><div class="line"><span class="undefined">           	            &#125;</span></div><div class="line"><span class="undefined">                    .doraemon .foot .left &#123;</span></div><div class="line"><span class="undefined">           	                left: 8px;</span></div><div class="line"><span class="undefined">           	                top: 65px;</span></div><div class="line"><span class="undefined">           	            &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">                    .doraemon .foot .right &#123;</span></div><div class="line"><span class="undefined">           	                top: 31px;</span></div><div class="line"><span class="undefined">           	                left: 141px;</span></div><div class="line"><span class="undefined">           	            &#125;</span></div><div class="line"><span class="undefined">                    /*双脚之间的缝隙，加阴影使用立体感*/</span></div><div class="line"><span class="undefined">                    .doraemon .foot .foot_rewrite &#123;</span></div><div class="line"><span class="undefined">           	                width: 20px;</span></div><div class="line"><span class="undefined">           	                height: 10px;</span></div><div class="line"><span class="undefined">           	                background: #fff;</span></div><div class="line"><span class="undefined">           	                background: -webkit-gradient(linear, right top, left bottom, from(#666),color-stop(0.83,#fff), to(#fff));</span></div><div class="line"><span class="undefined">           	                background: -moz-linear-gradient(right top, #666, #fff 83%, #fff);</span></div><div class="line"><span class="undefined">           	                background: -ms-linear-gradient(right top, #666, #fff 83%, #fff);</span></div><div class="line"><span class="undefined">           	                /*制作半圆效果*/</span></div><div class="line"><span class="undefined">           	                border: 2px solid #000;</span></div><div class="line"><span class="undefined">           	                border-bottom: none;</span></div><div class="line"><span class="undefined">           	                border-radius: 40px 40px 0 0;</span></div><div class="line"><span class="undefined">           	                position: relative;</span></div><div class="line"><span class="undefined">           	                top: -11px;</span></div><div class="line"><span class="undefined">           	                left: 130px;</span></div><div class="line"><span class="undefined">           	                _left: 127px;</span></div><div class="line"><span class="undefined">           	            &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">            	/*眼珠*/</span></div><div class="line"><span class="undefined">               .doraemon .eyes .eye .black &#123;</span></div><div class="line"><span class="undefined">                       width: 14px;</span></div><div class="line"><span class="undefined">                       height: 14px;</span></div><div class="line"><span class="undefined">                       background: #000;</span></div><div class="line"><span class="undefined">                       border-radius: 7px;</span></div><div class="line"><span class="undefined">                       position: absolute;</span></div><div class="line"><span class="undefined">                       top: 40px;</span></div><div class="line"><span class="undefined">                       -webkit-animation: eyemove 3s linear infinite;</span></div><div class="line"><span class="undefined">            	            -moz-animation: eyemove 3s linear infinite;</span></div><div class="line"><span class="undefined">            	            -ms-animation: eyemove 3s linear infinite;</span></div><div class="line"><span class="undefined">            	            -o-animation: eyemove 3s linear infinite;</span></div><div class="line"><span class="undefined">            	            animation: eyemove 3s linear infinite;</span></div><div class="line"><span class="undefined">            	        &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">               /*让眼睛动起来*/</span></div><div class="line"><span class="undefined">               @-webkit-keyframes eyemove &#123;</span></div><div class="line"><span class="undefined">                   70%&#123;</span></div><div class="line"><span class="undefined">                           margin:0 0 0 0;</span></div><div class="line"><span class="undefined">                       &#125;</span></div><div class="line"><span class="undefined">                   80% &#123;</span></div><div class="line"><span class="undefined">                           margin: -22px 0 0 0;</span></div><div class="line"><span class="undefined">                       &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">                   85% &#123;</span></div><div class="line"><span class="undefined">                           margin: -22px 0 0 5px;</span></div><div class="line"><span class="undefined">                       &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">                   90% &#123;</span></div><div class="line"><span class="undefined">                           margin: -22px 10px 0 0;</span></div><div class="line"><span class="undefined">                       &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">                   93% &#123;</span></div><div class="line"><span class="undefined">                           margin: -22px 0 0 0;</span></div><div class="line"><span class="undefined">                       &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">                   96% &#123;</span></div><div class="line"><span class="undefined">                           margin: 0 0 0 0;</span></div><div class="line"><span class="undefined">                       &#125;</span></div><div class="line"><span class="undefined">               &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">               @-moz-keyframes eyemove &#123;</span></div><div class="line"><span class="undefined">                   70% &#123;</span></div><div class="line"><span class="undefined">                           margin: 0 0 0 0;</span></div><div class="line"><span class="undefined">                       &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">                   80% &#123;</span></div><div class="line"><span class="undefined">                           margin: -22px 0 0 0;</span></div><div class="line"><span class="undefined">                       &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">                   85% &#123;</span></div><div class="line"><span class="undefined">                           margin: -22px 0 0 5px;</span></div><div class="line"><span class="undefined">                       &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">                   90% &#123;</span></div><div class="line"><span class="undefined">                           margin: -22px 10px 0 0;</span></div><div class="line"><span class="undefined">                       &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">                   93% &#123;</span></div><div class="line"><span class="undefined">                           margin: -22px 0 0 0;</span></div><div class="line"><span class="undefined">                       &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">                   96% &#123;</span></div><div class="line"><span class="undefined">                           margin: 0 0 0 0;</span></div><div class="line"><span class="undefined">                       &#125;</span></div><div class="line"><span class="undefined">               &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">               @-o-keyframes eyemove &#123;</span></div><div class="line"><span class="undefined">                   70% &#123;</span></div><div class="line"><span class="undefined">                           margin: 0 0 0 0;</span></div><div class="line"><span class="undefined">                       &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">                   80% &#123;</span></div><div class="line"><span class="undefined">                           margin: -22px 0 0 0;</span></div><div class="line"><span class="undefined">                       &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">                   85% &#123;</span></div><div class="line"><span class="undefined">                           margin: -22px 0 0 5px;</span></div><div class="line"><span class="undefined">                       &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">                   90% &#123;</span></div><div class="line"><span class="undefined">                           margin: -22px 10px 0 0;</span></div><div class="line"><span class="undefined">                       &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">                   93% &#123;</span></div><div class="line"><span class="undefined">                           margin: -22px 0 0 0;</span></div><div class="line"><span class="undefined">                       &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">                   96% &#123;</span></div><div class="line"><span class="undefined">                           margin: 0 0 0 0;</span></div><div class="line"><span class="undefined">                       &#125;</span></div><div class="line"><span class="undefined">               &#125;</span></div><div class="line"><span class="undefined">               @keyframes eyemove &#123;</span></div><div class="line"><span class="undefined">                   70% &#123;</span></div><div class="line"><span class="undefined">                           margin: 0 0 0 0;</span></div><div class="line"><span class="undefined">                       &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">                   80% &#123;</span></div><div class="line"><span class="undefined">                           margin: -22px 0 0 0;</span></div><div class="line"><span class="undefined">            	            &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">                       85% &#123;</span></div><div class="line"><span class="undefined">            	                margin: -22px 0 0 5px;</span></div><div class="line"><span class="undefined">            	            &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">                       90% &#123;</span></div><div class="line"><span class="undefined">            	                margin: -22px 10px 0 0;</span></div><div class="line"><span class="undefined">            	            &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">                       93% &#123;</span></div><div class="line"><span class="undefined">            	                margin: -22px 0 0 0;</span></div><div class="line"><span class="undefined">            	            &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">                       96% &#123;</span></div><div class="line"><span class="undefined">            	                margin: 0 0 0 0;</span></div><div class="line"><span class="undefined">            	            &#125;</span></div><div class="line"><span class="undefined">                   &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--叮当猫整体--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"doraemon"</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!--头部--&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"head"</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!--眼睛--&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"eyes"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"eye left"</span>&gt;</span></div><div class="line">                    <span class="comment">&lt;!--眼珠--&gt;</span></div><div class="line">    	                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"black bleft"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"eye right"</span>&gt;</span></div><div class="line">    	                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"black bright"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	            <span class="comment">&lt;!--脸部--&gt;</span></div><div class="line">    	            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"face"</span>&gt;</span></div><div class="line">    	                <span class="comment">&lt;!--白色脸底--&gt;</span></div><div class="line">    	                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"white"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	                <span class="comment">&lt;!--鼻子--&gt;</span></div><div class="line">    	                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nose"</span>&gt;</span></div><div class="line">    	                    <span class="comment">&lt;!--鼻子高光部分--&gt;</span></div><div class="line">    	                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"light"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	                <span class="comment">&lt;!--鼻子的竖线--&gt;</span></div><div class="line">    	                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nose_line"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	                <span class="comment">&lt;!--嘴巴--&gt;</span></div><div class="line">    	                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mouth"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	                <span class="comment">&lt;!--胡须--&gt;</span></div><div class="line">    	                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"whiskers"</span>&gt;</span></div><div class="line">    	                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"whisker rTop r160"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"whisker rMiddle"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"whisker rBottom r20"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"whisker lTop r20"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"whisker lMiddle"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"whisker lBottom r160"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	        <span class="comment">&lt;!--脖子和铃铛--&gt;</span></div><div class="line">    	        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"choker"</span>&gt;</span></div><div class="line">    	            <span class="comment">&lt;!--铃铛--&gt;</span></div><div class="line">    	            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bell"</span>&gt;</span></div><div class="line">    	                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bell_line"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bell_circle"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bell_under"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bell_light"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	        <span class="comment">&lt;!--身体--&gt;</span></div><div class="line">    	        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bodys"</span>&gt;</span></div><div class="line">    	            <span class="comment">&lt;!--肚子--&gt;</span></div><div class="line">    	            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"body"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	            <span class="comment">&lt;!--肚兜--&gt;</span></div><div class="line">    	            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wraps"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	            <span class="comment">&lt;!--口袋--&gt;</span></div><div class="line">    	            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pocket"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	            <span class="comment">&lt;!--遮住一半口袋，使其呈现半圆--&gt;</span></div><div class="line">    	            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pocket_mask"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	        <span class="comment">&lt;!--右手--&gt;</span></div><div class="line">    	        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hand_right"</span>&gt;</span></div><div class="line">    	            <span class="comment">&lt;!--手臂--&gt;</span></div><div class="line">    	            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"arm"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	            <span class="comment">&lt;!--手掌--&gt;</span></div><div class="line">    	            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"circle"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	            <span class="comment">&lt;!--遮住手臂和身子交接处的线--&gt;</span></div><div class="line">    	            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"arm_rewrite"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	        <span class="comment">&lt;!--左手--&gt;</span></div><div class="line">    	        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hand_left"</span>&gt;</span></div><div class="line">    	            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"arm"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"circle"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"arm_rewrite"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	        <span class="comment">&lt;!--脚--&gt;</span></div><div class="line">    	        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"foot"</span>&gt;</span></div><div class="line">    	            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	             <span class="comment">&lt;!--双脚之间的缝隙--&gt;</span></div><div class="line">    	            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"foot_rewrite"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><h4 id="background-size"><a href="#background-size" class="headerlink" title="background-size"></a>background-size</h4><p>设置背景图片的尺寸，参数设置如下：<br>1.可以设置长度单位px或者百分比（设置百分比时，参照盒子的宽高）  </p>
<ul>
<li>length:用长度值指定背景图像大小。不允许负值。 </li>
<li>percentage： 用百分比指定背景图像大小。不允许负值。 </li>
<li>auto： 背景图像的真实大小。 </li>
<li>cover： 将背景图像等比缩放到完全覆盖容器，背景图像有可能超出容器。 保证图片始终填满背景区域，如果有溢出，溢出部分会被隐藏。</li>
<li>contain： 将背景图像等比缩放到宽度或高度与容器的宽度或高度相等，背景图像始终被包含在容器内。 保证图片始终完整显示在背景区域。盒子溢出的自动隐藏。<h4 id="background-origin"><a href="#background-origin" class="headerlink" title="background-origin"></a>background-origin</h4>可以设置背景图片定位(background-position)的参照原点。<br>参数设置为：  </li>
<li>border-box  以边框作为参考原点，默认值</li>
<li>padding-box  以内边距作为参考原点</li>
<li>content-box  以内容区作为参考原点<h4 id="background-clip"><a href="#background-clip" class="headerlink" title="background-clip"></a>background-clip</h4>可以对背景区域进行裁切，即改变背景区域的大小。参数设置如下：</li>
<li>border-box 裁切边框以内为背景区域</li>
<li>padding-box 裁切内边距以内为背景区域</li>
<li>content-box  裁切内容区作为背景区域</li>
<li>多个图片可以设置元素的多背景效果</li>
<li>background:url(),url(),url();<h4 id="多背景"><a href="#多背景" class="headerlink" title="多背景"></a>多背景</h4>以逗号分隔可以设置多背景，可用于自适应布局。多个背景图的书写顺序为左上右上，右下，左下，中间。<h3 id="渐变"><a href="#渐变" class="headerlink" title="渐变"></a>渐变</h3><h4 id="线性渐变"><a href="#线性渐变" class="headerlink" title="线性渐变"></a>线性渐变</h4>linear-gradient线性渐变指沿着某条直线朝一个方向产生渐变效果。<br>必要的元素：方向，起始色，终止色，渐变距离。<br>关于方向：设置渐变的方向，可以用关键字如to top，to-right，也可以用角度（正负值均可），如45deg，-90deg等，当以角度作为参数时，0deg从下往上走90deg从左往右，进而可以推出180deg从上向下。   <h4 id="径向渐变"><a href="#径向渐变" class="headerlink" title="径向渐变"></a>径向渐变</h4>radial-gradient指的是从一个中心点开始沿着四周产生渐变效果。<br>必要的元素：辐射范围即圆半径，中心点即圆心，渐变起始色，渐变终止色，渐变范围。<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">    background-image: radial-gradient(100px at center,yellow,green);</span></div><div class="line"><span class="undefined">    /*at前面可以有两个半径 100px 50 px at....*/</span></div><div class="line"><span class="undefined">     background-image: radial-gradient(100px at 150px 150px ,yellow 25%,green 50%,blue 75%,red);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="过渡属性"><a href="#过渡属性" class="headerlink" title="过渡属性"></a>过渡属性</h2><p>过渡是css3中具有颠覆性的特征之一，可以实现元素不同状态间的平滑过渡（补间动画），经常用来制作动画效果。<br>帧动画：通过一帧一帧的画面按照固定顺序和速度播放。类似于电影胶片。<br>补间动画：自动完成从起始状态到终止状态的过渡。<br>==特点：当元素只要有“属性”发生变化时，可以平滑的进行过渡，并不仅仅局限于hover状态。==  </p>
<ul>
<li>transition-property 设置过渡属性</li>
<li>transition-duration 设置过渡时间</li>
<li>transition-timing-function  设置过渡速度</li>
<li>transition-delay  设置过渡延时</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS 过渡<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">    body &#123;</span></div><div class="line"><span class="undefined">      margin: 0;</span></div><div class="line"><span class="undefined">      padding: 0;</span></div><div class="line"><span class="undefined">      background-color: #F7F7F7;</span></div><div class="line"><span class="undefined">      position: relative;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">    .transition &#123;</span></div><div class="line"><span class="undefined">      width: 200px;</span></div><div class="line"><span class="undefined">      height: 200px;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">    .box &#123;</span></div><div class="line"><span class="undefined">      width: 200px;</span></div><div class="line"><span class="undefined">      height: 200px;</span></div><div class="line"><span class="undefined">      background-color: green;</span></div><div class="line"><span class="undefined">      position: absolute;</span></div><div class="line"><span class="undefined">      top: 50px;</span></div><div class="line"><span class="undefined">      left: 20px;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">    /*四个参数:all---所有属性,1s--时间,linear---线性(匀速),*/</span></div><div class="line"><span class="undefined">    /*参数:all---所有属性*/</span></div><div class="line"><span class="undefined">    /*1s---时间*/</span></div><div class="line"><span class="undefined">    /*linear----匀速*/</span></div><div class="line"><span class="undefined">    /*ease---快慢(缓解的意思)*/</span></div><div class="line"><span class="undefined">    /*ease-in---快*/</span></div><div class="line"><span class="undefined">    /*ease-out---慢*/</span></div><div class="line"><span class="undefined">    /*2s---过渡延迟时间*/</span></div><div class="line"><span class="undefined">   .transition:hover .box&#123;</span></div><div class="line"><span class="undefined">     left: 800px;</span></div><div class="line"><span class="undefined">     width: 300px;</span></div><div class="line"><span class="undefined">     height: 300px;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">     transition: all 1s linear;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">     /*transition:all 1s ease;*/</span></div><div class="line"><span class="undefined">     /*transition: all 1s linear|ease|ease-in|ease-out 2s;*/</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">     /*指定的属性名字:transition-property*/</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">     /*transition-property: all;*/</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">     /*动画执行的时间:transition-duration*/</span></div><div class="line"><span class="undefined">     /*transition-duration:2s ;*/</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">     /*速度:timing-function*/</span></div><div class="line"><span class="undefined">     /*transition-timing-function: linear;*/</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">     /*延迟:transition-delay*/</span></div><div class="line"><span class="undefined">     /*transition-delay:2s;*/</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">    /*延迟效果实现,属性拆分*/</span></div><div class="line"><span class="undefined">    /*transition:width 1s,height 2s 3s, left 4s 4s;*/</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">   &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"transition"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>过渡：<br>transition:all 1s 2s 这个写法的解释<br>第一个参数：属性—all—所有的属性<br>第二个参数：属性—1s—-过渡的时间<br>第三个参数：属性—2s—-延迟的时间<br>第一个参数如果是改变所有的属性那么就用all，如果只是设置一个属性进行过渡，就写一个属性。  </p>
<ol>
<li>transition-property：希望要过渡的属性  </li>
<li>transition-duration：过渡的时间</li>
<li>transition-timing-function：速度（linear匀速，ease快慢，ease-in，ease-out。）  </li>
<li>transition-delay：延迟<h3 id="2D转换"><a href="#2D转换" class="headerlink" title="2D转换"></a>2D转换</h3>转换是css3中具有颠覆性的特征之一，可以实现元素的位移，旋转，变形，缩放，甚至支持矩阵方式，配合即将学习的过渡和动画知识，可以取代大量之前只能靠Flash才可以实现的效果。<br>1.移动  translate(x,y) 可以改变元素的位置，x，y可以为负值。<br>注意：移动位置相当于自身原来的位置；y轴正方向朝下；除了可以像素值，也可以是百分比，相对于自身的宽度或高度。<br>2.缩放  scale(x,y)  可以对元素进行水平和垂直方向的缩放，x，y的取值可以为小数。<br>3.旋转  rotate(deg)  可以对元素进行旋转，正值为顺时针，负值为逆时针。<br>当元素旋转以后，坐标轴也跟着发生转变。调整顺序可以解决，把旋转放在最后。<br>4.倾斜  skew(deg,deg)可以使元素按一定的角度进行倾斜，可为负值，第二个参数不写默认为0。<br>5.矩阵 matrix() 把所有的2D转换组合到一起，需要6个参数。<br>transform-orgin可以调整元素转换的原点，但是对于transform:translate(x,y)没有影响。<br>我们可以同时使用多个转换，其格式为:transform:translate() rotate() scale()…等，其顺序会影响转换的效果。<h3 id="3D转换"><a href="#3D转换" class="headerlink" title="3D转换"></a>3D转换</h3>1.3D坐标轴<br>用X，Y，Z分别表示空间的3个维度，三条轴互相垂直<br><img src="F:备用图片\坐标轴.png" alt="image"><br>2.透视<br>透视可以将一个2D平面，在转换的过程当中，呈现3D效果。（没有perspective，便没有Z轴）并非任何情况下需要透视效果。<br>透视会产生”近大远小”的效果。<br>3.perspective的两种写法<br>（a）作为一个属性，设置给父元素，作用于所有3D转换的子元素。<br>（b）作为transform属性的一个值，做用于自身元素。<br>4.左手坐标系<br>伸出左手，让拇指和食指成“L”形，大拇指向右，食指向上，中指指向前方。这样我们就建立了一个左手坐标系，拇指、食指和中指分别代表X、Y、Z轴的正方向。<br>5.左手法则<br>左手握住旋转轴，竖起拇指指向旋转轴正方向，正向就是其余手指卷曲的方向。<br>6.3D呈现<br>设置内嵌的元素在 3D 空间如何呈现，这些子元素必须为变形原素。<br>flat：所有子元素在 2D 平面呈现<br>preserve-3d：保留3D空间<br>7、backface-visibility<br>设置元素背面是否可见。   <h3 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h3>动画是css3中具有颠覆性的特征之一，可通过设置多个节点来精确控制一个或者一组动画，常用来实现复杂的动画效果。<br>1.必要的元素<br>a、通过@keyframes指定动画序列；<br>b、通过百分比将动画序列分割成多个节点；<br>c、在各节点中分别定义各属性；<br>d、通过animation将动画应用于相应元素。<br>2.关键属性<br>a、animation-name设置动画序列名称<br>b、animation-duration动画持续时间<br>c、animation-delay动画延时时间<br>d、animation-timing-function动画执行速度，linear、ease等<br>e、animation-play-state动画播放状态，running、paused等<br>f、animation-direction动画逆播，alternate等。<br>g、animation-fill-mode动画执行完毕后状态，forwards、backwards等。<br>h、animation-iteration-count动画执行次数，inifinate等。<br>i、steps（60）表示动画分为60步完成。<br>参数值的顺序：关于几个值，除了名字，动画时间，延时有严格顺序要求其他随意。  <h3 id="伸缩布局"><a href="#伸缩布局" class="headerlink" title="伸缩布局"></a>伸缩布局</h3>css在布局方面做了非常大的改进，使得我们对块级元素的布局排列变得十分灵活，适用性非常强，其强大的伸缩性，在响应式布局中可以发挥极大的作用。也有兼容性问题。<br><img src="F:备用图片\伸缩布局.png" alt="image"><br>主轴：Flex容器的主轴主要用来配置Flex项目，默认是水平方向。<br>侧轴：与主轴垂直的轴称作侧轴，默认是垂直方向的。<br>方向：默认主轴从左向右，侧轴默认从上到下。<br>主轴和侧轴并不是固定不变的，通过flex-direction可以互换。<br>1.必要属性<br>a、指定一个盒子为伸缩盒子 display：flex；<br>b、设置属性来调整此盒子的子元素的布局方式，如flex-direction<br>c、明确主侧轴及方向<br>d、可互换主侧轴，也可改变方向。<br>2.各个属性详解<br>a、flex-direction调整主轴方向（默认为水平方向）<br>b、justify-content调整主轴对齐<br>c、align-items调整侧轴对齐<br>d、flex-wrap控制是否换行<br>e、align-content堆栈（由flex-wrap产生的独立行）对齐<br>f、flex-flow是flex-direction、flex-wrap的简写形式<br>g、flex子项目在主轴的缩放比例，不指定flex属性，则不参与伸缩分配<br>h、order控制子项目的排列顺序，正序方式排序，从小到大<br>==主轴方向==<br>调整主轴方向（默认为水平方向）包括row、column、row-reverse、column-reverse。<br>调整主轴方向，默认为水平方向。<br>取值为column时，垂直排列。<br>取值为row-reverse时，水平反向排列。<br>取值column-reverse时，垂直反向排列。<br>==主轴方向对齐==<br>主轴方向对齐，可以调整元素在主轴方向上的对齐方式，包括flex-start、flex-end、center、space-between几种方式。<br>flex-start 起始点对齐。<br>flex-end  终止点对齐。<br>center   居中对齐。<br>space-around  四面环绕<br>space-between  两端对齐<br>==侧轴方向==<br>侧轴方向对齐方式，包括flex-start、flex-end、center、stretch。<br>flex-start  侧轴起始点对齐<br>flex-end   侧轴终止点对齐<br>center   侧轴居中对齐<br>stretch  侧轴拉伸对齐<br>==控制换行==<br>控制是否换行，包括wrap、nowrap。<br>nowrap不换行，wrap换行。<br>==堆栈排列==<br>可以应用flex-wrap：wrap后产生的换行进行控制，包括flex-start、flex-end、center、space-between、space-around、space-around、stretch。<br>flex-start 起始点对齐<br>flex-end  终止点对齐<br>center  居中对齐<br>space-around  四周环绕<br>space-between  两端对齐<br>stretch   拉伸<br>==flex-direction和flex-wrap的简写形式为flex-flow。==<br>==伸缩布局==<br>flex  控制子元素的伸缩比例<br>同align-items可覆盖父元素设置的algin-items，包括flex-start、flex-end、center、stretch。<br>==order可以控制子元素的顺序==  </li>
</ol>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">    body&#123;</span></div><div class="line"><span class="undefined">      margin: 0;</span></div><div class="line"><span class="undefined">      padding: 0;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">    ul&#123;</span></div><div class="line"><span class="undefined">      width: 800px;</span></div><div class="line"><span class="undefined">      height: 400px;</span></div><div class="line"><span class="undefined">      border:1px solid red;</span></div><div class="line"><span class="undefined">      position: absolute;</span></div><div class="line"><span class="undefined">      left:50%;</span></div><div class="line"><span class="undefined">      top:50%;</span></div><div class="line"><span class="undefined">      margin-left: -400px;</span></div><div class="line"><span class="undefined">      margin-top:-200px ;</span></div><div class="line"><span class="undefined">      list-style-type: none;</span></div><div class="line"><span class="undefined">      padding: 0;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">      /*指定ul为父级伸缩容器*/</span></div><div class="line"><span class="undefined">      display: flex;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">      /*默认主轴方向:向右*/</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">      /*如何调整主轴的-方向---使用flex-direction属性--*/</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">      /*主轴方向--默认向右*/</span></div><div class="line"><span class="undefined">      /*flex-direction: row;*/</span></div><div class="line"><span class="undefined">      /*主轴方向向下*/</span></div><div class="line"><span class="undefined">      /*flex-direction: column;*/</span></div><div class="line"><span class="undefined">      /*主轴方向向左*/</span></div><div class="line"><span class="undefined">      /*flex-direction: row-reverse;*/</span></div><div class="line"><span class="undefined">      /*主轴方向向上*/</span></div><div class="line"><span class="undefined">      /*flex-direction: column-reverse;*/</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">      /*如何调整主轴的-对齐方式----使用justify-content*/</span></div><div class="line"><span class="undefined">      /*主轴对齐方向默认---向右*/</span></div><div class="line"><span class="undefined">      /*justify-content: flex-start;*/</span></div><div class="line"><span class="undefined">      /*主轴对齐方向---向左*/</span></div><div class="line"><span class="undefined">       /*justify-content:flex-end;*/</span></div><div class="line"><span class="undefined">      /*主轴对齐方向---居中*/</span></div><div class="line"><span class="undefined">      /*justify-content: center;*/</span></div><div class="line"><span class="undefined">      /*主轴对齐方向---两端*/</span></div><div class="line"><span class="undefined">      /*justify-content: space-between;*/</span></div><div class="line"><span class="undefined">      /*主轴对齐方向----环绕*/</span></div><div class="line"><span class="undefined">      /*justify-content: space-around;*/</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">      /*默认侧轴方向:---向下*/</span></div><div class="line"><span class="undefined">      /*侧轴方向--向下*/</span></div><div class="line"><span class="undefined">      /*align-items: flex-start;*/</span></div><div class="line"><span class="undefined">      /*侧轴方向--向上*/</span></div><div class="line"><span class="undefined">      /*align-items: flex-end;*/</span></div><div class="line"><span class="undefined">      /*侧轴方向--中间*/</span></div><div class="line"><span class="undefined">      /*align-items: center;*/</span></div><div class="line"><span class="undefined">      /*侧轴方向--拉伸状态,注意,在li中设置该属性,并且把li高度干掉*/</span></div><div class="line"><span class="undefined">      /*align-items: stretch;*/</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">      /*下面属性设置的时候,把li的宽度改为百分比的方式*/</span></div><div class="line"><span class="undefined">      /*控制是否换行:flex-wrap:nowrap*/</span></div><div class="line"><span class="undefined">      /*默认不换行*/</span></div><div class="line"><span class="undefined">      /*换行*/</span></div><div class="line"><span class="undefined">      /*flex-wrap: wrap;*/</span></div><div class="line"><span class="undefined">      /*反方向换行*/</span></div><div class="line"><span class="undefined">      /*flex-wrap: wrap-reverse;*/</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">      /*柔性排列：设置或检索弹性盒模型对象的子元素排列方式*/</span></div><div class="line"><span class="undefined">      /*时候第二个ul*/</span></div><div class="line"><span class="undefined">      /*换行排列*/</span></div><div class="line"><span class="undefined">      /*flex-flow: wrap;*/</span></div><div class="line"><span class="undefined">      /*反方向排列*/</span></div><div class="line"><span class="undefined">      /*flex-flow: wrap-reverse;*/</span></div><div class="line"><span class="undefined">     /*flex-flow: row-reverse;*/</span></div><div class="line"><span class="undefined">      /*flex-flow: row-reverse nowrap;*/</span></div><div class="line"><span class="undefined">      /**/</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">    ul li&#123;</span></div><div class="line"><span class="undefined">      /*width: 40%;*/</span></div><div class="line"><span class="undefined">      width: 200px;</span></div><div class="line"><span class="undefined">      height: 200px;</span></div><div class="line"><span class="undefined">      background-color: pink;</span></div><div class="line"><span class="undefined">      text-align: center;</span></div><div class="line"><span class="undefined">      line-height: 200px;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">    /*分多少份*/</span></div><div class="line"><span class="undefined">    /*ul li:last-child&#123;*/</span></div><div class="line"><span class="undefined">      /*!*flex: 1;*!*/</span></div><div class="line"><span class="undefined">      /*!*设置当前自己的这个元素的排列对齐方式*!*/</span></div><div class="line"><span class="undefined">      /*!*中间*!*/</span></div><div class="line"><span class="undefined">      /*!*align-self: center;*!*/</span></div><div class="line"><span class="undefined">      /*!*下面*!*/</span></div><div class="line"><span class="undefined">      /*!*align-self: flex-end;*!*/</span></div><div class="line"><span class="undefined">    /*&#125;*/</span></div><div class="line"><span class="undefined">    /*ul li:nth-child(1)&#123;*/</span></div><div class="line"><span class="undefined">      /*!*调整顺序*!*/</span></div><div class="line"><span class="undefined">      /*order: 3;*/</span></div><div class="line"><span class="undefined">    /*&#125;*/</span></div><div class="line"><span class="undefined">    /*ul li:nth-child(2)&#123;*/</span></div><div class="line"><span class="undefined">      /*order: 1;*/</span></div><div class="line"><span class="undefined">    /*&#125;*/</span></div><div class="line"><span class="undefined">    /*ul li:nth-child(3)&#123;*/</span></div><div class="line"><span class="undefined">      /*order: 2;*/</span></div><div class="line"><span class="undefined">    /*&#125;*/</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="comment">&lt;!--演示之前的样式--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="comment">&lt;!--演示弹性子元素排列方式--&gt;</span></div><div class="line"><span class="comment">&lt;!--&lt;ul&gt;--&gt;</span></div><div class="line">  <span class="comment">&lt;!--&lt;li&gt;1&lt;/li&gt;--&gt;</span></div><div class="line">  <span class="comment">&lt;!--&lt;li&gt;2&lt;/li&gt;--&gt;</span></div><div class="line">  <span class="comment">&lt;!--&lt;li&gt;3&lt;/li&gt;--&gt;</span></div><div class="line">  <span class="comment">&lt;!--&lt;li&gt;4&lt;/li&gt;--&gt;</span></div><div class="line">  <span class="comment">&lt;!--&lt;li&gt;5&lt;/li&gt;--&gt;</span></div><div class="line">  <span class="comment">&lt;!--&lt;li&gt;6&lt;/li&gt;--&gt;</span></div><div class="line">  <span class="comment">&lt;!--&lt;li&gt;7&lt;/li&gt;--&gt;</span></div><div class="line">  <span class="comment">&lt;!--&lt;li&gt;8&lt;/li&gt;--&gt;</span></div><div class="line"><span class="comment">&lt;!--&lt;/ul&gt;--&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">    body&#123;</span></div><div class="line"><span class="undefined">      margin: 0;</span></div><div class="line"><span class="undefined">      padding: 0;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">    ul&#123;</span></div><div class="line"><span class="undefined">      width: 800px;</span></div><div class="line"><span class="undefined">      height: 400px;</span></div><div class="line"><span class="undefined">      border:1px solid red;</span></div><div class="line"><span class="undefined">      position: absolute;</span></div><div class="line"><span class="undefined">      left:50%;</span></div><div class="line"><span class="undefined">      top:50%;</span></div><div class="line"><span class="undefined">      margin-left: -400px;</span></div><div class="line"><span class="undefined">      margin-top:-200px ;</span></div><div class="line"><span class="undefined">      list-style-type: none;</span></div><div class="line"><span class="undefined">      padding: 0;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">      /*指定ul为父级伸缩容器*/</span></div><div class="line"><span class="undefined">      display: flex;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">      /*默认主轴方向:向右*/</span></div><div class="line"><span class="undefined">      /*主轴方向--默认向右*/</span></div><div class="line"><span class="undefined">      /*flex-direction: row;*/</span></div><div class="line"><span class="undefined">      /*主轴方向向下*/</span></div><div class="line"><span class="undefined">      /*flex-direction: column;*/</span></div><div class="line"><span class="undefined">      /*主轴方向向左*/</span></div><div class="line"><span class="undefined">      /*flex-direction: row-reverse;*/</span></div><div class="line"><span class="undefined">      /*主轴方向向上*/</span></div><div class="line"><span class="undefined">      /*flex-direction: column-reverse;*/</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">      /*如何调整主轴的-对齐方式----使用justify-content*/</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">      /*主轴对齐方向默认---向右*/</span></div><div class="line"><span class="undefined">      /*justify-content: flex-start;*/</span></div><div class="line"><span class="undefined">      /*主轴对齐方向---向左*/</span></div><div class="line"><span class="undefined">       /*justify-content:flex-end;*/</span></div><div class="line"><span class="undefined">      /*主轴对齐方向---居中*/</span></div><div class="line"><span class="undefined">      /*justify-content: center;*/</span></div><div class="line"><span class="undefined">      /*主轴对齐方向---两端*/</span></div><div class="line"><span class="undefined">      /*justify-content: space-between;*/</span></div><div class="line"><span class="undefined">      /*主轴对齐方向----环绕*/</span></div><div class="line"><span class="undefined">      /*justify-content: space-around;*/</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">      /*默认侧轴方向:---向下*/</span></div><div class="line"><span class="undefined">      /*侧轴方向--向下*/</span></div><div class="line"><span class="undefined">      /*align-items: flex-start;*/</span></div><div class="line"><span class="undefined">      /*侧轴方向--向上*/</span></div><div class="line"><span class="undefined">      /*align-items: flex-end;*/</span></div><div class="line"><span class="undefined">      /*侧轴方向--中间*/</span></div><div class="line"><span class="undefined">      /*align-items: center;*/</span></div><div class="line"><span class="undefined">      /*侧轴方向--拉伸状态,默认值*/</span></div><div class="line"><span class="undefined">      /*align-items: stretch;*/</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">      /*下面属性设置的时候,把li的宽度改为百分比的方式*/</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">      /*控制是否换行:flex-wrap:nowrap*/</span></div><div class="line"><span class="undefined">      /*默认不换行*/</span></div><div class="line"><span class="undefined">      /*换行*/</span></div><div class="line"><span class="undefined">      /*flex-wrap: wrap;*/</span></div><div class="line"><span class="undefined">      /*反方向换行*/</span></div><div class="line"><span class="undefined">      /*flex-wrap: wrap-reverse;*/</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">      /*柔性排列：设置或检索弹性盒模型对象的子元素排列方式*/</span></div><div class="line"><span class="undefined">      /*时候第二个ul*/</span></div><div class="line"><span class="undefined">      /*换行排列*/</span></div><div class="line"><span class="undefined">      /*flex-flow: wrap;*/</span></div><div class="line"><span class="undefined">      /*反方向排列*/</span></div><div class="line"><span class="undefined">      /*flex-flow: wrap-reverse;*/</span></div><div class="line"><span class="undefined">     /*flex-flow: row-reverse;*/</span></div><div class="line"><span class="undefined">      /*flex-flow: row-reverse nowrap;*/</span></div><div class="line"><span class="undefined">      /**/</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">    ul li&#123;</span></div><div class="line"><span class="undefined">      width: 40%;</span></div><div class="line"><span class="undefined">      /*width: 200px;*/</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">      height: 200px;</span></div><div class="line"><span class="undefined">      background-color: pink;</span></div><div class="line"><span class="undefined">      text-align: center;</span></div><div class="line"><span class="undefined">      line-height: 200px;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">    /*分多少份*/</span></div><div class="line"><span class="undefined">    /*ul li:last-child&#123;*/</span></div><div class="line"><span class="undefined">      /*!*flex: 1;*!*/</span></div><div class="line"><span class="undefined">      /*!*设置当前自己的这个元素的排列对齐方式*!*/</span></div><div class="line"><span class="undefined">      /*!*中间*!*/</span></div><div class="line"><span class="undefined">      /*!*align-self: center;*!*/</span></div><div class="line"><span class="undefined">      /*!*下面*!*/</span></div><div class="line"><span class="undefined">      /*!*align-self: flex-end;*!*/</span></div><div class="line"><span class="undefined">    /*&#125;*/</span></div><div class="line"><span class="undefined">    /*ul li:nth-child(1)&#123;*/</span></div><div class="line"><span class="undefined">      /*!*调整顺序*!*/</span></div><div class="line"><span class="undefined">      /*order: 3;*/</span></div><div class="line"><span class="undefined">    /*&#125;*/</span></div><div class="line"><span class="undefined">    /*ul li:nth-child(2)&#123;*/</span></div><div class="line"><span class="undefined">      /*order: 1;*/</span></div><div class="line"><span class="undefined">    /*&#125;*/</span></div><div class="line"><span class="undefined">    /*ul li:nth-child(3)&#123;*/</span></div><div class="line"><span class="undefined">      /*order: 2;*/</span></div><div class="line"><span class="undefined">    /*&#125;*/</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="comment">&lt;!--演示之前的样式--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="comment">&lt;!--演示弹性子元素排列方式--&gt;</span></div><div class="line"><span class="comment">&lt;!--&lt;ul&gt;--&gt;</span></div><div class="line">  <span class="comment">&lt;!--&lt;li&gt;1&lt;/li&gt;--&gt;</span></div><div class="line">  <span class="comment">&lt;!--&lt;li&gt;2&lt;/li&gt;--&gt;</span></div><div class="line">  <span class="comment">&lt;!--&lt;li&gt;3&lt;/li&gt;--&gt;</span></div><div class="line">  <span class="comment">&lt;!--&lt;li&gt;4&lt;/li&gt;--&gt;</span></div><div class="line">  <span class="comment">&lt;!--&lt;li&gt;5&lt;/li&gt;--&gt;</span></div><div class="line">  <span class="comment">&lt;!--&lt;li&gt;6&lt;/li&gt;--&gt;</span></div><div class="line">  <span class="comment">&lt;!--&lt;li&gt;7&lt;/li&gt;--&gt;</span></div><div class="line">  <span class="comment">&lt;!--&lt;li&gt;8&lt;/li&gt;--&gt;</span></div><div class="line"><span class="comment">&lt;!--&lt;/ul&gt;--&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="多列布局"><a href="#多列布局" class="headerlink" title="多列布局"></a>多列布局</h4><p>兼容性很差，类似报纸和杂志中的排版方式，用以控制大篇幅文本。实际意义不大。   </p>
<h4 id="web字体"><a href="#web字体" class="headerlink" title="web字体"></a>web字体</h4><p>定义：开发人员可以为积极的网页指定特殊的字体，无需考虑用户电脑上是否安装了此特殊字体，支持程度较好，甚至IE低版本浏览器支持。<br>字体图标：把文字理解为一种特殊形状的图片，进而把图片做成文字。<br>优点：<br>1.将所有图标打包成字体库，减少请求。<br>2.具有矢量性，可以保证清晰度。<br>3.使用灵活，便于维护。  </p>
<h4 id="兼容性"><a href="#兼容性" class="headerlink" title="兼容性"></a>兼容性</h4><p>一般兼容习惯处理的常见方法是为属性添加私有前缀，如不能解决，应该避免使用，无需刻意去了解css33的兼容性问题。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;CSS3&quot;&gt;&lt;a href=&quot;#CSS3&quot; class=&quot;headerlink&quot; title=&quot;CSS3&quot;&gt;&lt;/a&gt;CSS3&lt;/h1&gt;&lt;p&gt;css3就是css版本的一个升级，里面增加了一些新的样式，增强了一些样式。&lt;br&gt;css3现状：  &lt;/p&gt;
&lt;ol&gt;
&lt;l
    
    </summary>
    
      <category term="CSS3" scheme="http://yoursite.com/categories/CSS3/"/>
    
    
      <category term="CSS3" scheme="http://yoursite.com/tags/CSS3/"/>
    
  </entry>
  
  <entry>
    <title>ECMAScript迭代语句</title>
    <link href="http://yoursite.com/2017/01/12/ECMAScript%E8%BF%AD%E4%BB%A3%E8%AF%AD%E5%8F%A5/"/>
    <id>http://yoursite.com/2017/01/12/ECMAScript迭代语句/</id>
    <published>2017-01-12T00:34:02.000Z</published>
    <updated>2017-09-08T03:05:23.448Z</updated>
    
    <content type="html"><![CDATA[<p>迭代语句又叫循环语句，声明一组要反复执行的命令，直到满足某些条件为止。循环通常用于迭代数组的值(因此而得名),或者执行重复的算数任务。   </p>
<h4 id="do-while语句"><a href="#do-while语句" class="headerlink" title="do-while语句"></a>do-while语句</h4><p>do-while语句是后测试循环，即退出条件在执行循环内部的代码之后计算，这意味着在计算表达式之前，至少会执行循环主体一次。<br>它的语法如下：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">d0 &#123;sataement&#125; <span class="keyword">while</span> (expression);</div></pre></td></tr></table></figure></p>
<p>例如:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> i=<span class="number">0</span>;</div><div class="line"><span class="keyword">do</span> &#123;i +=<span class="number">2</span>;&#125; <span class="keyword">while</span> (i&lt;<span class="number">10</span>);</div></pre></td></tr></table></figure></p>
<h4 id="while语句"><a href="#while语句" class="headerlink" title="while语句"></a>while语句</h4><p>while语句是前测试循环。这意味着突出条件是在执行内部的代码之前计算的。因此，循环主体可能根本不背执行。<br>它的语法如下：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">while</span> (expression) statement</div></pre></td></tr></table></figure></p>
<p>例子:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> i=<span class="number">0</span>;</div><div class="line"><span class="keyword">while</span> (i&lt;<span class="number">10</span>) &#123;</div><div class="line">    i+=<span class="number">2</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="for语句"><a href="#for语句" class="headerlink" title="for语句"></a>for语句</h4><p>for语句是前测试循环，而且在进入循环之前，能够初始化变量，并定义循环后要执行的代码。<br>它的语法如下：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> (initialization;expression;post-loop-expression) statement</div></pre></td></tr></table></figure></p>
<p>注意：post-loop-expression之后不能写分号，否则无法运行。<br>例如：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">iCount=<span class="number">6</span>;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;iCount;i++)&#123;</div><div class="line">    alert(i);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>这段代码定义了初始值为0的变量i。只有当条件表达式(i&lt;iCount)的值为true时，为进入for循环，这样循环主体可能不被执行。如果执行了循环遍历，那么将执行循环后表达式，并迭代变量i。  </p>
<h4 id="for-in语句"><a href="#for-in语句" class="headerlink" title="for-in语句"></a>for-in语句</h4><p>for语句是严格的迭代语句，用于枚举对象的属性。<br>它的语法如下：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> (peoperty <span class="keyword">in</span> expression) statement</div></pre></td></tr></table></figure></p>
<p>例子：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> (sProp <span class="keyword">in</span> <span class="built_in">window</span>)&#123;</div><div class="line">    alert(sProp);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>这里，for-in语句用于显示window对象的所有属性。  </p>
<h4 id="foreach语句"><a href="#foreach语句" class="headerlink" title="foreach语句"></a>foreach语句</h4><p>foreach语句用于循环遍历数组。<br>每进行一次循环，当前数组元素的值就会被赋值给value变量(数组指针会逐一地移动)，以此类推。<br>语法：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">foreach (aray <span class="keyword">as</span> value)&#123;</div><div class="line">    code to be executed;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>例子:下面的例子示范了一个循环，这个循环可以呼出给定数组的值：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">&lt;?php</div><div class="line">$arr=array("one","two","three");</div><div class="line">foreach($arr as $value)</div><div class="line">&#123;</div><div class="line">    echo "Value:".$value."&lt;br/&gt;";</div><div class="line">&#125;</div><div class="line">?&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="each方法"><a href="#each方法" class="headerlink" title="each方法"></a>each方法</h4><p>为jQuery对象进行迭代，为每个匹配元素执行函数。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;迭代语句又叫循环语句，声明一组要反复执行的命令，直到满足某些条件为止。循环通常用于迭代数组的值(因此而得名),或者执行重复的算数任务。   &lt;/p&gt;
&lt;h4 id=&quot;do-while语句&quot;&gt;&lt;a href=&quot;#do-while语句&quot; class=&quot;headerlink&quot; t
    
    </summary>
    
      <category term="总结" scheme="http://yoursite.com/categories/%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="迭代语句" scheme="http://yoursite.com/tags/%E8%BF%AD%E4%BB%A3%E8%AF%AD%E5%8F%A5/"/>
    
  </entry>
  
  <entry>
    <title>移动web开发</title>
    <link href="http://yoursite.com/2016/12/19/%E7%A7%BB%E5%8A%A8web%E5%BC%80%E5%8F%91/"/>
    <id>http://yoursite.com/2016/12/19/移动web开发/</id>
    <published>2016-12-18T16:34:14.000Z</published>
    <updated>2017-09-08T03:07:28.964Z</updated>
    
    <content type="html"><![CDATA[<h3 id="流式布局"><a href="#流式布局" class="headerlink" title="流式布局"></a>流式布局</h3><p>其实，流式布局就是百分百布局，通过把盒子的宽度设置成百分比来根据屏幕的宽度来进行伸缩，不受固定像素的限制，内容向两侧填充。这样的布局方式，就是移动web开发使用的常用布局方式。  </p>
<h3 id="viewport-视口"><a href="#viewport-视口" class="headerlink" title="viewport(视口)"></a>viewport(视口)</h3><p>在移动端用来承载网页的这个区域，就是视觉窗口，这个区域可以设置高度宽度，可以按比例缩放，而且能设置是否允许用户自行缩放。</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>参数</th>
</tr>
</thead>
<tbody>
<tr>
<td>width</td>
<td>设置的是viewport的宽度，可以设置device-width特殊值。</td>
</tr>
<tr>
<td>initial-scale</td>
<td>初始缩放比，大于0的数字</td>
</tr>
<tr>
<td>maximum-scale</td>
<td>最大缩放比，大于0的数字</td>
</tr>
<tr>
<td>minimum-scale</td>
<td>最小缩放比，大于0的数字</td>
</tr>
<tr>
<td>user-scalable</td>
<td>用户是否可以缩放，yes或no（1或者是0）</td>
</tr>
</tbody>
</table>
<p>用meta标签把viewport的宽度设置为device-width，同时initial-scale=1，user-scalable=0就构建了一个标准的移动web页面。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--快捷方式 meta:vp--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,               user-scalable=no,                  initial-scale=1.0,                 maximum-scale=1.0,                 minimum-scale=1.0"</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="Retina屏"><a href="#Retina屏" class="headerlink" title="Retina屏"></a>Retina屏</h4><p>就是视网膜屏或者高清显示屏的意思，它可以把更多的像素点压缩在一块屏幕里，从而达到更高的分辨率，并且提高屏幕显示的细腻程度。<br>但是在移动web的网页中图片容易失真，因为目前的主流移动设备都配备了高清显示屏，它把图像更多的放到像素点里，但是每个像素点并未达到饱和，所以导致图片显示容易失真。<br>所以淘宝网的手机版没有采用主流的处理方法，而是采用了二倍图三倍图的方法来解决图片失真的问题，很值得借鉴。<br>==百分比的宽高都是基于父容器的大小的百分比。==<br>==fixed定位是基于浏览器的定位。==  </p>
<h3 id="私有前缀"><a href="#私有前缀" class="headerlink" title="私有前缀"></a>私有前缀</h3><p>为什么会有私有前缀：css3的新属性刚出来，浏览器的厂商为了去支持它，约定加个前缀，确保在自己开发的浏览器下能够正常运行。</p>
<table>
<thead>
<tr>
<th>浏览器</th>
<th>前缀</th>
</tr>
</thead>
<tbody>
<tr>
<td>谷歌，safari</td>
<td>webkit（移动端主流）</td>
</tr>
<tr>
<td>火狐</td>
<td>moz</td>
</tr>
<tr>
<td>ie</td>
<td>ms</td>
</tr>
<tr>
<td>欧朋</td>
<td>o   </td>
</tr>
</tbody>
</table>
<p>兼容更多版本的浏览器加私有前缀。PC兼容的时候，最好所有都加上。<br>移动端浏览器大部分为webkit，所以只需要加上他就可以与市面上的主流浏览器兼容。  </p>
<h3 id="touch事件"><a href="#touch事件" class="headerlink" title="touch事件"></a>touch事件</h3><p>移动端的触摸事件。指的是触摸事件组。  </p>
<table>
<thead>
<tr>
<th>名称</th>
<th>作用</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>touchstart</td>
<td>触摸开始的事件</td>
<td>当屏幕被触摸的时候触发</td>
</tr>
<tr>
<td> touchmove</td>
<td>触摸滑动事件</td>
<td>当在屏幕上来回的滑动的时候触发（一直触发）调用preventDefault()可以阻止滚动</td>
</tr>
<tr>
<td>touchend</td>
<td>触摸结束事件</td>
<td>当离开屏幕的时候触发</td>
<td></td>
</tr>
<tr>
<td>touchcancel</td>
<td>取消触摸事件</td>
<td>被迫终止触摸，才会触发（例如来电）</td>
</tr>
</tbody>
</table>
<p>绑定touch事件<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">div.addEventListener(<span class="string">'touchstart'</span>,<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></div><div class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="string">'touchstart'</span>);</span></div><div class="line"><span class="undefined">&#125;);</span></div><div class="line"><span class="javascript">div.addEventListener(<span class="string">'touchmove'</span>,<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></div><div class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="string">'touchmove'</span>);</span></div><div class="line"><span class="undefined">&#125;);</span></div><div class="line"><span class="javascript">div.addEventListener(<span class="string">'touchend'</span>,<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></div><div class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="string">'touchend'</span>);</span></div><div class="line"><span class="undefined">&#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>触摸点：和屏幕接触的点的集合。通过事件对象去获取触摸点集合的TouchEvent回调函数当中的event。<br>touches相关的集合，触摸点集合。<br>==changedTouches==<br>页面上改变了的（无到有，有到无，位置变化） 触摸点集合，全程记录<br>==targetTouches==<br>目标元素上面的触摸点集合，在触摸离开的时候不会去记录。<br>==touches==<br>页面上所有的触摸点集合，在触摸离开的时候不会去记录<br>三对坐标</p>
<table>
<thead>
<tr>
<th>坐标</th>
<th>解释</th>
</tr>
</thead>
<tbody>
<tr>
<td>clientX</td>
<td>基于视口的X坐标</td>
</tr>
<tr>
<td>clientY</td>
<td>基于视口的Y坐标</td>
</tr>
<tr>
<td>screenX</td>
<td>基于屏幕的X坐标</td>
</tr>
<tr>
<td>screenY</td>
<td>基于屏幕的Y坐标</td>
</tr>
<tr>
<td>pageX</td>
<td>基于页面的X坐标</td>
</tr>
<tr>
<td>pageY</td>
<td>基于页面的Y坐标</td>
</tr>
</tbody>
</table>
<p>在滑动过程中，使用什么坐标没有关系，记录的是坐标值之间的差值，两个位置的距离。  </p>
<h4 id="tap事件"><a href="#tap事件" class="headerlink" title="tap事件"></a>tap事件</h4><p>tap轻击，是一个事件。源生js不支持，tap是通过touch衍生过来的（封装得来）。<br>tap的相应更快（150ms以内），click在移动端有300ms的延时（用户的体验不好，应该提高响应速度）。<br>==不能滑动，响应在150ms以内，才叫tap。==<br>可以使用移动端的库，提供tap相关事件。zepto.js。<br>tap还可以有singleTap，doubleTap，longTap等。<br>click在移动端有300ms的延迟，解决方法</p>
<ol>
<li>使用移动端的库当中的tap事件</li>
<li>使用移动端的插件fastclick.js，click的响应速度就提升。  <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></div><div class="line"><span class="javascript">        <span class="keyword">var</span> div = <span class="built_in">document</span>.querySelector(<span class="string">'div'</span>);</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="javascript">        <span class="keyword">var</span> startTime = <span class="number">0</span>;</span></div><div class="line"><span class="javascript">        <span class="keyword">var</span> isMove = <span class="literal">false</span>;</span></div><div class="line"><span class="javascript">        <span class="comment">/*绑定touch事件*/</span></span></div><div class="line"><span class="javascript">        div.addEventListener(<span class="string">'touchstart'</span>,<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></div><div class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">'touchstart'</span>);</span></div><div class="line"><span class="javascript">            <span class="comment">/*记录开始触摸的时候*/</span></span></div><div class="line"><span class="javascript">            startTime = <span class="built_in">Date</span>.now();</span></div><div class="line"><span class="undefined">        &#125;);</span></div><div class="line"><span class="javascript">        div.addEventListener(<span class="string">'touchmove'</span>,<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></div><div class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">'touchmove'</span>);</span></div><div class="line"><span class="javascript">            isMove = <span class="literal">true</span>;</span></div><div class="line"><span class="undefined">        &#125;);</span></div><div class="line"><span class="javascript">        div.addEventListener(<span class="string">'touchend'</span>,<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></div><div class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">'touchend'</span>);</span></div><div class="line"><span class="javascript">            <span class="comment">/*获取当前的事件去比较之前的时间  150ms*/</span></span></div><div class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="built_in">Date</span>.now()-startTime);</span></div><div class="line"><span class="javascript">            <span class="keyword">if</span>(!isMove &amp;&amp; (<span class="built_in">Date</span>.now()-startTime) &lt; <span class="number">150</span>)&#123;</span></div><div class="line"><span class="javascript">                <span class="comment">/*tap*/</span></span></div><div class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'tap事件'</span>)</span></div><div class="line"><span class="undefined">            &#125;</span></div><div class="line"><span class="undefined">        &#125;);</span></div><div class="line"><span class="javascript">        div.addEventListener(<span class="string">'click'</span>,<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></div><div class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">'click'</span>);</span></div><div class="line"><span class="undefined">        &#125;);</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="swipe事件"><a href="#swipe事件" class="headerlink" title="swipe事件"></a>swipe事件</h4><p>swipe滑动事件（手势事件），源生js不支持，是通过touch衍生过来的（封装得到）。<br>==swipe一定滑动过，滑动的距离50px==<br>在zepto这个库中可以直接使用。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></div><div class="line"><span class="javascript">        <span class="keyword">var</span> div = <span class="built_in">document</span>.querySelector(<span class="string">'div'</span>);</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="javascript">        <span class="keyword">var</span> isMove = <span class="literal">false</span>;</span></div><div class="line"><span class="javascript">        <span class="keyword">var</span> startY = <span class="number">0</span>;</span></div><div class="line"><span class="javascript">        <span class="keyword">var</span> distance = <span class="number">0</span>;</span></div><div class="line"><span class="javascript">        div.addEventListener(<span class="string">'touchstart'</span>,<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></div><div class="line"><span class="undefined">            startY = e.touches[0].clientY;</span></div><div class="line"><span class="undefined">        &#125;);</span></div><div class="line"><span class="javascript">        div.addEventListener(<span class="string">'touchmove'</span>,<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></div><div class="line"><span class="javascript">            isMove = <span class="literal">true</span>;</span></div><div class="line"><span class="javascript">            <span class="keyword">var</span> moveY = e.touches[<span class="number">0</span>].clientY;</span></div><div class="line"><span class="undefined">            distance = moveY - startY;</span></div><div class="line"><span class="undefined">        &#125;);</span></div><div class="line"><span class="javascript">        div.addEventListener(<span class="string">'touchend'</span>,<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></div><div class="line"><span class="javascript">            <span class="keyword">if</span>(isMove)&#123;</span></div><div class="line"><span class="javascript">                <span class="keyword">if</span>(<span class="built_in">Math</span>.abs(distance) &gt; <span class="number">50</span>)&#123;</span></div><div class="line"><span class="javascript">                    <span class="comment">/*滑动手势*/</span></span></div><div class="line"><span class="javascript">                    <span class="comment">/*上滑手势*/</span></span></div><div class="line"><span class="javascript">                    <span class="keyword">if</span>(distance &lt; <span class="number">0</span>)&#123;</span></div><div class="line"><span class="javascript">                        <span class="built_in">console</span>.log(<span class="string">'swipeUp'</span>);</span></div><div class="line"><span class="undefined">                    &#125;</span></div><div class="line"><span class="javascript">                    <span class="comment">/*下滑手势*/</span></span></div><div class="line"><span class="javascript">                    <span class="keyword">else</span> &#123;</span></div><div class="line"><span class="javascript">                        <span class="built_in">console</span>.log(<span class="string">'swipeDown'</span>);</span></div><div class="line"><span class="undefined">                    &#125;</span></div><div class="line"><span class="undefined">                &#125;</span></div><div class="line"><span class="undefined">            &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="javascript">            isMove = <span class="literal">false</span>;</span></div><div class="line"><span class="undefined">            startY = 0;</span></div><div class="line"><span class="undefined">            distance = 0;</span></div><div class="line"><span class="undefined">        &#125;);</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="插件-iscroll-js-区域滚动"><a href="#插件-iscroll-js-区域滚动" class="headerlink" title="插件 iscroll.js 区域滚动"></a>插件 iscroll.js 区域滚动</h4><p>初始化  </p>
<ol>
<li>结构一定是父容器装一个子容器。</li>
<li>如果是横向滚动，宽度一定大于父容器。纵向类似于横向，高度一定大于父容器。</li>
<li>默认的是初始纵向滚动。</li>
<li>通过参数去初始化。</li>
<li>在部分谷歌浏览器模拟器上失效，真机不会有问题。<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="keyword">var</span> rightScroll=<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></div><div class="line"><span class="javascript">        <span class="keyword">new</span> IScroll(<span class="string">".jd_cate_right"</span>,&#123;</span></div><div class="line"><span class="javascript">            scrollY:<span class="literal">true</span>;</span></div><div class="line"><span class="javascript">            <span class="comment">//注意一定到大于父容器的高度和宽度</span></span></div><div class="line"><span class="javascript">            scrollX:<span class="literal">true</span>;</span></div><div class="line"><span class="undefined">        &#125;)</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ol>
<ul>
<li>移动端网页的顶级对象仍然是window。viewport仅仅是模拟的东西，不是对象。</li>
<li>==给盒子设置overflow：hidden后，他会变为绝缘盒子，内容不会受浮动的影响。==<h4 id="全屏容器的设置方法"><a href="#全屏容器的设置方法" class="headerlink" title="全屏容器的设置方法"></a>全屏容器的设置方法</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">    //第一种方法</span></div><div class="line"><span class="undefined">    html,body&#123;</span></div><div class="line"><span class="undefined">        height:100%;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">    .container&#123;</span></div><div class="line"><span class="undefined">        width:100%;</span></div><div class="line"><span class="undefined">        height:100%;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">    //单纯给容器设置宽高百分百是无效的，因为html和body并没有撑开，所以需要给二者设置百分百高度。</span></div><div class="line"><span class="undefined">    //第二种方法</span></div><div class="line"><span class="undefined">    .container1&#123;</span></div><div class="line"><span class="undefined">        width:100%;</span></div><div class="line"><span class="undefined">        height:100%;</span></div><div class="line"><span class="xml">        <span class="comment">&lt;!--position:fixed;--&gt;</span></span></div><div class="line"><span class="undefined">        //absolute基于祖上有定位的容器，relative，absolute，fixed，只要不是static就行</span></div><div class="line"><span class="undefined">        //fixed直接基于window</span></div><div class="line"><span class="undefined">        position:absolute;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="响应式布局"><a href="#响应式布局" class="headerlink" title="响应式布局"></a>响应式布局</h1><p>原理：通过h5的属性媒体查询来确定当前设备的屏幕的大小来自动适配设备的布局方式。<br>==媒体查询的使用==  </p>
<ol>
<li>使用关键字@media</li>
<li>查询屏幕窗口的宽度</li>
<li>and接条件</li>
<li>写样式</li>
<li>满足条件，代码生效</li>
<li>默认查询的就是screen<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">    @media screen and (max-width: 768px)&#123;</span></div><div class="line"><span class="undefined">            /*4.写样式*/</span></div><div class="line"><span class="undefined">            .container&#123;</span></div><div class="line"><span class="undefined">                width: 100%;</span></div><div class="line"><span class="undefined">                background: pink;</span></div><div class="line"><span class="undefined">            &#125;</span></div><div class="line"><span class="undefined">            /*5.满足条件 代码生效*/</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ol>
<p>==基本模版==<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--h5文档申明--&gt;</span></div><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="comment">&lt;!--语言中文简体--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--设置字符编码--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--让IE浏览器用最新的渲染引擎去解析页面 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 视口   标准化设置 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1,user-scalable=0"</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;</span></div><div class="line">    <span class="comment">&lt;!--优先解析 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>template<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- Bootstrap css--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"../lib/bootstrap/css/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--</span></div><div class="line"><span class="comment">        html5shiv  IE8 支持语义化标签</span></div><div class="line"><span class="comment">        respond    IE8 支持媒体查询</span></div><div class="line"><span class="comment">    --&gt;</span></div><div class="line">    <span class="comment">&lt;!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries --&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 警告：你不能使用file://这个种形式打开网页   http:// --&gt;</span></div><div class="line">    <span class="comment">&lt;!-- WARNING: Respond.js doesn't work if you view the page via file:// --&gt;</span></div><div class="line">    <span class="comment">&lt;!--条件注释  在IE9以下  加载--&gt;</span></div><div class="line">    <span class="comment">&lt;!--[if lt IE 9]&gt;</span></div><div class="line"><span class="comment">    &lt;script src="../lib/html5shiv/html5shiv.min.js"&gt;&lt;/script&gt;</span></div><div class="line"><span class="comment">    &lt;script src="../lib/respond/respond.min.js"&gt;&lt;/script&gt;</span></div><div class="line"><span class="comment">    &lt;![endif]--&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="comment">&lt;!--TODO--&gt;</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 基于jquery --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../lib/jquery/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../lib/bootstrap/js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>==常见的屏幕比例==  </p>
<ol>
<li>在超小屏设备      0 -768px     容器 宽度百分百   </li>
<li>在小屏设备    768px-992px     容器 750px      </li>
<li>在中屏设备    992px-1200px    容器 970px       </li>
<li>在大屏设备    1200px-         容器 1170px <h2 id="栅格系统"><a href="#栅格系统" class="headerlink" title="栅格系统"></a>栅格系统</h2>Bootstrap提供了一套响应式、移动设备有限的流式栅格系统，随着屏幕或视口尺寸的增加，系统会自动分为最多12列。它包含了易于使用的预定义类，还有强大的mixin用于生成更具语义的布局。<br>定义：栅格系统用于通过一系列的行（row）与列（column）的组合来创建页面布局。  </li>
</ol>
<ul>
<li>“行（row）”必须包含在 .container （固定宽度）或 .container-fluid （100% 宽度）中，以便为其赋予合适的排列（aligment）和内补（padding）。</li>
<li>通过“行（row）”在水平方向创建一组“列（column）”。</li>
<li>你的内容应当放置于“列（column）”内，并且，只有“列（column）”可以作为行（row）”的直接子元素。</li>
<li>类似 .row 和 .col-xs-4 这种预定义的类，可以用来快速创建栅格布局。Bootstrap 源码中定义的 mixin 也可以用来创建语义化的布局。</li>
<li>通过为“列（column）”设置 padding 属性，从而创建列与列之间的间隔（gutter）。通过为 .row 元素设置负值 margin 从而抵消掉为 .container 元素设置的 padding，也就间接为“行（row）”所包含的“列（column）”抵消掉了padding。</li>
<li>负值的 margin就是下面的示例为什么是向外突出的原因。在栅格列中的内容排成一行。</li>
<li>栅格系统中的列是通过指定1到12的值来表示其跨越的范围。例如，三个等宽的列可以使用三个 .col-xs-4 来创建。</li>
<li>如果一“行（row）”中包含了的“列（column）”大于 12，多余的“列（column）”所在的元素将被作为一个整体另起一行排列。</li>
<li>栅格类适用于与屏幕宽度大于或等于分界点大小的设备 ， 并且针对小屏幕设备覆盖栅格类。 因此，在元素上应用任何 .col-md-<em> 栅格类适用于与屏幕宽度大于或等于分界点大小的设备 ， 并且针对小屏幕设备覆盖栅格类。 因此，在元素上应用任何 .col-lg-</em> 不存在， 也影响大屏幕设备。<h3 id="container"><a href="#container" class="headerlink" title="container"></a>container</h3>==布局容器==<br>响应式布局容器 <div class="container"><div><br>流式布局容器 <div class="container-fluid"><div>  <h4 id="响应式布局容器"><a href="#响应式布局容器" class="headerlink" title="响应式布局容器"></a>响应式布局容器</h4>有一个高度100px的块级元素平均三等份<br>container:15px 两边的边距<br>row：可以清除父容器的15px的两边的边距，当然使用左右margin也可以，如（margin-left:-15px,margin-right:-15px;)<br>colmd-4:在中等屏幕以上（包含自己）当前元素占4份默认把一行分成12份。<br>==col-==  ==第一个参数：在什么屏幕下生效==  </div></div></div></div></li>
</ul>
<table>
<thead>
<tr>
<th>屏幕</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>lg:大屏设备</td>
<td>在大屏幕以上（包含自己）</td>
</tr>
<tr>
<td>ma:中等屏幕</td>
<td>在中等屏幕以上（包含自己）</td>
</tr>
<tr>
<td>sm:小屏设备</td>
<td>在小屏幕以上（包括自己）</td>
</tr>
<tr>
<td>xs:超小屏设备</td>
<td>r在超小屏幕以上（包括自己）</td>
</tr>
</tbody>
</table>
<p>第二个参数：默认把一行分成12份，取值范围1-12.这个数值可以改，把一行分成其他各种份数。<br>==列偏移== offset 往右偏移<br>==列排序== pull 往前拉几份，push往后推几份。<br>==hidden只对某个屏幕的隐藏，其他的就是显示（推荐）==<br>==visible只对某个屏幕的显示，其他的就是隐藏，（3.2.0 不推荐）==<br>浮动：pull-left，pull-right；<br>间对齐：text-left，text-right，text-center。</p>
<h3 id="导航条"><a href="#导航条" class="headerlink" title="导航条"></a>导航条</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1,user-scalable=0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>template<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"../lib/bootstrap/css/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--[if lt IE 9]&gt;</span></div><div class="line"><span class="comment">    &lt;script src="../lib/html5shiv/html5shiv.min.js"&gt;&lt;/script&gt;</span></div><div class="line"><span class="comment">    &lt;script src="../lib/respond/respond.min.js"&gt;&lt;/script&gt;</span></div><div class="line"><span class="comment">    &lt;![endif]--&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="comment">&lt;!--</span></div><div class="line"><span class="comment">navbar 指定是一个导航栏</span></div><div class="line"><span class="comment">navbar-default 默认样式的导航栏</span></div><div class="line"><span class="comment">模块</span></div><div class="line"><span class="comment">--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"navbar navbar-default"</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--响应式容器--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 商标区域 和 切换按钮  这个组合  在移动端显示比较好（完全显示） --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-header"</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!--切换按钮--&gt;</span></div><div class="line">            <span class="comment">&lt;!--</span></div><div class="line"><span class="comment">            自定义属性</span></div><div class="line"><span class="comment">            data-toggle="collapse" 在初始化的时候  初始化成折叠js插件</span></div><div class="line"><span class="comment">            data-target="#bs-example-navbar-collapse-1" 折叠的目标元素</span></div><div class="line"><span class="comment">            盲人阅读器属性  aria-*</span></div><div class="line"><span class="comment">            aria-expanded="false"</span></div><div class="line"><span class="comment">            sr-only  screen read only 仅提供屏幕阅读器使用</span></div><div class="line"><span class="comment">            --&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"navbar-toggle collapsed"</span> <span class="attr">data-toggle</span>=<span class="string">"collapse"</span> <span class="attr">data-target</span>=<span class="string">"#bs-example-navbar-collapse-1"</span> &gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!--商标区域--&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-brand"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Brand<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 导航链接 表单 都是被控制切换的内容 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"collapse navbar-collapse"</span> <span class="attr">id</span>=<span class="string">"bs-example-navbar-collapse-1"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav navbar-nav"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav navbar-nav navbar-right"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../lib/jquery/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../lib/bootstrap/js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<ol>
<li>data-toggle=”collapse”  指定js插件</li>
<li>data-target=”div” 控制目标元素</li>
<li>选择器如果是a 控制目标元素  href<h4 id="轮播图容器"><a href="#轮播图容器" class="headerlink" title="轮播图容器"></a>轮播图容器</h4>模块 carousel<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">    class="carousel slide"</span></div><div class="line"><span class="undefined">    slide:加动画效果</span></div><div class="line"><span class="undefined">    data-ride="carousel":初始轮播图组件</span></div><div class="line"><span class="undefined">    date-slide="prev"</span></div><div class="line"><span class="undefined">    data-slide="next"</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ol>
<p>适配小中大屏幕的轮播图<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1,user-scalable=0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>template<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"../lib/bootstrap/css/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--[if lt IE 9]&gt;</span></div><div class="line"><span class="comment">    &lt;script src="../lib/html5shiv/html5shiv.min.js"&gt;&lt;/script&gt;</span></div><div class="line"><span class="comment">    &lt;script src="../lib/respond/respond.min.js"&gt;&lt;/script&gt;</span></div><div class="line"><span class="comment">    &lt;![endif]--&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"carousel-example-generic"</span> <span class="attr">class</span>=<span class="string">"carousel slide"</span> <span class="attr">data-ride</span>=<span class="string">"carousel"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">"carousel-indicators"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">"#carousel-example-generic"</span> <span class="attr">data-slide-to</span>=<span class="string">"0"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">"#carousel-example-generic"</span> <span class="attr">data-slide-to</span>=<span class="string">"1"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">"#carousel-example-generic"</span> <span class="attr">data-slide-to</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">"#carousel-example-generic"</span> <span class="attr">data-slide-to</span>=<span class="string">"3"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--准备一个高度固定的容器宽度百分百  背景居中平铺 完全铺满--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">        .pc_imgBox&#123;</span></div><div class="line"><span class="undefined">            display: block;</span></div><div class="line"><span class="undefined">            width: 100%;</span></div><div class="line"><span class="undefined">            height: 410px;</span></div><div class="line"><span class="undefined">            background: url("../images/slide_01_2000x410.jpg") no-repeat center/cover;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"carousel-inner"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item active"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"pc_imgBox"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"pc_imgBox"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"pc_imgBox"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"pc_imgBox"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"left carousel-control"</span> <span class="attr">href</span>=<span class="string">"#carousel-example-generic"</span> <span class="attr">data-slide</span>=<span class="string">"prev"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-chevron-left"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"right carousel-control"</span> <span class="attr">href</span>=<span class="string">"#carousel-example-generic"</span> <span class="attr">data-slide</span>=<span class="string">"next"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-chevron-right"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../lib/jquery/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../lib/bootstrap/js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>适配超小屏幕<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1,user-scalable=0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>template<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"../lib/bootstrap/css/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--[if lt IE 9]&gt;</span></div><div class="line"><span class="comment">    &lt;script src="../lib/html5shiv/html5shiv.min.js"&gt;&lt;/script&gt;</span></div><div class="line"><span class="comment">    &lt;script src="../lib/respond/respond.min.js"&gt;&lt;/script&gt;</span></div><div class="line"><span class="comment">    &lt;![endif]--&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"carousel-example-generic"</span> <span class="attr">class</span>=<span class="string">"carousel slide"</span> <span class="attr">data-ride</span>=<span class="string">"carousel"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">"carousel-indicators"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">"#carousel-example-generic"</span> <span class="attr">data-slide-to</span>=<span class="string">"0"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">"#carousel-example-generic"</span> <span class="attr">data-slide-to</span>=<span class="string">"1"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">"#carousel-example-generic"</span> <span class="attr">data-slide-to</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">"#carousel-example-generic"</span> <span class="attr">data-slide-to</span>=<span class="string">"3"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 设置图片宽度百分百  自适应的了 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">        .m_imgBox&#123;</span></div><div class="line"><span class="undefined">            display: block;</span></div><div class="line"><span class="undefined">            width: 100%;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">        .m_imgBox img&#123;</span></div><div class="line"><span class="undefined">            display: block;</span></div><div class="line"><span class="undefined">            width: 100%;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"carousel-inner"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item active"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"m_imgBox"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../images/slide_01_640x340.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"m_imgBox"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../images/slide_02_640x340.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"m_imgBox"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../images/slide_03_640x340.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"m_imgBox"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../images/slide_04_640x340.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"left carousel-control"</span> <span class="attr">href</span>=<span class="string">"#carousel-example-generic"</span> <span class="attr">data-slide</span>=<span class="string">"prev"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-chevron-left"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"right carousel-control"</span> <span class="attr">href</span>=<span class="string">"#carousel-example-generic"</span> <span class="attr">data-slide</span>=<span class="string">"next"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-chevron-right"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../lib/jquery/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../lib/bootstrap/js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>静态的响应式轮播图<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1,user-scalable=0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>template<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"../lib/bootstrap/css/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--[if lt IE 9]&gt;</span></div><div class="line"><span class="comment">    &lt;script src="../lib/html5shiv/html5shiv.min.js"&gt;&lt;/script&gt;</span></div><div class="line"><span class="comment">    &lt;script src="../lib/respond/respond.min.js"&gt;&lt;/script&gt;</span></div><div class="line"><span class="comment">    &lt;![endif]--&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"carousel-example-generic"</span> <span class="attr">class</span>=<span class="string">"carousel slide"</span> <span class="attr">data-ride</span>=<span class="string">"carousel"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">"carousel-indicators"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">"#carousel-example-generic"</span> <span class="attr">data-slide-to</span>=<span class="string">"0"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">"#carousel-example-generic"</span> <span class="attr">data-slide-to</span>=<span class="string">"1"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">"#carousel-example-generic"</span> <span class="attr">data-slide-to</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">"#carousel-example-generic"</span> <span class="attr">data-slide-to</span>=<span class="string">"3"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--准备一个高度固定的容器宽度百分百  背景居中平铺 完全铺满--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">        .pc_imgBox&#123;</span></div><div class="line"><span class="undefined">            display: block;</span></div><div class="line"><span class="undefined">            width: 100%;</span></div><div class="line"><span class="undefined">            height: 410px;</span></div><div class="line"><span class="undefined">            background: url("../images/slide_01_2000x410.jpg") no-repeat center/cover;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">        .m_imgBox&#123;</span></div><div class="line"><span class="undefined">            display: block;</span></div><div class="line"><span class="undefined">            width: 100%;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">        .m_imgBox img&#123;</span></div><div class="line"><span class="undefined">            display: block;</span></div><div class="line"><span class="undefined">            width: 100%;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">        /*使用nth-child  不利于维护*/</span></div><div class="line"><span class="undefined">        /*.item:nth-child(1) .pc_imgBox&#123;</span></div><div class="line"><span class="undefined">            background-image: url("../images/slide_01_2000x410.jpg");</span></div><div class="line"><span class="undefined">        &#125;*/</span></div><div class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"carousel-inner"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item active"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"pc_imgBox hidden-xs"</span> <span class="attr">style</span>=<span class="string">"background-image: url(../images/slide_01_2000x410.jpg)"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"m_imgBox hidden-sm hidden-md hidden-lg"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../images/slide_01_640x340.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"pc_imgBox hidden-xs"</span> <span class="attr">style</span>=<span class="string">"background-image: url(../images/slide_02_2000x410.jpg)"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"m_imgBox hidden-sm hidden-md hidden-lg"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../images/slide_02_640x340.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"pc_imgBox hidden-xs"</span> <span class="attr">style</span>=<span class="string">"background-image: url(../images/slide_03_2000x410.jpg)"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"m_imgBox hidden-sm hidden-md hidden-lg"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../images/slide_03_640x340.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"pc_imgBox hidden-xs"</span> <span class="attr">style</span>=<span class="string">"background-image: url(../images/slide_04_2000x410.jpg)"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"m_imgBox hidden-sm hidden-md hidden-lg"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../images/slide_04_640x340.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"left carousel-control"</span> <span class="attr">href</span>=<span class="string">"#carousel-example-generic"</span> <span class="attr">data-slide</span>=<span class="string">"prev"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-chevron-left"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"right carousel-control"</span> <span class="attr">href</span>=<span class="string">"#carousel-example-generic"</span> <span class="attr">data-slide</span>=<span class="string">"next"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-chevron-right"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../lib/jquery/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../lib/bootstrap/js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="轮播图设置思路"><a href="#轮播图设置思路" class="headerlink" title="轮播图设置思路"></a>轮播图设置思路</h4><ol>
<li>准备数据，图片地址数据（用于动态加载图片或者是背景图）。大小中屏幕用背景图，超小屏使用图片。  </li>
<li>通过jQuery或者DOM方法获取当前设备的屏幕窗口的宽度，小于768px则是移动端。  </li>
<li>根据设备和数据，生成html格式的代码。  </li>
<li>通过拼接字符串的方式把html格式的代码，追加到对应的容器，进行渲染。 </li>
<li>为了去测试，当页面尺寸发生改变的时候，重新渲染页面。</li>
<li>移动端，手势切换，调用IScroll插件来实现上一张和下一张滑动切换的效果。<br>==jQuery中用originalEvent记录原生的js事件对象==<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">     $(<span class="string">'.wjs_banner'</span>).on(<span class="string">'touchstart'</span>,<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></div><div class="line"><span class="javascript">        <span class="comment">/*注意：jquery  originalEvent 记录 原生js事件对象 */</span></span></div><div class="line"><span class="undefined">        startX = e.originalEvent.touches[0].clientX;</span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ol>
<p>==jQuery获取宽度的方法==</p>
<table>
<thead>
<tr>
<th>代码</th>
<th>意义</th>
<th>内容</th>
</tr>
</thead>
<tbody>
<tr>
<td>width()</td>
<td>获取宽度</td>
<td>内容</td>
</tr>
<tr>
<td>innerWidth()</td>
<td>获取宽度</td>
<td>内容+内边距</td>
</tr>
<tr>
<td>outerWidth()</td>
<td>获取宽度</td>
<td>内容+内边距+边框</td>
</tr>
<tr>
<td>outerWidth(true)</td>
<td>获取宽度</td>
<td>内容+内边距+边框+外边距</td>
</tr>
</tbody>
</table>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="comment">//第一种方法</span></span></div><div class="line"><span class="javascript">    $.each(data,<span class="function"><span class="keyword">function</span> (<span class="params">i,item</span>)</span>&#123;&#125;);</span></div><div class="line"><span class="javascript">    <span class="comment">//第二种方法</span></span></div><div class="line"><span class="javascript">    $(<span class="string">"a"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i,item</span>)</span>&#123;&#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<p>==第二种方法是jQuery对象的方法，上面的是工具箱。第二种方法只能是jQuery元素集才能使用，第一种方法的方法数组对象都可以使用。==</p>
<h4 id="补充的选择器方法"><a href="#补充的选择器方法" class="headerlink" title="补充的选择器方法"></a>补充的选择器方法</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">    p:first-of-type</span></div><div class="line"><span class="undefined">    p:last-of-type</span></div><div class="line"><span class="undefined">    p:nth-of-type()</span></div><div class="line"><span class="undefined">    p:nth-last-of-type()</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
<p>type是选择性的控制类型。</p>
<h2 id="less的应用"><a href="#less的应用" class="headerlink" title="less的应用"></a>less的应用</h2><p>由于css需要书写大量看似没有逻辑的代码，不方便维护以及扩展，不利于复用，难以维护。所以，less在css的语法基础之上，引入了变量，Mixin(混入)，运算以及函数等功能，大大简化了css的编写，并且降低了css的维护成本。做到了write less，do more。  </p>
<ol>
<li>原理：本质上，LESS包含一套自定义的语法以及一个解析器(webstorm可以自动解析),用户根据这些语法定义自己的样式规则，这些规则最终会通过解析器，编译生成对应的css文件。</li>
<li>说明：LESS并没有裁剪CSS原有的特性，更不是用来取代CSS的，而是在现有的CSS语法的基础上，为CSS加入程序式语言的特性。</li>
<li>语法：</li>
</ol>
<ul>
<li>Mixin  混入</li>
<li>嵌套</li>
<li>Import 引入</li>
<li>函数（内置函数，运算）</li>
</ul>
<ol>
<li>变量：LESS允许开发者自定义变量，变量可以在全局样式中使用，变量使得样式修改起来更加简单。</li>
<li>Mixin(混入)功能是多重继承的一种实现，在LESS中，混入是指在一个CLASS中引入另外一个已经定义的CLASS，就像在当前CLASS中增加一个属性一样。</li>
<li>嵌套：在书写标准CSS的时候，遇到多层的元素嵌套这种情况时，我们要么采用从外到内的选择器嵌套定义，要么采用给特定元素加CLASS或ID的方式。</li>
<li><p>Import(引入)</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">@import</span> <span class="string">"base"</span>;</div><div class="line"><span class="selector-class">.f_left</span>&#123;</div><div class="line">    <span class="attribute">float</span>:<span class="variable">@right</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>运算以及函数：</p>
</li>
</ol>
<table>
<thead>
<tr>
<th>函数</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>escape(@string);</td>
<td>通过 URL-encoding 编码字符串</td>
</tr>
<tr>
<td>e(@string);</td>
<td>对字符串转义</td>
</tr>
<tr>
<td>%(@string, values…);</td>
<td>格式化字符串</td>
</tr>
<tr>
<td>unit(@dimension, [@unit: “”]);</td>
<td>移除或替换属性值的单位</td>
</tr>
<tr>
<td>color(@string);</td>
<td>将字符串解析为颜色值</td>
</tr>
<tr>
<td>data-uri([mimetype,] url);</td>
<td>* 将资源内嵌到css中，可能回退到url()</td>
</tr>
<tr>
<td>ceil(@number);</td>
<td>向上取整</td>
</tr>
<tr>
<td>floor(@number);</td>
<td>向下取整</td>
</tr>
<tr>
<td>percentage(@number);</td>
<td>将数字转换为百分比，例如 0.5 -&gt; 50%</td>
</tr>
<tr>
<td>round(number, [places: 0]);</td>
<td>四舍五入取整</td>
</tr>
<tr>
<td>sqrt(number);</td>
<td>* 计算数字的平方根</td>
</tr>
<tr>
<td>abs(number);</td>
<td>* 数字的绝对值</td>
</tr>
<tr>
<td>sin(number);</td>
<td>* sin函数</td>
</tr>
<tr>
<td>asin(number);</td>
<td>* arcsin函数</td>
</tr>
<tr>
<td>cos(number);</td>
<td>* cos函数</td>
</tr>
<tr>
<td>acos(number);</td>
<td>* arccos函数</td>
</tr>
<tr>
<td>tan(number);</td>
<td>* tan函数</td>
</tr>
<tr>
<td>atan(number);</td>
<td>* arctan函数</td>
</tr>
<tr>
<td>pi();</td>
<td>* 返回PI</td>
</tr>
<tr>
<td>pow(@base, @exponent);</td>
<td>* 返回@base的@exponent次方</td>
</tr>
<tr>
<td>mod(number, number);</td>
<td>* 第一个参数对第二个参数取余</td>
</tr>
<tr>
<td>convert(number, units);</td>
<td>* 在数字之间转换</td>
</tr>
<tr>
<td>unit(number, units);</td>
<td>* 不转换的情况下替换数字的单位</td>
</tr>
<tr>
<td>color(string);</td>
<td>将字符串或者转义后的值转换成颜色</td>
</tr>
<tr>
<td>rgb(@r, @g, @b);</td>
<td>转换为颜色值</td>
</tr>
<tr>
<td>rgba(@r, @g, @b, @a);</td>
<td>转换为颜色值</td>
</tr>
<tr>
<td>argb(@color);</td>
<td>创建 #AARRGGBB 格式的颜色值</td>
</tr>
<tr>
<td>hsl(@hue, @saturation, @lightness);</td>
<td>创建颜色值</td>
</tr>
<tr>
<td>hsla(@hue, @saturation, @lightness, @alpha);</td>
<td>创建颜色值</td>
</tr>
<tr>
<td>hsv(@hue, @saturation, @value);</td>
<td>创建颜色值</td>
</tr>
<tr>
<td>hsva(@hue, @saturation, @value, @alpha);</td>
<td>创建颜色值</td>
</tr>
<tr>
<td>hue(@color);</td>
<td>从颜色值中提取 hue 值（色相）</td>
</tr>
<tr>
<td>saturation(@color);</td>
<td>从颜色值中提取 saturation 值（饱和度）</td>
</tr>
<tr>
<td>lightness(@color);</td>
<td>从颜色值中提取 ‘lightness’ 值（亮度）</td>
</tr>
<tr>
<td>hsvhue(@color);</td>
<td>* 从颜色中提取 hue 值，以HSV色彩空间表示（色相）</td>
</tr>
<tr>
<td>hsvsaturation(@color);</td>
<td>* 从颜色中提取 saturation 值，以HSV色彩空间表示（饱和度）</td>
</tr>
<tr>
<td>hsvvalue(@color);</td>
<td>* 从颜色中提取 value 值，以HSV色彩空间表示（色调）</td>
</tr>
<tr>
<td>red(@color);</td>
<td>从颜色值中提取 ‘red’ 值（红色）</td>
</tr>
<tr>
<td>green(@color);</td>
<td>从颜色值中提取 ‘green’ 值（绿色）</td>
</tr>
<tr>
<td>blue(@color);</td>
<td>从颜色值中提取 ‘blue’ 值（蓝色）</td>
</tr>
<tr>
<td>alpha(@color);</td>
<td>从颜色值中提取 ‘alpha’ 值（透明度）</td>
</tr>
<tr>
<td>luma(@color);</td>
<td>从颜色值中提取 ‘luma’ 值（亮度的百分比表示法）</td>
</tr>
<tr>
<td>saturate(@color, 10%);</td>
<td>饱和度增加 10%</td>
</tr>
<tr>
<td>desaturate(@color, 10%);</td>
<td>饱和度降低 10%</td>
</tr>
<tr>
<td>lighten(@color, 10%);</td>
<td>亮度增加 10%</td>
</tr>
<tr>
<td>darken(@color, 10%);</td>
<td>亮度降低 10%</td>
</tr>
<tr>
<td>fadein(@color, 10%);</td>
<td>透明度增加 10%</td>
</tr>
<tr>
<td>fadeout(@color, 10%);</td>
<td>透明度降低 10%</td>
</tr>
<tr>
<td>fade(@color, 50%);</td>
<td>设定透明度为 50%</td>
</tr>
<tr>
<td>spin(@color, 10);</td>
<td>色相值增加 10</td>
</tr>
<tr>
<td>mix(@color1, @color2, [@weight: 50%]);</td>
<td>混合两种颜色</td>
</tr>
<tr>
<td>greyscale(@color);</td>
<td>完全移除饱和度，输出灰色</td>
</tr>
<tr>
<td>contrast(@color1, [@darkcolor: black], [@lightcolor: white], [@threshold: 43%]);</td>
<td>如果 @color1 的 luma 值 &gt; 43% 输出 @darkcolor，否则输出 @lightcolor</td>
</tr>
</tbody>
</table>
<ul>
<li>multiply(@color1, @color2);</li>
<li>screen(@color1, @color2);</li>
<li>overlay(@color1, @color2);</li>
<li>softlight(@color1, @color2);</li>
<li>hardlight(@color1, @color2);</li>
<li>difference(@color1, @color2);</li>
<li>exclusion(@color1, @color2);</li>
<li>average(@color1, @color2);</li>
<li>negation(@color1, @color2);</li>
</ul>
<table>
<thead>
<tr>
<th>函数</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>iscolor(@colorOrAnything);</td>
<td>判断一个值是否是颜色</td>
</tr>
<tr>
<td>isnumber(@numberOrAnything);</td>
<td>判断一个值是否是数字（可含单位）</td>
</tr>
<tr>
<td>isstring(@stringOrAnything);</td>
<td>判断一个值是否是字符串</td>
</tr>
<tr>
<td>iskeyword(@keywordOrAnything);</td>
<td>判断一个值是否是关键字</td>
</tr>
<tr>
<td>isurl(@urlOrAnything);</td>
<td>判断一个值是否是url</td>
</tr>
<tr>
<td>ispixel(@pixelOrAnything);</td>
<td>判断一个值是否是以px为单位的数值</td>
</tr>
<tr>
<td>ispercentage(@percentageOrAnything);</td>
<td>判断一个值是否是百分数</td>
</tr>
<tr>
<td>isem(@emOrAnything);</td>
<td>判断一个值是否是以em为单位的数值</td>
</tr>
<tr>
<td>isunit(@numberOrAnything, “rem”);</td>
<td>* 判断一个值是否是指定单位的数值</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;流式布局&quot;&gt;&lt;a href=&quot;#流式布局&quot; class=&quot;headerlink&quot; title=&quot;流式布局&quot;&gt;&lt;/a&gt;流式布局&lt;/h3&gt;&lt;p&gt;其实，流式布局就是百分百布局，通过把盒子的宽度设置成百分比来根据屏幕的宽度来进行伸缩，不受固定像素的限制，内容向两侧填充。这
    
    </summary>
    
      <category term="移动端开发" scheme="http://yoursite.com/categories/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="移动web" scheme="http://yoursite.com/tags/%E7%A7%BB%E5%8A%A8web/"/>
    
  </entry>
  
  <entry>
    <title>关于闭包的一些理解</title>
    <link href="http://yoursite.com/2016/06/09/%E9%97%AD%E5%8C%85%E7%AE%80%E5%8D%95%E7%90%86%E8%A7%A3/"/>
    <id>http://yoursite.com/2016/06/09/闭包简单理解/</id>
    <published>2016-06-09T05:34:50.000Z</published>
    <updated>2017-09-08T03:07:07.183Z</updated>
    
    <content type="html"><![CDATA[<p>这个只是我个人学习的一些总结，如有不足欢迎补充。</p>
<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>  闭包，是Javascript比较重要的一个概念。闭包是一个特别抽象的概念，特别是ECMAScript给的概念，所以我们来分析一下闭包的概念。</p>
<h3 id="从最基本开始"><a href="#从最基本开始" class="headerlink" title="从最基本开始"></a>从最基本开始</h3><p>直接上代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">A</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  <span class="function"><span class="keyword">function</span> <span class="title">B</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'Json'</span>);</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> B;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> C=A();</div><div class="line">C();</div><div class="line"><span class="comment">//输出Json</span></div></pre></td></tr></table></figure></p>
<p>这个是最简单的闭包类型。我们简单地分析一下它和普通函数有什么不同，上面代码翻译成一下就是</p>
<ol>
<li>定义普通函数A</li>
<li>在A中定义普通函数B</li>
<li>在A中返回B</li>
<li>执行A,并把A的返回结果赋值给变量C</li>
<li><p>执行C</p>
<p>把这五步操作总结成一句话就是：函数A的内内部函数B被函数A为的一个变量C引用。把这一句话加工一下就变成了闭包的定义：<br><em>当一个内部函数被外部函数之外的变量引用时，就形成了一个闭包！</em></p>
</li>
</ol>
<h3 id="闭包的基本机制"><a href="#闭包的基本机制" class="headerlink" title="闭包的基本机制"></a>闭包的基本机制</h3><p> 首先，我们先了解一下Javascript中的GC机制：<br>  在Javascript中，如果一个对象不再被引用，那么这个对象就会被GC回收，否则这个对象一直会保存在内存中。<br>在上述例子中，B定义在A中，因此B依赖于A，而外部变量C又引用了B，所以A间接地被C引用。<br>也就是说，A不会被GC回收，会一直保存在内存中。例如<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">A</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> count=<span class="number">0</span>;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">B</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    count++;</div><div class="line">    <span class="built_in">console</span>.log(count);</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> B;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> C=A();</div><div class="line">C();<span class="comment">//1</span></div><div class="line">C();<span class="comment">//2</span></div><div class="line">C();<span class="comment">//3</span></div></pre></td></tr></table></figure></p>
<p>count是函数A中的一个变量，它的值在函数B被改变，函数B每执行一次，count的值就在原来的基础上累加1.因此，函数A中的count变量会一直保存在内存中。<br>当我们需要在模块中定义一些变量，并希望这些变量一直保存在内存中但是又不会“污染”全局的变量时，就可以用闭包来定义这个模块。</p>
<h3 id="闭包的高级写法"><a href="#闭包的高级写法" class="headerlink" title="闭包的高级写法"></a>闭包的高级写法</h3><p>上面的写法其实是最原始的写法，而在实际应用中，会将闭包和匿名函数联系在一起使用，例如：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">document</span>)</span>&#123;</div><div class="line">  <span class="keyword">var</span> viewport;</div><div class="line">  <span class="keyword">var</span> obj=&#123;</div><div class="line">    init:<span class="function"><span class="keyword">function</span>(<span class="params">id</span>)</span>&#123;</div><div class="line">      viewport=<span class="built_in">document</span>.querySelector(<span class="string">"#"</span>+id);</div><div class="line">    &#125;,</div><div class="line">    addChild:<span class="function"><span class="keyword">function</span>(<span class="params">child</span>)</span>&#123;</div><div class="line">      viewport.appendChild(child);</div><div class="line">    &#125;,</div><div class="line">    removeChild:<span class="function"><span class="keyword">function</span>(<span class="params">child</span>)</span>&#123;</div><div class="line">      viewport.removeChild(child);</div><div class="line">    &#125; </div><div class="line">  &#125;</div><div class="line">  <span class="built_in">window</span>.jView=obj;</div><div class="line">&#125;(<span class="built_in">document</span>));</div></pre></td></tr></table></figure></p>
<p>这个组件的作用是：初始化一个容器，然后可以给这个子容器添加子容器，也可以移除一个容器。功能很简单，但这里涉及到了另一个概念：<br><em>立即执行函数</em><br>可以将上面的代码拆分成两部分：(function(){})和(),第一个()是一个表达式，而这个表达式本身是一个匿名函数，所以在这个表达式后面加()就表示执行这个匿名函数。因此这段代码执行这个匿名函数：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> f=<span class="function"><span class="keyword">function</span>(<span class="params">document</span>)</span>&#123;</div><div class="line">  <span class="keyword">var</span> viewport;</div><div class="line">  <span class="keyword">var</span> obj=&#123;</div><div class="line">    init:<span class="function"><span class="keyword">function</span>(<span class="params">id</span>)</span>&#123;</div><div class="line">      viewport=<span class="built_in">document</span>.querySelector(<span class="string">"#"</span>+id);</div><div class="line">    &#125;,</div><div class="line">    addChild:<span class="function"><span class="keyword">function</span>(<span class="params">child</span>)</span>&#123;</div><div class="line">      viewport.appendChild(child);</div><div class="line">    &#125;,</div><div class="line">    removeChild:<span class="function"><span class="keyword">function</span>(<span class="params">child</span>)</span>&#123;</div><div class="line">      viewport.removeChild(child);</div><div class="line">    &#125; </div><div class="line">  &#125;</div><div class="line">  <span class="built_in">window</span>.jView=obj;</div><div class="line">&#125;;</div><div class="line">f(<span class="built_in">document</span>);</div></pre></td></tr></table></figure>
<p>在这段代码中似乎看到了闭包的影子，但是f中没有返回值值，似乎不具备闭包的条件，但是注意这句代码：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.jView=obj;</div></pre></td></tr></table></figure></p>
<p>obj是在函数f中定义的一个对象，这个对象中定义了一系列方法，执行window.jView=obj就是在window全局对象定义了一个变量jView，并将这个变量指向obj对象，即全局变量jView引用了obj，而obj对象那个中的函数又引用了函数f中的变量viewport,因此函数f中的viewport不会被GC回收，viewport会一直保存到内存中，所以这种写法满足了闭包的条件。</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>闭包就是能够读取其他函数内部变量的函数。<br>由于在Javascript中，只有函数内部的子函数才能读取局部变量，因此可以把闭包简单理解为<em>定义在一个函数内部的函数</em>。<br>所以，在本质上，闭包就是将函数内部和函数外部连接起来的一座桥梁。</p>
<ul>
<li>如果一个函数内部返回了一个函数或多个函数，而返回的函数中具有对自己的外层作用域中的成员的读取或修改，那么称这个函数叫做闭包函数。</li>
<li>为什么在外部拿到该函数就可以访问内层函数的成员？原因就在于函数的作用域链以函数定义时侯的位置为标准。<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> getFoo = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> foo;</div><div class="line">      &#125;</div><div class="line"><span class="keyword">var</span> setFoo = <span class="function"><span class="keyword">function</span> (<span class="params">val</span>) </span>&#123;</div><div class="line">        foo = val;</div><div class="line">      &#125;</div><div class="line">      <span class="keyword">return</span> &#123;</div><div class="line">        getFoo: getFoo,</div><div class="line">        setFoo: setFoo</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line"><span class="keyword">var</span> obj = fn();</div><div class="line">  <span class="built_in">console</span>.log(obj.getFoo())</div></pre></td></tr></table></figure>
</li>
</ul>
<p>注意：定时器永远会放到普通代码最后才执行，哪怕定时为0.但是for循环的时候不会等待定时器的执行，直接就进行下一次循环了。</p>
<h3 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h3><h4 id="沙箱模式"><a href="#沙箱模式" class="headerlink" title="沙箱模式"></a>沙箱模式</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">;(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">      <span class="comment">// 利用匿名函数自执行保护内部成员不被外部修改或访问</span></div><div class="line">      <span class="keyword">var</span> age = <span class="number">3</span>;</div><div class="line">      </div><div class="line">      <span class="function"><span class="keyword">function</span> <span class="title">F</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">      F.prototype.getAge = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> age;</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      F.prototype.setAge = <span class="function"><span class="keyword">function</span> (<span class="params">val</span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span> (val &lt; <span class="number">18</span>) &#123;</div><div class="line">          <span class="keyword">return</span> <span class="built_in">console</span>.error(<span class="string">'age 不能小于18岁'</span>);</div><div class="line">        &#125;</div><div class="line">        age = val;</div><div class="line">      &#125;</div><div class="line">      <span class="built_in">window</span>.F = F;</div><div class="line">    &#125;)()</div><div class="line"></div><div class="line">    <span class="keyword">var</span> f = <span class="keyword">new</span> F();</div><div class="line">    <span class="built_in">console</span>.log(f.getAge());</div></pre></td></tr></table></figure>
<p>上述例子全程封装在一个函数中，外界看不到发生的机制，就像沙盒一样。计算机纵的沙盒用于为了一些来源不可信，具有破华丽或无法判定程序意图的程序提供实验环境。然而，沙盒中的所有改动对操作系统都不会造成任何损失。这个再反病毒领域应用较多。有时候沙盒也叫沙箱，Sandbox。</p>
<h4 id="闭包思考题"><a href="#闭包思考题" class="headerlink" title="闭包思考题"></a>闭包思考题</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//第一题</span></div><div class="line"><span class="keyword">var</span> name=<span class="string">"The Window"</span>；</div><div class="line"><span class="keyword">var</span> object=&#123;</div><div class="line">  name:<span class="string">"My Object"</span>,</div><div class="line">  getNameFunc:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="comment">//函数内部定义的函数，其this指向window</span></div><div class="line">    <span class="keyword">var</span> inner =<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">      <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> inner;</div><div class="line">  &#125;</div><div class="line">&#125;;</div><div class="line"><span class="built_in">console</span>.log(object.getNameFunc()());</div><div class="line"><span class="comment">//最后的输出结果为The Window</span></div></pre></td></tr></table></figure>
<p>这个不是闭包，而是普通的变量调用。所以输出为最早的name。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> name = <span class="string">"The Window"</span>;　　</div><div class="line">    <span class="keyword">var</span> object = &#123;　　　　</div><div class="line">      name: <span class="string">"My Object"</span>,</div><div class="line">      getNameFunc: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> that = <span class="keyword">this</span>;</div><div class="line">        <span class="comment">// 除了 this</span></div><div class="line">        <span class="comment">// 其它成员，按照定义时所处的作用域环境沿着作用域链查找</span></div><div class="line">        <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">          <span class="keyword">return</span> that.name;</div><div class="line">        &#125;;</div><div class="line">      &#125;</div><div class="line">    &#125;;</div><div class="line">    <span class="built_in">console</span>.log(object.getNameFunc()());</div></pre></td></tr></table></figure></p>
<p>这个是典型的闭包函数，所以最后的输出结果为My Object。</p>
<p>===============================================================================</p>
<pre><code>我是华丽的分割线
</code></pre><p>===============================================================================</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这个只是我个人学习的一些总结，如有不足欢迎补充。&lt;/p&gt;
&lt;h2 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h2&gt;&lt;p&gt;  闭包，是Javascript比较重要的一个概念。闭包是一个特别抽象的概念
    
    </summary>
    
      <category term="闭包" scheme="http://yoursite.com/categories/%E9%97%AD%E5%8C%85/"/>
    
    
      <category term="闭包" scheme="http://yoursite.com/tags/%E9%97%AD%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>寒窑赋</title>
    <link href="http://yoursite.com/2016/01/19/%E5%AF%92%E7%AA%91%E8%B5%8B/"/>
    <id>http://yoursite.com/2016/01/19/寒窑赋/</id>
    <published>2016-01-18T16:34:14.000Z</published>
    <updated>2017-09-08T03:05:51.360Z</updated>
    
    <content type="html"><![CDATA[<h2 id="作者：吕蒙正"><a href="#作者：吕蒙正" class="headerlink" title="作者：吕蒙正"></a>作者：吕蒙正</h2><h3 id="个人很喜欢的一篇文章，分享一下"><a href="#个人很喜欢的一篇文章，分享一下" class="headerlink" title="个人很喜欢的一篇文章，分享一下"></a>个人很喜欢的一篇文章，分享一下</h3><p>天有不测风云，人有旦夕祸福。<br>蜈蚣百足，行不及蛇；<br>雄鸡两翼，飞不过鸦。<br>马有千里之程，无骑不能自往；<br>人有冲天之志，非运不能自通。<br>盖闻：人生在世，富贵不能淫，贫贱不能移。<br>文章盖世，孔子厄于陈邦；<br>武略超群，太公钓于渭水；<br>颜渊命短，殊非凶恶之徒；<br>盗跖年长，岂是善良之辈。<br>尧帝明圣，却生不肖之儿；<br>瞽叟愚顽，反生大孝之子。<br>张良原是布衣，萧何称谓县吏。<br>晏子身无五尺，封作齐国宰相；<br>孔明卧居草庐，能做蜀汉军师。<br>楚霸虽雄，败于乌江自刎；<br>汉王虽弱，竟有万里江山。<br>李广有射虎之威，到老无封；<br>冯唐有乘龙之才，一生不遇。<br>韩信未遇之时，无一日三餐，<br>及至遇行，腰悬三尺玉印，<br>一旦时衰，死于阴人之手。<br>有先贫而后富，有老壮而少衰。<br>满腹文章，白发竟然不中；<br>才疏学浅，少年及第登科。<br>深院宫娥，运退反为妓妾；<br>风流妓女，时来配做夫人。<br>青春美女，却招愚蠢之夫；<br>俊秀郎君，反配粗丑之妇。<br>蛟龙未遇，潜水于鱼鳖之间；<br>君子失时，拱手小人之下。<br>衣服虽破，常存仪礼之容；<br>面带忧愁，每抱怀安之量。<br>时运不遇，只宜安贫守份；<br>心若不欺，必然扬眉吐气。<br>初贫君子，天然骨骼生成；<br>乍富小人，不脱贫寒肌体。<br>天不得时，日月无光；<br>地不得时，草木不生；<br>水不得时，风浪不平；<br>人不得时，利运不同。<br>注福注禄，命里已安排定，<br>富贵谁不欲？人若不依据根基八字，岂能为卿为相？<br>吾昔居洛阳，朝求僧餐，暮宿破窑，<br>思衣不可遮其体，思食不可济其饥，<br>上人憎，下人厌，人道我贱，非我不弃也。<br>今居朝堂，官至极品，位置三公，<br>身虽鞠躬于一人之下，而列职于千万人之上，<br>有挞百僚之仗，有斩鄙吝之剑，<br>思衣而有罗锦千箱，思食而有珍馐百味，<br>出则壮士执鞭，入则佳人捧觞，<br>上人宠，下人拥。<br>人道我贵，非我只能也。<br>此乃时也，运也，命也。<br>嗟乎！<br>人生在世，富贵不可尽用，贫贱不可自欺，<br>听由天地循环，周而复始焉。  </p>
<h2 id="欢迎点赞交流。"><a href="#欢迎点赞交流。" class="headerlink" title="欢迎点赞交流。"></a>欢迎点赞交流。</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;作者：吕蒙正&quot;&gt;&lt;a href=&quot;#作者：吕蒙正&quot; class=&quot;headerlink&quot; title=&quot;作者：吕蒙正&quot;&gt;&lt;/a&gt;作者：吕蒙正&lt;/h2&gt;&lt;h3 id=&quot;个人很喜欢的一篇文章，分享一下&quot;&gt;&lt;a href=&quot;#个人很喜欢的一篇文章，分享一下&quot; class
    
    </summary>
    
      <category term="文章" scheme="http://yoursite.com/categories/%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="寒窑赋" scheme="http://yoursite.com/tags/%E5%AF%92%E7%AA%91%E8%B5%8B/"/>
    
  </entry>
  
  <entry>
    <title>我想和这个世界说点什么</title>
    <link href="http://yoursite.com/2015/08/19/hello-world/"/>
    <id>http://yoursite.com/2015/08/19/hello-world/</id>
    <published>2015-08-19T00:34:14.000Z</published>
    <updated>2017-09-08T03:06:13.417Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
      <category term="fresh" scheme="http://yoursite.com/categories/fresh/"/>
    
    
      <category term="初始化" scheme="http://yoursite.com/tags/%E5%88%9D%E5%A7%8B%E5%8C%96/"/>
    
  </entry>
  
</feed>
